[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m                                                                                                                                                                                                                                

----------------------------------------------------------------

[37;1m21sh/misc/002-simple-command-line[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell is able to execute a simple command line that contains separators `;`, pipes `|`, and a right redirection `>`.[0m

  Before test:
[38;5;239m  01: rm -rf "./size"
  02: rm -rf "TOKEN201711150551"
  03: echo '^'$(echo TOKEN201711150551_FILE_TOKEN201711150551_STDOUT | wc -c)'$' > "./size"[0m

  STDIN:
[38;5;239m  01: mkdir TOKEN201711150551 ; cd TOKEN201711150551 ; touch TOKEN201711150551_FILE ; ls -1 ; ls | cat | wc -c > TOKEN201711150551_STDOUT ; cat TOKEN201711150551_STDOUT[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711150551_FILE$`[0m
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./size`[0m
[38;5;239m  01: TOKEN201711150551_FILE
  02:       23[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m21sh/pipe/006-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a pipeline command is the same as the last piped process.[0m

  STDIN:
[38;5;239m  01: ./sleep_and_exit_with_status 1 21 | ./exit_with_status 42[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/001-close-stdin[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the closing operator `&-` within the STDIN redirection `<` results in a closed standard input, so that `read(2)` results in a read error.[0m

  Before test:
[38;5;239m  01: rm -f ./read_on_stdin
  02: gcc -Wall -Werror -Wextra "/Users/vcombey/42ShellTester/support/read-on-stdin/main.c" -o ./read_on_stdin[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `STDIN READ ERROR$`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/002-filename[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711150551_LINE_1" > simple_text_file
  02: echo "TOKEN201711150551_LINE_2" >> simple_text_file
  03: echo "TOKEN201711150551_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/003-filename-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.
  The file path is specified in a separated field.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711150551_LINE_1" > simple_text_file
  02: echo "TOKEN201711150551_LINE_2" >> simple_text_file
  03: echo "TOKEN201711150551_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin < 	 simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/004-absolute-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using an absolute path to a file within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711150551_LINE_1" > simple_text_file
  02: echo "TOKEN201711150551_LINE_2" >> simple_text_file
  03: echo "TOKEN201711150551_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin </Users/vcombey/42ShellTester/tmp/simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/005-no-such-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong path within the STDIN redirection `<` results in an error.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file"[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <no_such_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]o such file or directory`[0m
[38;5;239m  01: open: No such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/002-append-stdout-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the standard output is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711150551_first" >append_file_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_stdout TOKEN201711150551_stderr 1>>append_file_stdout[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_stderr`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711150551_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711150551_stdout`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/003-append-stderr-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the standard error is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711150551_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_stdout TOKEN201711150551_stderr 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_stderr`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711150551_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711150551_stderr`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/multiple/001-append-twice-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, each output is appended to different files.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711150551_stdout_first" >append_file_stdout
  02: ./write_on_stdout "TOKEN201711150551_stderr_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_stdout_second TOKEN201711150551_stderr_second 1>>append_file_stdout 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_stdout_second`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_stderr_second`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711150551_stdout_first$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711150551_stdout_second$`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711150551_stderr_first$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711150551_stderr_second$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/002-close-stdout[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard output has the same behavior as redirecting to `/dev/null` (e.g. `ls 1>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_stdout TOKEN201711150551_stderr 1>&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_stderr`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/003-close-stderr[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard error has the same behavior as redirecting to `/dev/null` (e.g. `ls 2>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_stdout TOKEN201711150551_stderr 2>&-[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_stderr`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/001-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A different right redirection may be specified for each output.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr"
  02: rm -f "new_file_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_1 TOKEN201711150551_2 1>new_file_stdout 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stdout` matching_regex `TOKEN201711150551_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` matching_regex `TOKEN201711150551_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/002-together-stdout-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard output is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_1 TOKEN201711150551_2 1>new_file_stderr_and_stdout 2>&1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711150551_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711150551_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/003-together-stderr-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard error is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_1 TOKEN201711150551_2 2>new_file_stderr_and_stdout 1>&2[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711150551_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711150551_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/004-together[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr_and_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_1 TOKEN201711150551_2 &>new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  01: TOKEN201711150551_1[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  01: TOKEN201711150551_2[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711150551_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711150551_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/005-together-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.
  In this test, we specify the file name in a separate field.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_1 TOKEN201711150551_2 &>	  	new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  01: TOKEN201711150551_1[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711150551_2`[0m
[38;5;239m  01: TOKEN201711150551_2[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711150551_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711150551_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/stderr/001-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that redirecting the standard error STDERR to a file `2>` works. In this test, the binary writes a token on each standard and error output, so that only the STDOUT is outputted and STDERR is written in a file `new_file_stderr`.[0m

  Before test:
[38;5;239m  01: rm -f "./new_file_stderr"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711150551_STDOUT TOKEN201711150551_STDERR 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_STDERR`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` matching_regex `TOKEN201711150551_STDERR`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` with_nb_of_lines 1[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/stdout/001-with-explicit-fd[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if '1>' redirect STDIN to a file.
  We are using echo with one argument. The output should NOT return anything on the standard output.[0m

  Before test:
[38;5;239m  01: rm -f new_file[0m

  STDIN:
[38;5;239m  01: /bin/echo TOKEN1 1>new_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex TOKEN1[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file new_file matching_regex TOKEN1[0m
[31m[38;5;160m  FAILURE    expected_to create_file new_file with_nb_of_lines 1[0m

----------------------------------------------------------------

[37;1m21sh/separators/semicolon/003-parse-error-empty-inline-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the simicolon separator `;` with empty commands results in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711150551 ; ; ./exit_with_status 42[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `;'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `42`[0m
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/005-export-empty-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment, but can be displayed with the builtin `export`.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711150551
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: TERM=xterm-256color
  03: SHELL=42sh
  04: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  05: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  06: TERM_PROGRAM_VERSION=3.1.5
  07: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  08: ZSH=/Users/vcombey/.oh-my-zsh
  09: USER=vcombey
  10: COMMAND_MODE=unix2003
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-nord
  18: ITERM_PROFILE=Default
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=7;0
  24: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: SECURITYSESSIONID=186a6
  30: COLORTERM=truecolor
  31: OLDPWD=/Users/vcombey/42ShellTester
  32: _=/Users/vcombey/42/42sh/42sh
  33: HISTFILE=.42sh_history
  34: PS1=$> 
  35: PS2=dquote> 
  36: PS3=quote> [0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/001-invalid-identifier-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export 42=TOKEN201711150551[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: Wrong assignement :: key cannot be fully numeric or contain reserved symbols[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/002-invalid-identifier-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export .=TOKEN201711150551[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/003-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with an illegal option results in an error and a failure exit status.[0m

  STDIN:
[38;5;239m  01: export -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: Wrong option -w[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/002-export-p-param-and-token-should-add-local-var-only-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if export with -p option + token , add the variable into export list but not in env list. And don't display the export variable on stdout.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711150551_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711150551_NAME
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_NAME`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: TERM=xterm-256color
  03: SHELL=42sh
  04: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  05: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  06: TERM_PROGRAM_VERSION=3.1.5
  07: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  08: ZSH=/Users/vcombey/.oh-my-zsh
  09: USER=vcombey
  10: COMMAND_MODE=unix2003
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-nord
  18: ITERM_PROFILE=Default
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=7;0
  24: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: SECURITYSESSIONID=186a6
  30: COLORTERM=truecolor
  31: OLDPWD=/Users/vcombey/42ShellTester
  32: _=/Users/vcombey/42/42sh/42sh
  33: HISTFILE=.42sh_history
  34: PS1=$> 
  35: PS2=dquote> 
  36: PS3=quote> 
  37: TERM_PROGRAM=iTerm.app
  38: TERM=xterm-256color
  39: SHELL=42sh
  40: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  41: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  42: TERM_PROGRAM_VERSION=3.1.5
  43: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  44: ZSH=/Users/vcombey/.oh-my-zsh
  45: USER=vcombey
  46: COMMAND_MODE=unix2003
  47: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  48: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  49: PAGER=less
  50: LSCOLORS=Gxfxcxdxbxegedabagacad
  51: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  52: PWD=/Users/vcombey/42ShellTester/tmp
  53: BASE16_THEME=base16-nord
  54: ITERM_PROFILE=Default
  55: XPC_FLAGS=0x0
  56: XPC_SERVICE_NAME=0
  57: SHLVL=3
  58: HOME=/Users/vcombey
  59: COLORFGBG=7;0
  60: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  61: LESS=-R
  62: LOGNAME=vcombey
  63: LC_CTYPE=UTF-8
  64: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  65: SECURITYSESSIONID=186a6
  66: COLORTERM=truecolor
  67: OLDPWD=/Users/vcombey/42ShellTester
  68: _=/Users/vcombey/42/42sh/42sh
  69: HISTFILE=.42sh_history
  70: PS1=$> 
  71: PS2=dquote> 
  72: PS3=quote> [0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/004-export-n-param[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that using the builtin `export` with option `-n` results in a removed environment variable.[0m

  Before test:
[38;5;239m  01: export TOKEN201711150551_NAME=TOKEN201711150551_VALUE[0m

  STDIN:
[38;5;239m  01: export -n TOKEN201711150551_NAME
  02: export
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711150551_NAME`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: TERM=xterm-256color
  03: SHELL=42sh
  04: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  05: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  06: TERM_PROGRAM_VERSION=3.1.5
  07: OLDPWD=/Users/vcombey/42ShellTester
  08: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: COMMAND_MODE=unix2003
  12: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  13: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  14: PAGER=less
  15: LSCOLORS=Gxfxcxdxbxegedabagacad
  16: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  17: PWD=/Users/vcombey/42ShellTester/tmp
  18: TOKEN201711150551_NAME=TOKEN201711150551_VALUE
  19: BASE16_THEME=base16-nord
  20: ITERM_PROFILE=Default
  21: XPC_FLAGS=0x0
  22: XPC_SERVICE_NAME=0
  23: SHLVL=3
  24: HOME=/Users/vcombey
  25: COLORFGBG=7;0
  26: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  27: LESS=-R
  28: LOGNAME=vcombey
  29: LC_CTYPE=UTF-8
  30: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  31: SECURITYSESSIONID=186a6
  32: COLORTERM=truecolor
  33: _=/Users/vcombey/42/42sh/42sh
  34: HISTFILE=.42sh_history
  35: PS1=$> 
  36: PS2=dquote> 
  37: PS3=quote> 
  38: ------------------------------
  39: TERM_PROGRAM=iTerm.app
  40: TERM=xterm-256color
  41: SHELL=42sh
  42: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  43: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  44: TERM_PROGRAM_VERSION=3.1.5
  45: OLDPWD=/Users/vcombey/42ShellTester
  46: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  47: ZSH=/Users/vcombey/.oh-my-zsh
  48: USER=vcombey
  49: COMMAND_MODE=unix2003
  50: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  51: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  52: PAGER=less
  53: LSCOLORS=Gxfxcxdxbxegedabagacad
  54: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  55: PWD=/Users/vcombey/42ShellTester/tmp
  56: TOKEN201711150551_NAME=TOKEN201711150551_VALUE
  57: BASE16_THEME=base16-nord
  58: ITERM_PROFILE=Default
  59: XPC_FLAGS=0x0
  60: XPC_SERVICE_NAME=0
  61: SHLVL=3
  62: HOME=/Users/vcombey
  63: COLORFGBG=7;0
  64: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  65: LESS=-R
  66: LOGNAME=vcombey
  67: LC_CTYPE=UTF-8
  68: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  69: SECURITYSESSIONID=186a6
  70: COLORTERM=truecolor
  71: _=/Users/vcombey/42/42sh/42sh
  72: HISTFILE=.42sh_history
  73: PS1=$> 
  74: PS2=dquote> 
  75: PS3=quote> 
  76: ------------------------------
  77: TOTAL ENVIRONMENT VARIABLES: 37[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: Wrong option -n[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/002-escaped-inversion-mark[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an inversion mark `!` or `^` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '!' '^'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\!abc]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\^abc][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `!@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `[\^]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[1;33m  WARNING    might match_regex `^!@a@b@c@$`[0m
[31m[1;33m  WARNING    might match_regex `^[\^]@a@b@c@$`[0m
[38;5;239m  01: c@b@a@!@
  02: c@b@a@^@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/003-it-takes-escaped-bracket-as-pattern-character[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a closing bracket ']' may be escaped in a backet expansion pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' ']'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\]def]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\]def]
  03: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\]def]
  04: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\\\]def][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@` 4 times[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@b@c@d@e@f@$`[0m
[38;5;239m  01: [abc]def]@
  02: [abc\]def]@
  03: [abc\\]def]@
  04: [abc\\\]def]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/010-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..z}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@.+@.?@.+@.+@_@.+@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==41051==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200002cad2 at pc 0x0001005879d1 bp 0x7fff5f6ce520 sp 0x7fff5f6ce518
  03: READ of size 1 at 0x60200002cad2 thread T0
  04:     #0 0x1005879d0 in parse_loop wordexp_posix.c:91
  05:     #1 0x1005874a3 in word_expansion wordexp_posix.c:150
  06:     #2 0x10054fffa in exec_cmd_suffix exec_simple_command.c:30
  07:     #3 0x100550c08 in exec_simple_command exec_simple_command.c:124
  08:     #4 0x10054c905 in exec exec.c:39
  09:     #5 0x10054d9b4 in exec_command exec_command.c:20
  10:     #6 0x10054c905 in exec exec.c:39
  11:     #7 0x1005680af in launch_process job_launch.c:58
  12:     #8 0x10056872d in launch_job job_launch.c:95
  13:     #9 0x10054faab in exec_pipeline exec_pipeline.c:80
  14:     #10 0x10054c905 in exec exec.c:39
  15:     #11 0x10054ca51 in exec_and_or exec_and_or.c:13
  16:     #12 0x10054c905 in exec exec.c:39
  17:     #13 0x10054ddb7 in exec_complete_command exec_complete_command.c:45
  18:     #14 0x10054c905 in exec exec.c:39
  19:     #15 0x10054e071 in exec_complete_commands exec_complete_commands.c:10
  20:     #16 0x10054c905 in exec exec.c:39
  21:     #17 0x10054fce9 in exec_program exec_program.c:10
  22:     #18 0x10054c905 in exec exec.c:39
  23:     #19 0x10054ad85 in exec_main_loop lex_and_parse.c:18
  24:     #20 0x10054b559 in lex_and_parse lex_and_parse.c:79
  25:     #21 0x10054bd7e in main_loop main_loop.c:72
  26:     #22 0x1005316ab in main main.c:69
  27:     #23 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  28: 
  29: 0x60200002cad2 is located 0 bytes to the right of 2-byte region [0x60200002cad0,0x60200002cad2)
  30: allocated by thread T0 here:
  31:     #0 0x100716f3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  32:     #1 0x100591fbf in ft_memalloc ft_memalloc.c:17
  33:     #2 0x10059781c in ft_strnew ft_strnew.c:8
  34:     #3 0x100596bc9 in ft_strjoin3_free ft_strjoin3_free.c:26
  35:     #4 0x100558434 in curly_brackets_range_alpha curly_brackets_range.c:18
  36:     #5 0x100558f3f in curly_brackets_range curly_brackets_range.c:71
  37:     #6 0x100556fc7 in curly_brackets curly_brackets.c:124
  38:     #7 0x100557656 in expand_curly_brackets curly_brackets.c:136
  39:     #8 0x100587724 in brace_expension wordexp_posix.c:69
  40:     #9 0x1005873f5 in word_expansion wordexp_posix.c:146
  41:     #10 0x10054fffa in exec_cmd_suffix exec_simple_command.c:30
  42:     #11 0x100550c08 in exec_simple_command exec_simple_command.c:124
  43:     #12 0x10054c905 in exec exec.c:39
  44:     #13 0x10054d9b4 in exec_command exec_command.c:20
  45:     #14 0x10054c905 in exec exec.c:39
  46:     #15 0x1005680af in launch_process job_launch.c:58
  47:     #16 0x10056872d in launch_job job_launch.c:95
  48:     #17 0x10054faab in exec_pipeline exec_pipeline.c:80
  49:     #18 0x10054c905 in exec exec.c:39
  50:     #19 0x10054ca51 in exec_and_or exec_and_or.c:13
  51:     #20 0x10054c905 in exec exec.c:39
  52:     #21 0x10054ddb7 in exec_complete_command exec_complete_command.c:45
  53:     #22 0x10054c905 in exec exec.c:39
  54:     #23 0x10054e071 in exec_complete_commands exec_complete_commands.c:10
  55:     #24 0x10054c905 in exec exec.c:39
  56:     #25 0x10054fce9 in exec_program exec_program.c:10
  57:     #26 0x10054c905 in exec exec.c:39
  58:     #27 0x10054ad85 in exec_main_loop lex_and_parse.c:18
  59:     #28 0x10054b559 in lex_and_parse lex_and_parse.c:79
  60:     #29 0x10054bd7e in main_loop main_loop.c:72
  61: 
  62: SUMMARY: AddressSanitizer: heap-buffer-overflow wordexp_posix.c:91 in parse_loop
  63: Shadow bytes around the buggy address:
  64:   0x1c0400005900: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  65:   0x1c0400005910: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  66:   0x1c0400005920: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  67:   0x1c0400005930: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  68:   0x1c0400005940: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  69: =>0x1c0400005950: fa fa 02 fa fa fa fd fd fa fa[02]fa fa fa fd fd
  70:   0x1c0400005960: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  71:   0x1c0400005970: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  72:   0x1c0400005980: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  73:   0x1c0400005990: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  74:   0x1c04000059a0: fa fa 02 fa fa fa fd fd fa fa 02 fa fa fa fd fd
  75: Shadow byte legend (one shadow byte represents 8 application bytes):
  76:   Addressable:           00
  77:   Partially addressable: 01 02 03 04 05 06 07 
  78:   Heap left redzone:       fa
  79:   Freed heap region:       fd
  80:   Stack left redzone:      f1
  81:   Stack mid redzone:       f2
  82:   Stack right redzone:     f3
  83:   Stack after return:      f5
  84:   Stack use after scope:   f8
  85:   Global redzone:          f9
  86:   Global init order:       f6
  87:   Poisoned by user:        f7
  88:   Container overflow:      fc
  89:   Array cookie:            ac
  90:   Intra object redzone:    bb
  91:   ASan internal:           fe
  92:   Left alloca redzone:     ca
  93:   Right alloca redzone:    cb
  94: ==41051==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/002-simple-test-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed when at least one comma `,` is encountered.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711150551_A,TOKEN201711150551_B}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_A@TOKEN201711150551_B@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==41822==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300002db49 at pc 0x00010fb7441d bp 0x7fff500b12f0 sp 0x7fff500b12e8
  03: READ of size 1 at 0x60300002db49 thread T0
  04:     #0 0x10fb7441c in get_start_bracket curly_brackets.c:88
  05:     #1 0x10fb73e8c in curly_brackets curly_brackets.c:113
  06:     #2 0x10fb73db6 in curly_brackets_coma curly_brackets.c:15
  07:     #3 0x10fb73fff in curly_brackets curly_brackets.c:126
  08:     #4 0x10fb74656 in expand_curly_brackets curly_brackets.c:136
  09:     #5 0x10fba4724 in brace_expension wordexp_posix.c:69
  10:     #6 0x10fba43f5 in word_expansion wordexp_posix.c:146
  11:     #7 0x10fb6cffa in exec_cmd_suffix exec_simple_command.c:30
  12:     #8 0x10fb6dc08 in exec_simple_command exec_simple_command.c:124
  13:     #9 0x10fb69905 in exec exec.c:39
  14:     #10 0x10fb6a9b4 in exec_command exec_command.c:20
  15:     #11 0x10fb69905 in exec exec.c:39
  16:     #12 0x10fb850af in launch_process job_launch.c:58
  17:     #13 0x10fb8572d in launch_job job_launch.c:95
  18:     #14 0x10fb6caab in exec_pipeline exec_pipeline.c:80
  19:     #15 0x10fb69905 in exec exec.c:39
  20:     #16 0x10fb69a51 in exec_and_or exec_and_or.c:13
  21:     #17 0x10fb69905 in exec exec.c:39
  22:     #18 0x10fb6adb7 in exec_complete_command exec_complete_command.c:45
  23:     #19 0x10fb69905 in exec exec.c:39
  24:     #20 0x10fb6b071 in exec_complete_commands exec_complete_commands.c:10
  25:     #21 0x10fb69905 in exec exec.c:39
  26:     #22 0x10fb6cce9 in exec_program exec_program.c:10
  27:     #23 0x10fb69905 in exec exec.c:39
  28:     #24 0x10fb67d85 in exec_main_loop lex_and_parse.c:18
  29:     #25 0x10fb68559 in lex_and_parse lex_and_parse.c:79
  30:     #26 0x10fb68d7e in main_loop main_loop.c:72
  31:     #27 0x10fb4e6ab in main main.c:69
  32:     #28 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: 0x60300002db49 is located 21 bytes to the right of 20-byte region [0x60300002db20,0x60300002db34)
  35: allocated by thread T0 here:
  36:     #0 0x10fd35f3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  37:     #1 0x10fbaefbf in ft_memalloc ft_memalloc.c:17
  38:     #2 0x10fbb481c in ft_strnew ft_strnew.c:8
  39:     #3 0x10fbb3bc9 in ft_strjoin3_free ft_strjoin3_free.c:26
  40:     #4 0x10fb73d9f in curly_brackets_coma curly_brackets.c:16
  41:     #5 0x10fb73fff in curly_brackets curly_brackets.c:126
  42:     #6 0x10fb74656 in expand_curly_brackets curly_brackets.c:136
  43:     #7 0x10fba4724 in brace_expension wordexp_posix.c:69
  44:     #8 0x10fba43f5 in word_expansion wordexp_posix.c:146
  45:     #9 0x10fb6cffa in exec_cmd_suffix exec_simple_command.c:30
  46:     #10 0x10fb6dc08 in exec_simple_command exec_simple_command.c:124
  47:     #11 0x10fb69905 in exec exec.c:39
  48:     #12 0x10fb6a9b4 in exec_command exec_command.c:20
  49:     #13 0x10fb69905 in exec exec.c:39
  50:     #14 0x10fb850af in launch_process job_launch.c:58
  51:     #15 0x10fb8572d in launch_job job_launch.c:95
  52:     #16 0x10fb6caab in exec_pipeline exec_pipeline.c:80
  53:     #17 0x10fb69905 in exec exec.c:39
  54:     #18 0x10fb69a51 in exec_and_or exec_and_or.c:13
  55:     #19 0x10fb69905 in exec exec.c:39
  56:     #20 0x10fb6adb7 in exec_complete_command exec_complete_command.c:45
  57:     #21 0x10fb69905 in exec exec.c:39
  58:     #22 0x10fb6b071 in exec_complete_commands exec_complete_commands.c:10
  59:     #23 0x10fb69905 in exec exec.c:39
  60:     #24 0x10fb6cce9 in exec_program exec_program.c:10
  61:     #25 0x10fb69905 in exec exec.c:39
  62:     #26 0x10fb67d85 in exec_main_loop lex_and_parse.c:18
  63:     #27 0x10fb68559 in lex_and_parse lex_and_parse.c:79
  64:     #28 0x10fb68d7e in main_loop main_loop.c:72
  65:     #29 0x10fb4e6ab in main main.c:69
  66: 
  67: SUMMARY: AddressSanitizer: heap-buffer-overflow curly_brackets.c:88 in get_start_bracket
  68: Shadow bytes around the buggy address:
  69:   0x1c0600005b10: fd fd fd fa fa fa fd fd fd fd fa fa fd fd fd fa
  70:   0x1c0600005b20: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd
  71:   0x1c0600005b30: fd fa fa fa fd fd fd fd fa fa fd fd fd fd fa fa
  72:   0x1c0600005b40: fd fd fd fa fa fa fd fd fd fd fa fa fd fd fd fd
  73:   0x1c0600005b50: fa fa 00 00 00 fa fa fa 00 00 04 fa fa fa 00 00
  74: =>0x1c0600005b60: 04 fa fa fa 00 00 04 fa fa[fa]fa fa fa fa fa fa
  75:   0x1c0600005b70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  76:   0x1c0600005b80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  77:   0x1c0600005b90: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  78:   0x1c0600005ba0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  79:   0x1c0600005bb0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  80: Shadow byte legend (one shadow byte represents 8 application bytes):
  81:   Addressable:           00
  82:   Partially addressable: 01 02 03 04 05 06 07 
  83:   Heap left redzone:       fa
  84:   Freed heap region:       fd
  85:   Stack left redzone:      f1
  86:   Stack mid redzone:       f2
  87:   Stack right redzone:     f3
  88:   Stack after return:      f5
  89:   Stack use after scope:   f8
  90:   Global redzone:          f9
  91:   Global init order:       f6
  92:   Poisoned by user:        f7
  93:   Container overflow:      fc
  94:   Array cookie:            ac
  95:   Intra object redzone:    bb
  96:   ASan internal:           fe
  97:   Left alloca redzone:     ca
  98:   Right alloca redzone:    cb
  99: ==41822==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/003-simple-test-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed with a list of three patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711150551_A,TOKEN201711150551_B,TOKEN201711150551_C}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_A@TOKEN201711150551_B@TOKEN201711150551_C@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==41957==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300002db8d at pc 0x000104b0741d bp 0x7fff5b11e2f0 sp 0x7fff5b11e2e8
  03: READ of size 1 at 0x60300002db8d thread T0
  04:     #0 0x104b0741c in get_start_bracket curly_brackets.c:88
  05:     #1 0x104b06e8c in curly_brackets curly_brackets.c:113
  06:     #2 0x104b06db6 in curly_brackets_coma curly_brackets.c:15
  07:     #3 0x104b06fff in curly_brackets curly_brackets.c:126
  08:     #4 0x104b07656 in expand_curly_brackets curly_brackets.c:136
  09:     #5 0x104b37724 in brace_expension wordexp_posix.c:69
  10:     #6 0x104b373f5 in word_expansion wordexp_posix.c:146
  11:     #7 0x104affffa in exec_cmd_suffix exec_simple_command.c:30
  12:     #8 0x104b00c08 in exec_simple_command exec_simple_command.c:124
  13:     #9 0x104afc905 in exec exec.c:39
  14:     #10 0x104afd9b4 in exec_command exec_command.c:20
  15:     #11 0x104afc905 in exec exec.c:39
  16:     #12 0x104b180af in launch_process job_launch.c:58
  17:     #13 0x104b1872d in launch_job job_launch.c:95
  18:     #14 0x104affaab in exec_pipeline exec_pipeline.c:80
  19:     #15 0x104afc905 in exec exec.c:39
  20:     #16 0x104afca51 in exec_and_or exec_and_or.c:13
  21:     #17 0x104afc905 in exec exec.c:39
  22:     #18 0x104afddb7 in exec_complete_command exec_complete_command.c:45
  23:     #19 0x104afc905 in exec exec.c:39
  24:     #20 0x104afe071 in exec_complete_commands exec_complete_commands.c:10
  25:     #21 0x104afc905 in exec exec.c:39
  26:     #22 0x104affce9 in exec_program exec_program.c:10
  27:     #23 0x104afc905 in exec exec.c:39
  28:     #24 0x104afad85 in exec_main_loop lex_and_parse.c:18
  29:     #25 0x104afb559 in lex_and_parse lex_and_parse.c:79
  30:     #26 0x104afbd7e in main_loop main_loop.c:72
  31:     #27 0x104ae16ab in main main.c:69
  32:     #28 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: Address 0x60300002db8d is a wild pointer.
  35: SUMMARY: AddressSanitizer: heap-buffer-overflow curly_brackets.c:88 in get_start_bracket
  36: Shadow bytes around the buggy address:
  37:   0x1c0600005b20: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd
  38:   0x1c0600005b30: fd fa fa fa fd fd fd fd fa fa fd fd fd fd fa fa
  39:   0x1c0600005b40: fd fd fd fa fa fa fd fd fd fd fa fa fd fd fd fd
  40:   0x1c0600005b50: fa fa 00 00 00 00 fa fa 00 00 04 fa fa fa 00 00
  41:   0x1c0600005b60: 04 fa fa fa 00 00 04 fa fa fa 00 00 04 fa fa fa
  42: =>0x1c0600005b70: fa[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  43:   0x1c0600005b80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  44:   0x1c0600005b90: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  45:   0x1c0600005ba0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  46:   0x1c0600005bb0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  47:   0x1c0600005bc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  48: Shadow byte legend (one shadow byte represents 8 application bytes):
  49:   Addressable:           00
  50:   Partially addressable: 01 02 03 04 05 06 07 
  51:   Heap left redzone:       fa
  52:   Freed heap region:       fd
  53:   Stack left redzone:      f1
  54:   Stack mid redzone:       f2
  55:   Stack right redzone:     f3
  56:   Stack after return:      f5
  57:   Stack use after scope:   f8
  58:   Global redzone:          f9
  59:   Global init order:       f6
  60:   Poisoned by user:        f7
  61:   Container overflow:      fc
  62:   Array cookie:            ac
  63:   Intra object redzone:    bb
  64:   ASan internal:           fe
  65:   Left alloca redzone:     ca
  66:   Right alloca redzone:    cb
  67: ==41957==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/001-range-and-char[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with a range and 2 characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '1' '2' '3' 'a' 'b' 'z' 'C' '-' '[a-z-2]' 'a-z-2'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z-2][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a-z-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-z-2@`[0m
[31m[1;33m  WARNING    might match_regex `^-@2@a@b@z@$`[0m
[38;5;239m  01: z@b@a@2@-@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/002-reverse-range-and-chars[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with 2 patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a4' 'a3' 'a2' 'a42' 'a[42]' 'z4' 'z3' 'z2' 'z42' 'z[42]' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-y][42]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-y][42][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `42@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `z4@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `z2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z[[]42]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]42]@`[0m
[31m[1;33m  WARNING    might match_regex `^42@z2@z4@$`[0m
[38;5;239m  01: z4@z2@42@
  02: a4@a2@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/003-reverse-multi-hard[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check how the value inside multiple brackets are parsed with bracket as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '][' 'a[' '1['[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!]az][[]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^]az][[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `][[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]@`[0m
[31m[1;33m  WARNING    might match_regex `^1[[]@$`[0m
[38;5;239m  01: [!]az][[]@
  02: [^]az][[]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/004-simple-bracket+char+range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to control if 2 patterns splited by a minus characters can be match.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a-0' 'a-1' 'a-2' 'b-0' 'b-1' 'b-2' 'Z-0' 'Z-1' 'Z-2' 'a1' 'Z9' 'D4'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [aZ]-[1-9][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `Z-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `Z-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `D4@`[0m
[31m[1;33m  WARNING    might match_regex `^Z-1@Z-2@a-1@a-2@$`[0m
[38;5;239m  01: Z-2@Z-1@a-2@a-1@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/001-simple-opposit-match[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' '1' 'Z' 'd' 'e' 'f' 'def'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a1Z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a1Z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def@`[0m
[31m[1;33m  WARNING    might match_regex `^d@e@f@$`[0m
[38;5;239m  01: f@e@d@
  02: Z@a@1@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/002-simple-opposite-range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'z' '1' '2' '3' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `42@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@3@$`[0m
[38;5;239m  01: 3@2@1@
  02: z@c@b@a@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/001-alpha-range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[a-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'f' 'z' 'A' '1' '[a-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `A@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@f@z@$`[0m
[38;5;239m  01: z@f@a@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/002-numeric-range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[0-9]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '4' '2' '1' '9' 'a' 'C' '[0-9]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [0-9][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `4@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]0-9]@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@4@9@$`[0m
[38;5;239m  01: 9@4@2@1@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/003-ascii-range-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the bracket expansion works with the following pattern []-z].
  One test use the following range which is the default range for bash:
  < > , ; : ! ' " ( ) [ ] { } @ $ \ # % 1 2 3 4 5 6 7 8 9 a A b B c C d D e E f F g G h H i I j J k K l L m M n N o O p P q Q r R s S t T u U v V w W x X y Y z
  The other use the ascii value, which does make more sense.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' '[' ']' '[]-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@c@$`[0m
[38;5;239m  01: []-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/004-ascii-range-2[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[1-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' ']' '[' '[1-z]' '1-z' '-'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [1-z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1-z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]1-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^2@B@Z@[[]@]@a@c@$`[0m
[38;5;239m  01: Z@c@B@a@]@[@2@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/001-simple-list[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a simple list of characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '[bca]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [bca][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]bca]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@b@c@$`[0m
[38;5;239m  01: c@b@a@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/003-brackets-as-pattern[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` and a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' ']' 'a' 'Z' '[][]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [][][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@]@$`[0m
[38;5;239m  01: [][]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/004-multi-bracket-multi-char[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to match a file name which contain a bracket as first character.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 21 23 24 25 26 27 28 29 ']' '[' '[12][34]' '1234'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [12][34][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `13@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `14@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `23@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `24@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `0[0-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]12][[]34]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1234@`[0m
[31m[1;33m  WARNING    might match_regex `^13@14@23@24@$`[0m
[38;5;239m  01: 24@23@14@13@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/002-closing-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch ']' '[]]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@$`[0m
[38;5;239m  01: []]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/001-declare-and-expand-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring and expanding a local variable does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_NAME=TOKEN201711150551_VALUE
  02: ./write_on_stdout_and_stderr $TOKEN201711150551_NAME $TOKEN201711150551_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_VALUE$`[0m
[38;5;239m  01: =================================================================
  02: ==47140==ERROR: AddressSanitizer: heap-use-after-free on address 0x60300002d490 at pc 0x000104f6ac44 bp 0x7fff5acfab60 sp 0x7fff5acfab58
  03: READ of size 1 at 0x60300002d490 thread T0
  04:     #0 0x104f6ac43 in ft_count_words ft_strsplit.c:12
  05:     #1 0x104f6ab0b in ft_strsplit ft_strsplit.c:84
  06:     #2 0x104f5c4d8 in handle_fieldsplitting handle_fieldsplitting.c:34
  07:     #3 0x104f5593a in parse_param parse_dollar.c:91
  08:     #4 0x104f5650d in parse_dollars parse_dollar.c:140
  09:     #5 0x104f5b153 in parse_loop wordexp_posix.c:115
  10:     #6 0x104f5a4a3 in word_expansion wordexp_posix.c:150
  11:     #7 0x104f22ffa in exec_cmd_suffix exec_simple_command.c:30
  12:     #8 0x104f230f1 in exec_cmd_suffix exec_simple_command.c:36
  13:     #9 0x104f23c08 in exec_simple_command exec_simple_command.c:124
  14:     #10 0x104f1f905 in exec exec.c:39
  15:     #11 0x104f209b4 in exec_command exec_command.c:20
  16:     #12 0x104f1f905 in exec exec.c:39
  17:     #13 0x104f3b0af in launch_process job_launch.c:58
  18:     #14 0x104f3b72d in launch_job job_launch.c:95
  19:     #15 0x104f22aab in exec_pipeline exec_pipeline.c:80
  20:     #16 0x104f1f905 in exec exec.c:39
  21:     #17 0x104f1fa51 in exec_and_or exec_and_or.c:13
  22:     #18 0x104f1f905 in exec exec.c:39
  23:     #19 0x104f20db7 in exec_complete_command exec_complete_command.c:45
  24:     #20 0x104f1f905 in exec exec.c:39
  25:     #21 0x104f210f4 in exec_complete_commands exec_complete_commands.c:12
  26:     #22 0x104f1f905 in exec exec.c:39
  27:     #23 0x104f22ce9 in exec_program exec_program.c:10
  28:     #24 0x104f1f905 in exec exec.c:39
  29:     #25 0x104f1dd85 in exec_main_loop lex_and_parse.c:18
  30:     #26 0x104f1e559 in lex_and_parse lex_and_parse.c:79
  31:     #27 0x104f1ed7e in main_loop main_loop.c:72
  32:     #28 0x104f046ab in main main.c:69
  33:     #29 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  34: 
  35: 0x60300002d490 is located 0 bytes inside of 24-byte region [0x60300002d490,0x60300002d4a8)
  36: freed by thread T0 here:
  37:     #0 0x1050eb106 in wrap_free (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x59106)
  38:     #1 0x104f55949 in parse_param parse_dollar.c:92
  39:     #2 0x104f5650d in parse_dollars parse_dollar.c:140
  40:     #3 0x104f5b153 in parse_loop wordexp_posix.c:115
  41:     #4 0x104f5a4a3 in word_expansion wordexp_posix.c:150
  42:     #5 0x104f22ffa in exec_cmd_suffix exec_simple_command.c:30
  43:     #6 0x104f23c08 in exec_simple_command exec_simple_command.c:124
  44:     #7 0x104f1f905 in exec exec.c:39
  45:     #8 0x104f209b4 in exec_command exec_command.c:20
  46:     #9 0x104f1f905 in exec exec.c:39
  47:     #10 0x104f3b0af in launch_process job_launch.c:58
  48:     #11 0x104f3b72d in launch_job job_launch.c:95
  49:     #12 0x104f22aab in exec_pipeline exec_pipeline.c:80
  50:     #13 0x104f1f905 in exec exec.c:39
  51:     #14 0x104f1fa51 in exec_and_or exec_and_or.c:13
  52:     #15 0x104f1f905 in exec exec.c:39
  53:     #16 0x104f20db7 in exec_complete_command exec_complete_command.c:45
  54:     #17 0x104f1f905 in exec exec.c:39
  55:     #18 0x104f210f4 in exec_complete_commands exec_complete_commands.c:12
  56:     #19 0x104f1f905 in exec exec.c:39
  57:     #20 0x104f22ce9 in exec_program exec_program.c:10
  58:     #21 0x104f1f905 in exec exec.c:39
  59:     #22 0x104f1dd85 in exec_main_loop lex_and_parse.c:18
  60:     #23 0x104f1e559 in lex_and_parse lex_and_parse.c:79
  61:     #24 0x104f1ed7e in main_loop main_loop.c:72
  62:     #25 0x104f046ab in main main.c:69
  63:     #26 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  64: 
  65: previously allocated by thread T0 here:
  66:     #0 0x1050eaf3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  67:     #1 0x104f6646f in palloc palloc.c:16
  68:     #2 0x104f692fb in ft_strdup ft_strdup.c:14
  69:     #3 0x104f191dd in create_local t_local.c:13
  70:     #4 0x104f18790 in local_add_from_key_value local_add.c:11
  71:     #5 0x104f1892c in local_add_from_string local_add.c:28
  72:     #6 0x104f18c1a in local_add_change_from_string local_add.c:60
  73:     #7 0x104f2327a in exec_assignment_word exec_simple_command.c:54
  74:     #8 0x104f234eb in exec_cmd_prefix exec_simple_command.c:72
  75:     #9 0x104f23589 in exec_cmd_prefix exec_simple_command.c:76
  76:     #10 0x104f23a1e in exec_simple_command exec_simple_command.c:111
  77:     #11 0x104f1f905 in exec exec.c:39
  78:     #12 0x104f209b4 in exec_command exec_command.c:20
  79:     #13 0x104f1f905 in exec exec.c:39
  80:     #14 0x104f220c5 in exec_pipe_sequence exec_pipe_sequence.c:9
  81:     #15 0x104f1f905 in exec exec.c:39
  82:     #16 0x104f22b1e in exec_pipeline exec_pipeline.c:84
  83:     #17 0x104f1f905 in exec exec.c:39
  84:     #18 0x104f1fa51 in exec_and_or exec_and_or.c:13
  85:     #19 0x104f1f905 in exec exec.c:39
  86:     #20 0x104f20db7 in exec_complete_command exec_complete_command.c:45
  87:     #21 0x104f1f905 in exec exec.c:39
  88:     #22 0x104f21071 in exec_complete_commands exec_complete_commands.c:10
  89:     #23 0x104f1f905 in exec exec.c:39
  90:     #24 0x104f210b3 in exec_complete_commands exec_complete_commands.c:11
  91:     #25 0x104f1f905 in exec exec.c:39
  92:     #26 0x104f22ce9 in exec_program exec_program.c:10
  93:     #27 0x104f1f905 in exec exec.c:39
  94:     #28 0x104f1dd85 in exec_main_loop lex_and_parse.c:18
  95:     #29 0x104f1e559 in lex_and_parse lex_and_parse.c:79
  96: 
  97: SUMMARY: AddressSanitizer: heap-use-after-free ft_strsplit.c:12 in ft_count_words
  98: Shadow bytes around the buggy address:
  99:   0x1c0600005a40: 00 fa fa fa 00 00 00 fa fa fa fd fd fd fa fa fa
  100:   0x1c0600005a50: 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa
  101:   0x1c0600005a60: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa fd fd
  102:   0x1c0600005a70: fd fa fa fa fd fd fd fa fa fa 00 00 00 07 fa fa
  103:   0x1c0600005a80: fd fd fd fd fa fa fd fd fd fa fa fa 00 00 07 fa
  104: =>0x1c0600005a90: fa fa[fd]fd fd fa fa fa 00 00 00 fa fa fa fd fd
  105:   0x1c0600005aa0: fd fa fa fa fd fd fd fa fa fa 00 00 00 07 fa fa
  106:   0x1c0600005ab0: fd fd fd fd fa fa fd fd fd fa fa fa 00 00 07 fa
  107:   0x1c0600005ac0: fa fa 00 00 00 fa fa fa 00 00 00 05 fa fa fd fd
  108:   0x1c0600005ad0: fd fa fa fa fd fd fd fa fa fa fd fd fd fd fa fa
  109:   0x1c0600005ae0: fd fd fd fd fa fa fd fd fd fa fa fa fd fd fd fa
  110: Shadow byte legend (one shadow byte represents 8 application bytes):
  111:   Addressable:           00
  112:   Partially addressable: 01 02 03 04 05 06 07 
  113:   Heap left redzone:       fa
  114:   Freed heap region:       fd
  115:   Stack left redzone:      f1
  116:   Stack mid redzone:       f2
  117:   Stack right redzone:     f3
  118:   Stack after return:      f5
  119:   Stack use after scope:   f8
  120:   Global redzone:          f9
  121:   Global init order:       f6
  122:   Poisoned by user:        f7
  123:   Container overflow:      fc
  124:   Array cookie:            ac
  125:   Intra object redzone:    bb
  126:   ASan internal:           fe
  127:   Left alloca redzone:     ca
  128:   Right alloca redzone:    cb
  129: ==47140==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/004-existing-variable-in-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711150551_NAME=TOKEN201711150551_VALUE_OLD"[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_NAME=TOKEN201711150551_VALUE_NEW
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_NAME=TOKEN201711150551_VALUE_NEW$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `^TOKEN201711150551_NAME=TOKEN201711150551_VALUE_OLD$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  07: TERM_PROGRAM_VERSION=3.1.5
  08: OLDPWD=/Users/vcombey/42ShellTester
  09: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: USER=vcombey
  12: COMMAND_MODE=unix2003
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  14: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  15: PAGER=less
  16: LSCOLORS=Gxfxcxdxbxegedabagacad
  17: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  18: PWD=/Users/vcombey/42ShellTester/tmp
  19: TOKEN201711150551_NAME=TOKEN201711150551_VALUE_OLD
  20: BASE16_THEME=base16-nord
  21: ITERM_PROFILE=Default
  22: XPC_FLAGS=0x0
  23: XPC_SERVICE_NAME=0
  24: SHLVL=3
  25: HOME=/Users/vcombey
  26: COLORFGBG=7;0
  27: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  28: LESS=-R
  29: LOGNAME=vcombey
  30: LC_CTYPE=UTF-8
  31: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  32: SECURITYSESSIONID=186a6
  33: COLORTERM=truecolor
  34: _=/Users/vcombey/42/42sh/42sh
  35: HISTFILE=.42sh_history
  36: PS1=$> 
  37: PS2=dquote> 
  38: PS3=quote> 
  39: ------------------------------
  40: TOTAL ENVIRONMENT VARIABLES: 37[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/005-existing-variable-in-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711150551_NAME=TOKEN201711150551_VALUE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_NAME=$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `^TOKEN201711150551_NAME=TOKEN201711150551_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  07: TERM_PROGRAM_VERSION=3.1.5
  08: OLDPWD=/Users/vcombey/42ShellTester
  09: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: USER=vcombey
  12: COMMAND_MODE=unix2003
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  14: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  15: PAGER=less
  16: LSCOLORS=Gxfxcxdxbxegedabagacad
  17: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  18: PWD=/Users/vcombey/42ShellTester/tmp
  19: TOKEN201711150551_NAME=TOKEN201711150551_VALUE
  20: BASE16_THEME=base16-nord
  21: ITERM_PROFILE=Default
  22: XPC_FLAGS=0x0
  23: XPC_SERVICE_NAME=0
  24: SHLVL=3
  25: HOME=/Users/vcombey
  26: COLORFGBG=7;0
  27: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  28: LESS=-R
  29: LOGNAME=vcombey
  30: LC_CTYPE=UTF-8
  31: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  32: SECURITYSESSIONID=186a6
  33: COLORTERM=truecolor
  34: _=/Users/vcombey/42/42sh/42sh
  35: HISTFILE=.42sh_history
  36: PS1=$> 
  37: PS2=dquote> 
  38: PS3=quote> 
  39: ------------------------------
  40: TOTAL ENVIRONMENT VARIABLES: 37[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/007-multiple-declaration-at-a-time[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring multiple variables in the same command line does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_NAME1=TOKEN201711150551_VALUE1 TOKEN201711150551_NAME2=TOKEN201711150551_VALUE2 TOKEN201711150551_NAME3=TOKEN201711150551_VALUE3
  02: ./write_on_stdout_and_stderr $TOKEN201711150551_NAME1 $TOKEN201711150551_NAME1
  03: ./write_on_stdout $TOKEN201711150551_NAME2
  04: ./write_on_stderr $TOKEN201711150551_NAME3[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201711150551_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711150551_VALUE3$`[0m
[38;5;239m  01: TOKEN201711150551_VALUE2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711150551_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201711150551_VALUE3$`[0m
[38;5;239m  01: =================================================================
  02: ==47932==ERROR: AddressSanitizer: heap-use-after-free on address 0x60300002e090 at pc 0x000103f1ac44 bp 0x7fff5bd4aa00 sp 0x7fff5bd4a9f8
  03: READ of size 1 at 0x60300002e090 thread T0
  04:     #0 0x103f1ac43 in ft_count_words ft_strsplit.c:12
  05:     #1 0x103f1ab0b in ft_strsplit ft_strsplit.c:84
  06:     #2 0x103f0c4d8 in handle_fieldsplitting handle_fieldsplitting.c:34
  07:     #3 0x103f0593a in parse_param parse_dollar.c:91
  08:     #4 0x103f0650d in parse_dollars parse_dollar.c:140
  09:     #5 0x103f0b153 in parse_loop wordexp_posix.c:115
  10:     #6 0x103f0a4a3 in word_expansion wordexp_posix.c:150
  11:     #7 0x103ed2ffa in exec_cmd_suffix exec_simple_command.c:30
  12:     #8 0x103ed30f1 in exec_cmd_suffix exec_simple_command.c:36
  13:     #9 0x103ed3c08 in exec_simple_command exec_simple_command.c:124
  14:     #10 0x103ecf905 in exec exec.c:39
  15:     #11 0x103ed09b4 in exec_command exec_command.c:20
  16:     #12 0x103ecf905 in exec exec.c:39
  17:     #13 0x103eeb0af in launch_process job_launch.c:58
  18:     #14 0x103eeb72d in launch_job job_launch.c:95
  19:     #15 0x103ed2aab in exec_pipeline exec_pipeline.c:80
  20:     #16 0x103ecf905 in exec exec.c:39
  21:     #17 0x103ecfa51 in exec_and_or exec_and_or.c:13
  22:     #18 0x103ecf905 in exec exec.c:39
  23:     #19 0x103ed0db7 in exec_complete_command exec_complete_command.c:45
  24:     #20 0x103ecf905 in exec exec.c:39
  25:     #21 0x103ed10f4 in exec_complete_commands exec_complete_commands.c:12
  26:     #22 0x103ecf905 in exec exec.c:39
  27:     #23 0x103ed10b3 in exec_complete_commands exec_complete_commands.c:11
  28:     #24 0x103ecf905 in exec exec.c:39
  29:     #25 0x103ed10b3 in exec_complete_commands exec_complete_commands.c:11
  30:     #26 0x103ecf905 in exec exec.c:39
  31:     #27 0x103ed2ce9 in exec_program exec_program.c:10
  32:     #28 0x103ecf905 in exec exec.c:39
  33:     #29 0x103ecdd85 in exec_main_loop lex_and_parse.c:18
  34:     #30 0x103ece559 in lex_and_parse lex_and_parse.c:79
  35:     #31 0x103eced7e in main_loop main_loop.c:72
  36:     #32 0x103eb46ab in main main.c:69
  37:     #33 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  38: 
  39: 0x60300002e090 is located 0 bytes inside of 25-byte region [0x60300002e090,0x60300002e0a9)
  40: freed by thread T0 here:
  41:     #0 0x104096106 in wrap_free (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x59106)
  42:     #1 0x103f05949 in parse_param parse_dollar.c:92
  43:     #2 0x103f0650d in parse_dollars parse_dollar.c:140
  44:     #3 0x103f0b153 in parse_loop wordexp_posix.c:115
  45:     #4 0x103f0a4a3 in word_expansion wordexp_posix.c:150
  46:     #5 0x103ed2ffa in exec_cmd_suffix exec_simple_command.c:30
  47:     #6 0x103ed3c08 in exec_simple_command exec_simple_command.c:124
  48:     #7 0x103ecf905 in exec exec.c:39
  49:     #8 0x103ed09b4 in exec_command exec_command.c:20
  50:     #9 0x103ecf905 in exec exec.c:39
  51:     #10 0x103eeb0af in launch_process job_launch.c:58
  52:     #11 0x103eeb72d in launch_job job_launch.c:95
  53:     #12 0x103ed2aab in exec_pipeline exec_pipeline.c:80
  54:     #13 0x103ecf905 in exec exec.c:39
  55:     #14 0x103ecfa51 in exec_and_or exec_and_or.c:13
  56:     #15 0x103ecf905 in exec exec.c:39
  57:     #16 0x103ed0db7 in exec_complete_command exec_complete_command.c:45
  58:     #17 0x103ecf905 in exec exec.c:39
  59:     #18 0x103ed10f4 in exec_complete_commands exec_complete_commands.c:12
  60:     #19 0x103ecf905 in exec exec.c:39
  61:     #20 0x103ed10b3 in exec_complete_commands exec_complete_commands.c:11
  62:     #21 0x103ecf905 in exec exec.c:39
  63:     #22 0x103ed10b3 in exec_complete_commands exec_complete_commands.c:11
  64:     #23 0x103ecf905 in exec exec.c:39
  65:     #24 0x103ed2ce9 in exec_program exec_program.c:10
  66:     #25 0x103ecf905 in exec exec.c:39
  67:     #26 0x103ecdd85 in exec_main_loop lex_and_parse.c:18
  68:     #27 0x103ece559 in lex_and_parse lex_and_parse.c:79
  69:     #28 0x103eced7e in main_loop main_loop.c:72
  70:     #29 0x103eb46ab in main main.c:69
  71: 
  72: previously allocated by thread T0 here:
  73:     #0 0x104095f3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  74:     #1 0x103f1646f in palloc palloc.c:16
  75:     #2 0x103f192fb in ft_strdup ft_strdup.c:14
  76:     #3 0x103ec91dd in create_local t_local.c:13
  77:     #4 0x103ec8790 in local_add_from_key_value local_add.c:11
  78:     #5 0x103ec892c in local_add_from_string local_add.c:28
  79:     #6 0x103ec8c1a in local_add_change_from_string local_add.c:60
  80:     #7 0x103ed327a in exec_assignment_word exec_simple_command.c:54
  81:     #8 0x103ed34eb in exec_cmd_prefix exec_simple_command.c:72
  82:     #9 0x103ed3589 in exec_cmd_prefix exec_simple_command.c:76
  83:     #10 0x103ed3589 in exec_cmd_prefix exec_simple_command.c:76
  84:     #11 0x103ed3589 in exec_cmd_prefix exec_simple_command.c:76
  85:     #12 0x103ed3a1e in exec_simple_command exec_simple_command.c:111
  86:     #13 0x103ecf905 in exec exec.c:39
  87:     #14 0x103ed09b4 in exec_command exec_command.c:20
  88:     #15 0x103ecf905 in exec exec.c:39
  89:     #16 0x103ed20c5 in exec_pipe_sequence exec_pipe_sequence.c:9
  90:     #17 0x103ecf905 in exec exec.c:39
  91:     #18 0x103ed2b1e in exec_pipeline exec_pipeline.c:84
  92:     #19 0x103ecf905 in exec exec.c:39
  93:     #20 0x103ecfa51 in exec_and_or exec_and_or.c:13
  94:     #21 0x103ecf905 in exec exec.c:39
  95:     #22 0x103ed0db7 in exec_complete_command exec_complete_command.c:45
  96:     #23 0x103ecf905 in exec exec.c:39
  97:     #24 0x103ed1071 in exec_complete_commands exec_complete_commands.c:10
  98:     #25 0x103ecf905 in exec exec.c:39
  99:     #26 0x103ed10b3 in exec_complete_commands exec_complete_commands.c:11
  100:     #27 0x103ecf905 in exec exec.c:39
  101:     #28 0x103ed10b3 in exec_complete_commands exec_complete_commands.c:11
  102:     #29 0x103ecf905 in exec exec.c:39
  103: 
  104: SUMMARY: AddressSanitizer: heap-use-after-free ft_strsplit.c:12 in ft_count_words
  105: Shadow bytes around the buggy address:
  106:   0x1c0600005bc0: fd fa fa fa fd fd fd fa fa fa 00 00 00 07 fa fa
  107:   0x1c0600005bd0: fd fd fd fd fa fa fd fd fd fd fa fa 00 00 00 fa
  108:   0x1c0600005be0: fa fa 00 00 00 01 fa fa 00 00 00 01 fa fa fd fd
  109:   0x1c0600005bf0: fd fa fa fa fd fd fd fa fa fa 00 00 00 07 fa fa
  110:   0x1c0600005c00: fd fd fd fd fa fa fd fd fd fd fa fa 00 00 00 fa
  111: =>0x1c0600005c10: fa fa[fd]fd fd fd fa fa 00 00 00 01 fa fa fd fd
  112:   0x1c0600005c20: fd fa fa fa fd fd fd fa fa fa 00 00 00 07 fa fa
  113:   0x1c0600005c30: fd fd fd fd fa fa fd fd fd fd fa fa 00 00 00 fa
  114:   0x1c0600005c40: fa fa 00 00 00 01 fa fa 00 00 00 01 fa fa fd fd
  115:   0x1c0600005c50: fd fa fa fa fd fd fd fa fa fa 00 00 00 07 fa fa
  116:   0x1c0600005c60: fd fd fd fd fa fa fd fd fd fd fa fa 00 00 00 fa
  117: Shadow byte legend (one shadow byte represents 8 application bytes):
  118:   Addressable:           00
  119:   Partially addressable: 01 02 03 04 05 06 07 
  120:   Heap left redzone:       fa
  121:   Freed heap region:       fd
  122:   Stack left redzone:      f1
  123:   Stack mid redzone:       f2
  124:   Stack right redzone:     f3
  125:   Stack after return:      f5
  126:   Stack use after scope:   f8
  127:   Global redzone:          f9
  128:   Global init order:       f6
  129:   Poisoned by user:        f7
  130:   Container overflow:      fc
  131:   Array cookie:            ac
  132:   Intra object redzone:    bb
  133:   ASan internal:           fe
  134:   Left alloca redzone:     ca
  135:   Right alloca redzone:    cb
  136: ==47932==ABORTING
  137: TOKEN201711150551_VALUE3[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/009-last-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the special variable `$?` may be expanded with the last exit status.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: ./write_on_stderr $?[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42$`[0m
[38;5;239m  01: $?[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/inline-environment-variable/001-local-variable-shouldnt-be-set[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary does not result in local variable declaration but a modified environment for the command.[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_NAME=TOKEN201711150551_VALUE ./display_env
  02: ./write_on_stderr $TOKEN201711150551[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_NAME=TOKEN201711150551_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  07: TERM_PROGRAM_VERSION=3.1.5
  08: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: COMMAND_MODE=unix2003
  12: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  13: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  14: PAGER=less
  15: LSCOLORS=Gxfxcxdxbxegedabagacad
  16: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  17: PWD=/Users/vcombey/42ShellTester/tmp
  18: BASE16_THEME=base16-nord
  19: ITERM_PROFILE=Default
  20: XPC_FLAGS=0x0
  21: XPC_SERVICE_NAME=0
  22: SHLVL=3
  23: HOME=/Users/vcombey
  24: COLORFGBG=7;0
  25: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  26: LESS=-R
  27: LOGNAME=vcombey
  28: LC_CTYPE=UTF-8
  29: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  30: SECURITYSESSIONID=186a6
  31: COLORTERM=truecolor
  32: OLDPWD=/Users/vcombey/42ShellTester
  33: _=/Users/vcombey/42/42sh/42sh
  34: HISTFILE=.42sh_history
  35: PS1=$> 
  36: PS2=dquote> 
  37: PS3=quote> 
  38: ------------------------------
  39: TOTAL ENVIRONMENT VARIABLES: 36[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_VALUE`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/001-truncating[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711150551_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_NAME=TOKEN201711150551_FILENAME
  02: ./write_on_stdout TOKEN201711150551_VALUE > $TOKEN201711150551_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711150551_FILENAME` matching_regex `^TOKEN201711150551_VALUE$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/002-appending[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711150551_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_NAME=TOKEN201711150551_FILENAME
  02: ./write_on_stdout TOKEN201711150551_VALUE1 >> $TOKEN201711150551_NAME
  03: ./write_on_stdout TOKEN201711150551_VALUE2 >> $TOKEN201711150551_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711150551_FILENAME` matching_regex `^TOKEN201711150551_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711150551_FILENAME` matching_regex `^TOKEN201711150551_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/003-reading[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711150551_FILENAME"
  02: echo "TOKEN201711150551_VALUE" > "TOKEN201711150551_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_NAME=TOKEN201711150551_FILENAME
  02: ./read_on_stdin < $TOKEN201711150551_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_VALUE@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/tilde-expansion/001-process-tilde-expansion[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tilde expansion `~` in variable declaration.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551=~
  02: ./write_on_stdout TILDE:$TOKEN201711150551[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TILDE:~`[0m
[31m[1;33m  WARNING    might match_regex `TILDE:/TOKEN201711150551`[0m
[38;5;239m  01: TILDE:~[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/004-it-results-in-error[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using backslash `\\` before the closing double-quote `"` does result in syntax error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711150551\"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711150551$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: dquote> ./lib/main.sh: line 102: 50100 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/variable-expansion/001-it-does-not-expand-in-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check if a local variable is display correctly inside simple and double quote.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711150551_NAME=TOKEN201711150551_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN201711150551_NAME"$TOKEN201711150551_NAME'$TOKEN201711150551_NAME'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_VALUETOKEN201711150551_VALUE[$]TOKEN201711150551_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==52040==ERROR: AddressSanitizer: heap-use-after-free on address 0x603000000760 at pc 0x00010dd72c44 bp 0x7fff51ef2be0 sp 0x7fff51ef2bd8
  03: READ of size 1 at 0x603000000760 thread T0
  04:     #0 0x10dd72c43 in ft_count_words ft_strsplit.c:12
  05:     #1 0x10dd72b0b in ft_strsplit ft_strsplit.c:84
  06:     #2 0x10dd644d8 in handle_fieldsplitting handle_fieldsplitting.c:34
  07:     #3 0x10dd5d93a in parse_param parse_dollar.c:91
  08:     #4 0x10dd5e50d in parse_dollars parse_dollar.c:140
  09:     #5 0x10dd63153 in parse_loop wordexp_posix.c:115
  10:     #6 0x10dd624a3 in word_expansion wordexp_posix.c:150
  11:     #7 0x10dd2affa in exec_cmd_suffix exec_simple_command.c:30
  12:     #8 0x10dd2bc08 in exec_simple_command exec_simple_command.c:124
  13:     #9 0x10dd27905 in exec exec.c:39
  14:     #10 0x10dd289b4 in exec_command exec_command.c:20
  15:     #11 0x10dd27905 in exec exec.c:39
  16:     #12 0x10dd430af in launch_process job_launch.c:58
  17:     #13 0x10dd4372d in launch_job job_launch.c:95
  18:     #14 0x10dd2aaab in exec_pipeline exec_pipeline.c:80
  19:     #15 0x10dd27905 in exec exec.c:39
  20:     #16 0x10dd27a51 in exec_and_or exec_and_or.c:13
  21:     #17 0x10dd27905 in exec exec.c:39
  22:     #18 0x10dd28db7 in exec_complete_command exec_complete_command.c:45
  23:     #19 0x10dd27905 in exec exec.c:39
  24:     #20 0x10dd29071 in exec_complete_commands exec_complete_commands.c:10
  25:     #21 0x10dd27905 in exec exec.c:39
  26:     #22 0x10dd2ace9 in exec_program exec_program.c:10
  27:     #23 0x10dd27905 in exec exec.c:39
  28:     #24 0x10dd25d85 in exec_main_loop lex_and_parse.c:18
  29:     #25 0x10dd26559 in lex_and_parse lex_and_parse.c:79
  30:     #26 0x10dd26d7e in main_loop main_loop.c:72
  31:     #27 0x10dd0c6ab in main main.c:69
  32:     #28 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: 0x603000000760 is located 0 bytes inside of 24-byte region [0x603000000760,0x603000000778)
  35: freed by thread T0 here:
  36:     #0 0x10def2106 in wrap_free (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x59106)
  37:     #1 0x10dd5d949 in parse_param parse_dollar.c:92
  38:     #2 0x10dd5e50d in parse_dollars parse_dollar.c:140
  39:     #3 0x10dd5f9ea in parse_dquote parse_quote.c:83
  40:     #4 0x10dd62bb6 in parse_loop wordexp_posix.c:98
  41:     #5 0x10dd624a3 in word_expansion wordexp_posix.c:150
  42:     #6 0x10dd2affa in exec_cmd_suffix exec_simple_command.c:30
  43:     #7 0x10dd2bc08 in exec_simple_command exec_simple_command.c:124
  44:     #8 0x10dd27905 in exec exec.c:39
  45:     #9 0x10dd289b4 in exec_command exec_command.c:20
  46:     #10 0x10dd27905 in exec exec.c:39
  47:     #11 0x10dd430af in launch_process job_launch.c:58
  48:     #12 0x10dd4372d in launch_job job_launch.c:95
  49:     #13 0x10dd2aaab in exec_pipeline exec_pipeline.c:80
  50:     #14 0x10dd27905 in exec exec.c:39
  51:     #15 0x10dd27a51 in exec_and_or exec_and_or.c:13
  52:     #16 0x10dd27905 in exec exec.c:39
  53:     #17 0x10dd28db7 in exec_complete_command exec_complete_command.c:45
  54:     #18 0x10dd27905 in exec exec.c:39
  55:     #19 0x10dd29071 in exec_complete_commands exec_complete_commands.c:10
  56:     #20 0x10dd27905 in exec exec.c:39
  57:     #21 0x10dd2ace9 in exec_program exec_program.c:10
  58:     #22 0x10dd27905 in exec exec.c:39
  59:     #23 0x10dd25d85 in exec_main_loop lex_and_parse.c:18
  60:     #24 0x10dd26559 in lex_and_parse lex_and_parse.c:79
  61:     #25 0x10dd26d7e in main_loop main_loop.c:72
  62:     #26 0x10dd0c6ab in main main.c:69
  63:     #27 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  64: 
  65: previously allocated by thread T0 here:
  66:     #0 0x10def1f3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  67:     #1 0x10dd6e46f in palloc palloc.c:16
  68:     #2 0x10dd712fb in ft_strdup ft_strdup.c:14
  69:     #3 0x10dd211dd in create_local t_local.c:13
  70:     #4 0x10dd20790 in local_add_from_key_value local_add.c:11
  71:     #5 0x10dd2092c in local_add_from_string local_add.c:28
  72:     #6 0x10dd20c1a in local_add_change_from_string local_add.c:60
  73:     #7 0x10dd227b4 in env_load_base_env load_base_env.c:24
  74:     #8 0x10dd0c478 in main main.c:61
  75:     #9 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  76: 
  77: SUMMARY: AddressSanitizer: heap-use-after-free ft_strsplit.c:12 in ft_count_words
  78: Shadow bytes around the buggy address:
  79:   0x1c0600000090: fa fa 00 00 04 fa fa fa 00 00 00 06 fa fa 00 00
  80:   0x1c06000000a0: 07 fa fa fa fd fd fd fd fa fa 00 00 00 03 fa fa
  81:   0x1c06000000b0: fd fd fd fa fa fa 00 00 05 fa fa fa 00 00 00 05
  82:   0x1c06000000c0: fa fa fd fd fd fa fa fa 00 00 00 02 fa fa fd fd
  83:   0x1c06000000d0: fd fd fa fa 00 00 00 fa fa fa 00 00 07 fa fa fa
  84: =>0x1c06000000e0: fd fd fd fa fa fa 00 00 07 fa fa fa[fd]fd fd fa
  85:   0x1c06000000f0: fa fa fd fd fd fa fa fa 00 00 01 fa fa fa fd fd
  86:   0x1c0600000100: fd fa fa fa 00 00 01 fa fa fa fd fd fd fa fa fa
  87:   0x1c0600000110: 00 00 02 fa fa fa 00 00 00 04 fa fa fd fd fd fd
  88:   0x1c0600000120: fa fa fd fd fd fa fa fa fd fd fd fd fa fa 00 00
  89:   0x1c0600000130: 00 00 fa fa fd fd fd fd fa fa 00 00 00 06 fa fa
  90: Shadow byte legend (one shadow byte represents 8 application bytes):
  91:   Addressable:           00
  92:   Partially addressable: 01 02 03 04 05 06 07 
  93:   Heap left redzone:       fa
  94:   Freed heap region:       fd
  95:   Stack left redzone:      f1
  96:   Stack mid redzone:       f2
  97:   Stack right redzone:     f3
  98:   Stack after return:      f5
  99:   Stack use after scope:   f8
  100:   Global redzone:          f9
  101:   Global init order:       f6
  102:   Poisoned by user:        f7
  103:   Container overflow:      fc
  104:   Array cookie:            ac
  105:   Intra object redzone:    bb
  106:   ASan internal:           fe
  107:   Left alloca redzone:     ca
  108:   Right alloca redzone:    cb
  109: ==52040==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/003-escape-simple-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: quote> ./lib/main.sh: line 102: 53037 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/subshell/004-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a subshell command that is executed at the end of a script is correctly returned at termination by the parent shell.[0m

  STDIN:
[38;5;239m  01: (./exit_with_status 42)[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status 42[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/001-modifies-the-child-environment-only-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: (TOKEN201711150551_NAME=TOKEN201711150551_VALUE ./display_env)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_NAME=TOKEN201711150551_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  07: TERM_PROGRAM_VERSION=3.1.5
  08: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: COMMAND_MODE=unix2003
  12: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  13: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  14: PAGER=less
  15: LSCOLORS=Gxfxcxdxbxegedabagacad
  16: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  17: PWD=/Users/vcombey/42ShellTester/tmp
  18: BASE16_THEME=base16-nord
  19: ITERM_PROFILE=Default
  20: XPC_FLAGS=0x0
  21: XPC_SERVICE_NAME=0
  22: SHLVL=3
  23: HOME=/Users/vcombey
  24: COLORFGBG=7;0
  25: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  26: LESS=-R
  27: LOGNAME=vcombey
  28: LC_CTYPE=UTF-8
  29: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  30: SECURITYSESSIONID=186a6
  31: COLORTERM=truecolor
  32: OLDPWD=/Users/vcombey/42ShellTester
  33: _=/Users/vcombey/42/42sh/42sh
  34: HISTFILE=.42sh_history
  35: PS1=$> 
  36: PS2=dquote> 
  37: PS3=quote> 
  38: ------------------------------
  39: TOTAL ENVIRONMENT VARIABLES: 36[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711150551_NAME=TOKEN201711150551_VALUE: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/002-modifies-the-child-environment-only-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: ( (TOKEN201711150551_NAME=TOKEN201711150551_VALUE ./display_env) ; ./display_env) ; ./display_env
  02: [0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_NAME=TOKEN201711150551_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  07: TERM_PROGRAM_VERSION=3.1.5
  08: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: COMMAND_MODE=unix2003
  12: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  13: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  14: PAGER=less
  15: LSCOLORS=Gxfxcxdxbxegedabagacad
  16: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  17: PWD=/Users/vcombey/42ShellTester/tmp
  18: BASE16_THEME=base16-nord
  19: ITERM_PROFILE=Default
  20: XPC_FLAGS=0x0
  21: XPC_SERVICE_NAME=0
  22: SHLVL=3
  23: HOME=/Users/vcombey
  24: COLORFGBG=7;0
  25: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  26: LESS=-R
  27: LOGNAME=vcombey
  28: LC_CTYPE=UTF-8
  29: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  30: SECURITYSESSIONID=186a6
  31: COLORTERM=truecolor
  32: OLDPWD=/Users/vcombey/42ShellTester
  33: _=/Users/vcombey/42/42sh/42sh
  34: HISTFILE=.42sh_history
  35: PS1=$> 
  36: PS2=dquote> 
  37: PS3=quote> 
  38: ------------------------------
  39: TOTAL ENVIRONMENT VARIABLES: 36
  40: ------------------------------
  41: TERM_PROGRAM=iTerm.app
  42: TERM=xterm-256color
  43: SHELL=42sh
  44: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  45: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  46: TERM_PROGRAM_VERSION=3.1.5
  47: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  48: ZSH=/Users/vcombey/.oh-my-zsh
  49: USER=vcombey
  50: COMMAND_MODE=unix2003
  51: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  52: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  53: PAGER=less
  54: LSCOLORS=Gxfxcxdxbxegedabagacad
  55: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  56: PWD=/Users/vcombey/42ShellTester/tmp
  57: BASE16_THEME=base16-nord
  58: ITERM_PROFILE=Default
  59: XPC_FLAGS=0x0
  60: XPC_SERVICE_NAME=0
  61: SHLVL=3
  62: HOME=/Users/vcombey
  63: COLORFGBG=7;0
  64: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  65: LESS=-R
  66: LOGNAME=vcombey
  67: LC_CTYPE=UTF-8
  68: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  69: SECURITYSESSIONID=186a6
  70: COLORTERM=truecolor
  71: OLDPWD=/Users/vcombey/42ShellTester
  72: _=/Users/vcombey/42/42sh/42sh
  73: HISTFILE=.42sh_history
  74: PS1=$> 
  75: PS2=dquote> 
  76: PS3=quote> 
  77: ------------------------------
  78: TOTAL ENVIRONMENT VARIABLES: 36[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711150551_NAME=TOKEN201711150551_VALUE: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/001-with-simple-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `'`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout 'TOKEN201711150551_FIRST)' ; (./write_on_stdout '(TOKEN201711150551_SECOND') )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: subsh> ./lib/main.sh: line 102: 57044 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/002-with-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201711150551_FIRST)" ; (./write_on_stdout "(TOKEN201711150551_SECOND") )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: subsh> ./lib/main.sh: line 102: 57183 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/003-with-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbols `'` and `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201711150551_FIRST)" ; (./write_on_stdout '(TOKEN201711150551_SECOND') )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: subsh> ./lib/main.sh: line 102: 57321 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/001-modifies-child-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711150551_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_VARIABLE=TOKEN201711150551_VALUE ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_VARIABLE=TOKEN201711150551_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  07: TERM_PROGRAM_VERSION=3.1.5
  08: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: COMMAND_MODE=unix2003
  12: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  13: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  14: PAGER=less
  15: LSCOLORS=Gxfxcxdxbxegedabagacad
  16: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  17: PWD=/Users/vcombey/42ShellTester/tmp
  18: BASE16_THEME=base16-nord
  19: ITERM_PROFILE=Default
  20: XPC_FLAGS=0x0
  21: XPC_SERVICE_NAME=0
  22: SHLVL=3
  23: HOME=/Users/vcombey
  24: COLORFGBG=7;0
  25: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  26: LESS=-R
  27: LOGNAME=vcombey
  28: LC_CTYPE=UTF-8
  29: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  30: SECURITYSESSIONID=186a6
  31: COLORTERM=truecolor
  32: OLDPWD=/Users/vcombey/42ShellTester
  33: _=/Users/vcombey/42/42sh/42sh
  34: HISTFILE=.42sh_history
  35: PS1=$> 
  36: PS2=dquote> 
  37: PS3=quote> 
  38: ------------------------------
  39: TOTAL ENVIRONMENT VARIABLES: 36
  40: ------------------------------
  41: TERM_PROGRAM=iTerm.app
  42: TERM=xterm-256color
  43: SHELL=42sh
  44: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  45: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  46: TERM_PROGRAM_VERSION=3.1.5
  47: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  48: ZSH=/Users/vcombey/.oh-my-zsh
  49: USER=vcombey
  50: COMMAND_MODE=unix2003
  51: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  52: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  53: PAGER=less
  54: LSCOLORS=Gxfxcxdxbxegedabagacad
  55: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  56: PWD=/Users/vcombey/42ShellTester/tmp
  57: BASE16_THEME=base16-nord
  58: ITERM_PROFILE=Default
  59: XPC_FLAGS=0x0
  60: XPC_SERVICE_NAME=0
  61: SHLVL=3
  62: HOME=/Users/vcombey
  63: COLORFGBG=7;0
  64: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  65: LESS=-R
  66: LOGNAME=vcombey
  67: LC_CTYPE=UTF-8
  68: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  69: SECURITYSESSIONID=186a6
  70: COLORTERM=truecolor
  71: OLDPWD=/Users/vcombey/42ShellTester
  72: _=/Users/vcombey/42/42sh/42sh
  73: HISTFILE=.42sh_history
  74: PS1=$> 
  75: PS2=dquote> 
  76: PS3=quote> 
  77: ------------------------------
  78: TOTAL ENVIRONMENT VARIABLES: 36[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/002-modifies-child-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711150551_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711150551_VARIABLE1=TOKEN201711150551_VALUE1 TOKEN201711150551_VARIABLE2=TOKEN201711150551_VALUE2 TOKEN201711150551_VARIABLE3=TOKEN201711150551_VALUE3 ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_VARIABLE1=TOKEN201711150551_VALUE1$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_VARIABLE2=TOKEN201711150551_VALUE2$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551_VARIABLE3=TOKEN201711150551_VALUE3$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  07: TERM_PROGRAM_VERSION=3.1.5
  08: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: COMMAND_MODE=unix2003
  12: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  13: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  14: PAGER=less
  15: LSCOLORS=Gxfxcxdxbxegedabagacad
  16: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  17: PWD=/Users/vcombey/42ShellTester/tmp
  18: BASE16_THEME=base16-nord
  19: ITERM_PROFILE=Default
  20: XPC_FLAGS=0x0
  21: XPC_SERVICE_NAME=0
  22: SHLVL=3
  23: HOME=/Users/vcombey
  24: COLORFGBG=7;0
  25: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  26: LESS=-R
  27: LOGNAME=vcombey
  28: LC_CTYPE=UTF-8
  29: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  30: SECURITYSESSIONID=186a6
  31: COLORTERM=truecolor
  32: OLDPWD=/Users/vcombey/42ShellTester
  33: _=/Users/vcombey/42/42sh/42sh
  34: HISTFILE=.42sh_history
  35: PS1=$> 
  36: PS2=dquote> 
  37: PS3=quote> 
  38: ------------------------------
  39: TOTAL ENVIRONMENT VARIABLES: 36
  40: ------------------------------
  41: TERM_PROGRAM=iTerm.app
  42: TERM=xterm-256color
  43: SHELL=42sh
  44: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  45: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  46: TERM_PROGRAM_VERSION=3.1.5
  47: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  48: ZSH=/Users/vcombey/.oh-my-zsh
  49: USER=vcombey
  50: COMMAND_MODE=unix2003
  51: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  52: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  53: PAGER=less
  54: LSCOLORS=Gxfxcxdxbxegedabagacad
  55: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  56: PWD=/Users/vcombey/42ShellTester/tmp
  57: BASE16_THEME=base16-nord
  58: ITERM_PROFILE=Default
  59: XPC_FLAGS=0x0
  60: XPC_SERVICE_NAME=0
  61: SHLVL=3
  62: HOME=/Users/vcombey
  63: COLORFGBG=7;0
  64: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  65: LESS=-R
  66: LOGNAME=vcombey
  67: LC_CTYPE=UTF-8
  68: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  69: SECURITYSESSIONID=186a6
  70: COLORTERM=truecolor
  71: OLDPWD=/Users/vcombey/42ShellTester
  72: _=/Users/vcombey/42/42sh/42sh
  73: HISTFILE=.42sh_history
  74: PS1=$> 
  75: PS2=dquote> 
  76: PS3=quote> 
  77: ------------------------------
  78: TOTAL ENVIRONMENT VARIABLES: 36[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/003-modifies-PATH-only[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: rm -rf "temporary_directory"
  02: mkdir -p "temporary_directory"
  03: cd "temporary_directory"[0m

  STDIN:
[38;5;239m  01: PATH=.. write_on_stdout TOKEN201711150551
  02: exit_with_status 42[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711150551$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: write_on_stdout: command not found
  02: exit_with_status: command not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `42`[0m
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/002-do-not-run-second[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the AND operator `&&` makes the right command to not be executed if the left one exits with an error status code.
  The Shell should exit with the status code of the executed command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 && ./write_on_stdout TOKEN201711150551[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex TOKEN201711150551[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[1;33m  WARNING    might exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/003-run-until-failing[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the AND separator `&&` with chained commands results in the execution of all until the first fail.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./exit_with_status 0 && ./exit_with_status 0 && ./exit_with_status 0 && ./write_on_stdout TOKEN201711150551_FIRST && ./exit_with_status 42 && ./write_on_stdout TOKEN201711150551_SECOND[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711150551_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_SECOND`[0m
[38;5;239m  01: TOKEN201711150551_FIRST[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/errors/001-parse-error-at-beginning[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that the AND operator `&&` must be placed after a valid command.
  If not, the Shell should display an error and exit with an error status code.[0m

  STDIN:
[38;5;239m  01: && ./write_on_stdout TOKEN201711150551[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex `TOKEN201711150551`[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `&&'[0m

  MISC:
[31m[1;33m  WARNING    might_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/errors/002-parse-error-too-much-symbol[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that more than two '&' operators are detected as a syntax error.
  It should not execute the two commands `write_on_stdout` but display an error and exit with an error status code.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711150551 &&& ./write_on_stdout TOKEN201711150551[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex `TOKEN201711150551`[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `&'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/001-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 && ./write_on_stderr TOKEN201711150551_ERROR 21 || ./write_on_stdout TOKEN201711150551_SUCCESS[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/002-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./write_on_stderr TOKEN201711150551_ERROR 21 || ./write_on_stdout TOKEN201711150551_SUCCESS[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711150551_ERROR`[0m
[38;5;239m  01: TOKEN201711150551_ERROR[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/004-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stderr TOKEN201711150551_ERROR 21 && ./write_on_stdout TOKEN201711150551_SUCCESS[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_ERROR`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/005-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201711150551_SUCCESS && ./write_on_stderr TOKEN201711150551_ERROR 21[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_ERROR`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/002-run-second-only[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the OR operator `||` makes the right command to be executed if the left one exits with an error status code.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201711150551[0m

  STDOUT:
[31m[1;33m  WARNING    might match_regex `TOKEN201711150551`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    might exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/003-run-until-succeeding[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the OR separator `||` with chained commands results in the execution of all until the first succeed. The remaining commands are not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 1 || ./exit_with_status 2 || ./exit_with_status 3 || ./exit_with_status 4 || ./write_on_stdout TOKEN201711150551_FIRST || ./write_on_stdout TOKEN201711150551_SECOND[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711150551_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/errors/001-parse-error-at-beginning[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that the OR operator `||` must be placed after a valid command.
  If not, the Shell should display an error and exit with an error status code.[0m

  STDIN:
[38;5;239m  01: || ./write_on_stdout TOKEN201711150551[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `||'[0m

  MISC:
[31m[1;33m  WARNING    might_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/errors/002-parse-error-too-much-symbol[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that using more than two pipe symbols `|` is detected as an error.
  The Shell should display an error and exit with a error status code.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711150551 ||| ./write_on_stdout TOKEN201711150551[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `|'[0m

  MISC:
[31m[1;33m  WARNING    might_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/003-expanded-with-PWD-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable PWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~[+]`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711150551[+]`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  01: /TOKEN201711150551+[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/004-expanded-with-PWD-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable PWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+/TOKEN201711150551_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~+/TOKEN201711150551_SUBDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711150551[+]/TOKEN201711150551_SUBDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp/TOKEN201711150551_SUBDIRECTORY$`[0m
[38;5;239m  01: /TOKEN201711150551+/TOKEN201711150551_SUBDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/005-expanded-with-OLDPWD-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable OLDPWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711150551_SUBDIRECTORY"
  02: mkdir "./TOKEN201711150551_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711150551_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~-`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711150551-`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  01: /TOKEN201711150551-[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/006-expanded-with-OLDPWD-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable OLDPWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711150551_SUBDIRECTORY"
  02: mkdir "./TOKEN201711150551_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711150551_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-/TOKEN201711150551_OTHERDIRECTORY[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~-/TOKEN201711150551_OTHERDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711150551-/TOKEN201711150551_OTHERDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp/TOKEN201711150551_OTHERDIRECTORY$`[0m
[38;5;239m  01: /TOKEN201711150551-/TOKEN201711150551_OTHERDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/001-not-expanded-with-HOME-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be not expanded when not followed by an authorized symbol or user name.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~~[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~~$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711150551`[0m
[38;5;239m  01: /TOKEN201711150551/TOKEN201711150551[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/002-not-expanded-with-HOME-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be not expanded when not followed by an authorized symbol or user name.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~TOKEN201711150551_UNKNOWNUSER[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~TOKEN201711150551_UNKNOWNUSER$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711150551TOKEN201711150551_UNKNOWNUSER`[0m
[38;5;239m  01: /TOKEN201711150551TOKEN201711150551_UNKNOWNUSER[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/003-not-expanded-with-PWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` is not expanded with the environment variable PWD when not followed by the symbol `/`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+TOKEN201711150551_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~[+]TOKEN201711150551_SUBDIRECTORY$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711150551[+]TOKEN201711150551_SUBDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmpTOKEN201711150551_SUBDIRECTORY`[0m
[38;5;239m  01: /TOKEN201711150551+TOKEN201711150551_SUBDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/004-not-expanded-with-OLDPWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` is not expanded with the environment variable OLDPWD when not followed by the symbol `/`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711150551_SUBDIRECTORY"
  02: mkdir "./TOKEN201711150551_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711150551"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711150551_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-TOKEN201711150551_OTHERDIRECTORY[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~-TOKEN201711150551_OTHERDIRECTORY$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711150551-/TOKEN201711150551_OTHERDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp/TOKEN201711150551_OTHERDIRECTORY`[0m
[38;5;239m  01: /TOKEN201711150551-TOKEN201711150551_OTHERDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/binary/003-binary-test-exec-order[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell correctly finds binaries by iterating on paths within the environment variable PATH from left to right.[0m

  Before test:
[38;5;239m  01: mkdir -p "./virtual_path_1" "./virtual_path_2"
  02: cp "./write_on_stdout" "./virtual_path_1/fake_echo"
  03: cp "./write_on_stderr" "./virtual_path_2/fake_echo"
  04: export PATH="/Users/vcombey/42ShellTester/tmp/virtual_path_1:/Users/vcombey/42ShellTester/tmp/virtual_path_2"[0m

  STDIN:
[38;5;239m  01: fake_echo TOKEN201711150551[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex TOKEN201711150551[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711150551[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/004-binary-test-empty-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell finds binaries that are located in the current directory when the environment variable PATH is empty.[0m

  Before test:
[38;5;239m  01: export PATH=""[0m

  STDIN:
[38;5;239m  01: write_on_stdout "TOKEN201711150551"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: write_on_stdout: command not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/005-binary-test-wrong-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  This test purpose is to check if your shell is not able to use binary with a wrong PATH
  We are changing the actual PATH by PATH=NULL
  And executing the commande ls[0m

  Before test:
[38;5;239m  01: export PATH="/"[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: ls: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/006-binary-undefined-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell retrieves the default value of the environment variable PATH if not set. This test depends on the presence of the UNIX binary `ls`, located in a path within the default environment variable PATH.[0m

  Before test:
[38;5;239m  01: rm -rf "TOKEN201711150551_006-BINARY-UNDEFINED-PATH"
  02: touch "TOKEN201711150551_006-BINARY-UNDEFINED-PATH"
  03: unset PATH[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711150551_006-BINARY-UNDEFINED-PATH`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ls: command not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/007-binary-permission-denied[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a non-permitted binary results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./permission_denied
  02: touch ./permission_denied
  03: chmod 0 ./permission_denied[0m

  STDIN:
[38;5;239m  01: ./permission_denied[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Pp]ermission denied`[0m
[38;5;239m  01: ./permission_denied: permission denied [0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status 0[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/binary/008-binary-too-many-symbolic-links-encountered[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a path that encounters an infinite loop of symbolic link results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./symbolic_link1 ./symbolic_link2 ./symbolic_link3
  02: ln -s ./symbolic_link1 ./symbolic_link2
  03: ln -s ./symbolic_link2 ./symbolic_link3
  04: ln -s ./symbolic_link3 ./symbolic_link1[0m

  STDIN:
[38;5;239m  01: ./symbolic_link1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: ./symbolic_link1: no such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status 0[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/007-symbolic-link[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving the linked directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/symbolic_link$`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD
  02: ------------------------------
  03: TERM_PROGRAM=iTerm.app
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  08: TERM_PROGRAM_VERSION=3.1.5
  09: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: USER=vcombey
  12: COMMAND_MODE=unix2003
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  14: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  15: PAGER=less
  16: LSCOLORS=Gxfxcxdxbxegedabagacad
  17: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  18: PWD=/Users/vcombey/42ShellTester/tmp/sub_directory
  19: BASE16_THEME=base16-nord
  20: ITERM_PROFILE=Default
  21: XPC_FLAGS=0x0
  22: XPC_SERVICE_NAME=0
  23: SHLVL=3
  24: HOME=/Users/vcombey
  25: COLORFGBG=7;0
  26: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  27: LESS=-R
  28: LOGNAME=vcombey
  29: LC_CTYPE=UTF-8
  30: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  31: SECURITYSESSIONID=186a6
  32: COLORTERM=truecolor
  33: OLDPWD=/Users/vcombey/42ShellTester/tmp
  34: _=/Users/vcombey/42/42sh/42sh
  35: HISTFILE=.42sh_history
  36: PS1=$> 
  37: PS2=dquote> 
  38: PS3=quote> 
  39: ------------------------------
  40: TOTAL ENVIRONMENT VARIABLES: 36[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/008-symbolic-link-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving to the linked directory. In this test, the directory is linked with to chained symbolic links.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link1"
  04: ln -s "./symbolic_link1" "./symbolic_link2"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link2
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/symbolic_link2$`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD
  02: ------------------------------
  03: TERM_PROGRAM=iTerm.app
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  08: TERM_PROGRAM_VERSION=3.1.5
  09: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: USER=vcombey
  12: COMMAND_MODE=unix2003
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  14: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  15: PAGER=less
  16: LSCOLORS=Gxfxcxdxbxegedabagacad
  17: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  18: PWD=/Users/vcombey/42ShellTester/tmp/sub_directory
  19: BASE16_THEME=base16-nord
  20: ITERM_PROFILE=Default
  21: XPC_FLAGS=0x0
  22: XPC_SERVICE_NAME=0
  23: SHLVL=3
  24: HOME=/Users/vcombey
  25: COLORFGBG=7;0
  26: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  27: LESS=-R
  28: LOGNAME=vcombey
  29: LC_CTYPE=UTF-8
  30: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  31: SECURITYSESSIONID=186a6
  32: COLORTERM=truecolor
  33: OLDPWD=/Users/vcombey/42ShellTester/tmp
  34: _=/Users/vcombey/42/42sh/42sh
  35: HISTFILE=.42sh_history
  36: PS1=$> 
  37: PS2=dquote> 
  38: PS3=quote> 
  39: ------------------------------
  40: TOTAL ENVIRONMENT VARIABLES: 36[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/002-not-a-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file name as first argument with the builtin `cd` results in a Shell termination with a failure exit status.[0m

  Before test:
[38;5;239m  01: touch "./not_a_directory"[0m

  STDIN:
[38;5;239m  01: cd not_a_directory[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: Not a directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/004-permission-denied-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a directory without any permission as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"
  03: mkdir -m 0 "./permission_denied"[0m

  STDIN:
[38;5;239m  01: cd permission_denied[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: Permission denied[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/005-too-many-symbolic-links-encountered[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1
  02: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: cd: Out of streams resources[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/006-too-many-symbolic-links-encountered-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in a Shell termination with a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: Out of streams resources[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/008-no-such-file-or-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-existing path as first argument with the builtin `cd` results in a Shell termination with an error status code.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file_or_directory"[0m

  STDIN:
[38;5;239m  01: cd no_such_file_or_directory[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: No such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/010-no-such-file-or-directory-symlink-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link that targets to a non-existing directory with the builtin `cd`  results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./enoent_symlink" "./enoent_directory"
  02: ln -s "./enoent_directory" "./enoent_symlink"[0m

  STDIN:
[38;5;239m  01: cd ./enoent_symlink[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: No such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/options/001-not-following-links[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using symbolic links twice with the builtin `cd` and the option `-P` results in a correct environment variable PWD. The option `-P` makes the Shell to resolve symbolic links.[0m

  Before test:
[38;5;239m  01: rm -fr "./sub_directory_link" "./sub_directory"
  02: mkdir -p "./sub_directory/sub_sub_directory"
  03: ln -s "./sub_directory" "./sub_directory_link"
  04: ln -s "./sub_sub_directory" "./sub_directory/sub_sub_directory_link"[0m

  STDIN:
[38;5;239m  01: cd -P sub_directory_link
  02: cd -P sub_sub_directory_link
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD=/Users/vcombey/42ShellTester/tmp/sub_directory/sub_sub_directory`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.ZYSZCoCBD2/Render
  07: TERM_PROGRAM_VERSION=3.1.5
  08: TERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: COMMAND_MODE=unix2003
  12: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.sqIwwksVVD/Listeners
  13: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  14: PAGER=less
  15: LSCOLORS=Gxfxcxdxbxegedabagacad
  16: PATH=/Users/vcombey/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  17: PWD=/Users/vcombey/42ShellTester/tmp
  18: BASE16_THEME=base16-nord
  19: ITERM_PROFILE=Default
  20: XPC_FLAGS=0x0
  21: XPC_SERVICE_NAME=0
  22: SHLVL=3
  23: HOME=/Users/vcombey
  24: COLORFGBG=7;0
  25: ITERM_SESSION_ID=w0t0p3:04853DBC-E5EF-4E55-A510-1DB6B30D856B
  26: LESS=-R
  27: LOGNAME=vcombey
  28: LC_CTYPE=UTF-8
  29: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  30: SECURITYSESSIONID=186a6
  31: COLORTERM=truecolor
  32: OLDPWD=/Users/vcombey/42ShellTester
  33: _=/Users/vcombey/42/42sh/42sh
  34: HISTFILE=.42sh_history
  35: PS1=$> 
  36: PS2=dquote> 
  37: PS3=quote> 
  38: ------------------------------
  39: TOTAL ENVIRONMENT VARIABLES: 36[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: cd: No such file or directory
  02: cd: No such file or directory[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/003-ignore-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the option `-i` with the builtin `env` results in an empty environment sent to the given command.[0m

  STDIN:
[38;5;239m  01: env -i ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 0`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/005-set-variables[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `env` can modify or set multiple environment variables before executing the given command.[0m

  Before test:
[38;5;239m  01: export VARTEST1="OLD_VALUE"[0m

  STDIN:
[38;5;239m  01: env VARTEST1=TOKEN201711150551_1 VARTEST2=TOKEN201711150551_2 VARTEST3=TOKEN201711150551_3 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST1=TOKEN201711150551_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST2=TOKEN201711150551_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST3=TOKEN201711150551_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==66600==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60400008d240 at pc 0x0001090b4d2d bp 0x7fff56b5f780 sp 0x7fff56b5f778
  03: READ of size 8 at 0x60400008d240 thread T0
  04:     #0 0x1090b4d2c in local_get_node local_get.c:11
  05:     #1 0x1090b4a01 in local_add_change_from_key_value local_add.c:38
  06:     #2 0x1090b5921 in env_change_value env_add.c:50
  07:     #3 0x1090b5ae4 in env_add_change env_add.c:61
  08:     #4 0x1090b5be2 in env_add_var_from_string env_add.c:68
  09:     #5 0x1090a39e0 in build_new_env env.c:59
  10:     #6 0x1090a3600 in builtin_env env.c:91
  11:     #7 0x1090a4168 in exec_builtin exec_builtin.c:45
  12:     #8 0x1090bfdb9 in exec_simple_command exec_simple_command.c:135
  13:     #9 0x1090bb905 in exec exec.c:39
  14:     #10 0x1090bc9b4 in exec_command exec_command.c:20
  15:     #11 0x1090bb905 in exec exec.c:39
  16:     #12 0x1090be0c5 in exec_pipe_sequence exec_pipe_sequence.c:9
  17:     #13 0x1090bb905 in exec exec.c:39
  18:     #14 0x1090beb1e in exec_pipeline exec_pipeline.c:84
  19:     #15 0x1090bb905 in exec exec.c:39
  20:     #16 0x1090bba51 in exec_and_or exec_and_or.c:13
  21:     #17 0x1090bb905 in exec exec.c:39
  22:     #18 0x1090bcdb7 in exec_complete_command exec_complete_command.c:45
  23:     #19 0x1090bb905 in exec exec.c:39
  24:     #20 0x1090bd071 in exec_complete_commands exec_complete_commands.c:10
  25:     #21 0x1090bb905 in exec exec.c:39
  26:     #22 0x1090bece9 in exec_program exec_program.c:10
  27:     #23 0x1090bb905 in exec exec.c:39
  28:     #24 0x1090b9d85 in exec_main_loop lex_and_parse.c:18
  29:     #25 0x1090ba559 in lex_and_parse lex_and_parse.c:79
  30:     #26 0x1090bad7e in main_loop main_loop.c:72
  31:     #27 0x1090a06ab in main main.c:69
  32:     #28 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: 0x60400008d240 is located 0 bytes to the right of 48-byte region [0x60400008d210,0x60400008d240)
  35: allocated by thread T0 here:
  36:     #0 0x109284f3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  37:     #1 0x10910246f in palloc palloc.c:16
  38:     #2 0x1090f9fdb in ft_arrayjoin ft_arrayjoin.c:14
  39:     #3 0x1090fa0bf in ft_arrayjoin_free ft_arrayjoin.c:33
  40:     #4 0x1090bfc35 in exec_simple_command exec_simple_command.c:125
  41:     #5 0x1090bb905 in exec exec.c:39
  42:     #6 0x1090bc9b4 in exec_command exec_command.c:20
  43:     #7 0x1090bb905 in exec exec.c:39
  44:     #8 0x1090be0c5 in exec_pipe_sequence exec_pipe_sequence.c:9
  45:     #9 0x1090bb905 in exec exec.c:39
  46:     #10 0x1090beb1e in exec_pipeline exec_pipeline.c:84
  47:     #11 0x1090bb905 in exec exec.c:39
  48:     #12 0x1090bba51 in exec_and_or exec_and_or.c:13
  49:     #13 0x1090bb905 in exec exec.c:39
  50:     #14 0x1090bcdb7 in exec_complete_command exec_complete_command.c:45
  51:     #15 0x1090bb905 in exec exec.c:39
  52:     #16 0x1090bd071 in exec_complete_commands exec_complete_commands.c:10
  53:     #17 0x1090bb905 in exec exec.c:39
  54:     #18 0x1090bece9 in exec_program exec_program.c:10
  55:     #19 0x1090bb905 in exec exec.c:39
  56:     #20 0x1090b9d85 in exec_main_loop lex_and_parse.c:18
  57:     #21 0x1090ba559 in lex_and_parse lex_and_parse.c:79
  58:     #22 0x1090bad7e in main_loop main_loop.c:72
  59:     #23 0x1090a06ab in main main.c:69
  60:     #24 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  61: 
  62: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:11 in local_get_node
  63: Shadow bytes around the buggy address:
  64:   0x1c08000119f0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  65:   0x1c0800011a00: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  66:   0x1c0800011a10: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  67:   0x1c0800011a20: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  68:   0x1c0800011a30: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fa
  69: =>0x1c0800011a40: fa fa 00 00 00 00 00 00[fa]fa 00 00 00 00 04 fa
  70:   0x1c0800011a50: fa fa 00 00 00 00 06 fa fa fa 00 00 00 00 05 fa
  71:   0x1c0800011a60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  72:   0x1c0800011a70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  73:   0x1c0800011a80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  74:   0x1c0800011a90: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  75: Shadow byte legend (one shadow byte represents 8 application bytes):
  76:   Addressable:           00
  77:   Partially addressable: 01 02 03 04 05 06 07 
  78:   Heap left redzone:       fa
  79:   Freed heap region:       fd
  80:   Stack left redzone:      f1
  81:   Stack mid redzone:       f2
  82:   Stack right redzone:     f3
  83:   Stack after return:      f5
  84:   Stack use after scope:   f8
  85:   Global redzone:          f9
  86:   Global init order:       f6
  87:   Poisoned by user:        f7
  88:   Container overflow:      fc
  89:   Array cookie:            ac
  90:   Intra object redzone:    bb
  91:   ASan internal:           fe
  92:   Left alloca redzone:     ca
  93:   Right alloca redzone:    cb
  94: ==66600==ABORTING
  95: ./lib/main.sh: line 102: 66600 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/001-command-not-found[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid binary as argument results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./invalid_binary"[0m

  STDIN:
[38;5;239m  01: env ./invalid_binary[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/002-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid option results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f -- "-w"[0m

  STDIN:
[38;5;239m  01: env -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/multiple-options/001-ignore-environment-and-set-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that `env -i` works if we use a second argument to set an environment variable, we are also checking if this command unset environments variables for a given binary.[0m

  STDIN:
[38;5;239m  01: env -i TESTVARIABLE=TOKEN201711150551 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVARIABLE=TOKEN201711150551`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 1`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==67046==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60400008b178 at pc 0x00010bdcad2d bp 0x7fff53e49780 sp 0x7fff53e49778
  03: READ of size 8 at 0x60400008b178 thread T0
  04:     #0 0x10bdcad2c in local_get_node local_get.c:11
  05:     #1 0x10bdcabdb in local_add_change_from_string local_add.c:57
  06:     #2 0x10bdcb6ab in env_add_var env_add.c:28
  07:     #3 0x10bdcba7c in env_add_change env_add.c:59
  08:     #4 0x10bdcbbe2 in env_add_var_from_string env_add.c:68
  09:     #5 0x10bdb99e0 in build_new_env env.c:59
  10:     #6 0x10bdb9600 in builtin_env env.c:91
  11:     #7 0x10bdba168 in exec_builtin exec_builtin.c:45
  12:     #8 0x10bdd5db9 in exec_simple_command exec_simple_command.c:135
  13:     #9 0x10bdd1905 in exec exec.c:39
  14:     #10 0x10bdd29b4 in exec_command exec_command.c:20
  15:     #11 0x10bdd1905 in exec exec.c:39
  16:     #12 0x10bdd40c5 in exec_pipe_sequence exec_pipe_sequence.c:9
  17:     #13 0x10bdd1905 in exec exec.c:39
  18:     #14 0x10bdd4b1e in exec_pipeline exec_pipeline.c:84
  19:     #15 0x10bdd1905 in exec exec.c:39
  20:     #16 0x10bdd1a51 in exec_and_or exec_and_or.c:13
  21:     #17 0x10bdd1905 in exec exec.c:39
  22:     #18 0x10bdd2db7 in exec_complete_command exec_complete_command.c:45
  23:     #19 0x10bdd1905 in exec exec.c:39
  24:     #20 0x10bdd3071 in exec_complete_commands exec_complete_commands.c:10
  25:     #21 0x10bdd1905 in exec exec.c:39
  26:     #22 0x10bdd4ce9 in exec_program exec_program.c:10
  27:     #23 0x10bdd1905 in exec exec.c:39
  28:     #24 0x10bdcfd85 in exec_main_loop lex_and_parse.c:18
  29:     #25 0x10bdd0559 in lex_and_parse lex_and_parse.c:79
  30:     #26 0x10bdd0d7e in main_loop main_loop.c:72
  31:     #27 0x10bdb66ab in main main.c:69
  32:     #28 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: 0x60400008b178 is located 0 bytes to the right of 40-byte region [0x60400008b150,0x60400008b178)
  35: allocated by thread T0 here:
  36:     #0 0x10bf98f3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  37:     #1 0x10be1846f in palloc palloc.c:16
  38:     #2 0x10be0ffdb in ft_arrayjoin ft_arrayjoin.c:14
  39:     #3 0x10be100bf in ft_arrayjoin_free ft_arrayjoin.c:33
  40:     #4 0x10bdd5c35 in exec_simple_command exec_simple_command.c:125
  41:     #5 0x10bdd1905 in exec exec.c:39
  42:     #6 0x10bdd29b4 in exec_command exec_command.c:20
  43:     #7 0x10bdd1905 in exec exec.c:39
  44:     #8 0x10bdd40c5 in exec_pipe_sequence exec_pipe_sequence.c:9
  45:     #9 0x10bdd1905 in exec exec.c:39
  46:     #10 0x10bdd4b1e in exec_pipeline exec_pipeline.c:84
  47:     #11 0x10bdd1905 in exec exec.c:39
  48:     #12 0x10bdd1a51 in exec_and_or exec_and_or.c:13
  49:     #13 0x10bdd1905 in exec exec.c:39
  50:     #14 0x10bdd2db7 in exec_complete_command exec_complete_command.c:45
  51:     #15 0x10bdd1905 in exec exec.c:39
  52:     #16 0x10bdd3071 in exec_complete_commands exec_complete_commands.c:10
  53:     #17 0x10bdd1905 in exec exec.c:39
  54:     #18 0x10bdd4ce9 in exec_program exec_program.c:10
  55:     #19 0x10bdd1905 in exec exec.c:39
  56:     #20 0x10bdcfd85 in exec_main_loop lex_and_parse.c:18
  57:     #21 0x10bdd0559 in lex_and_parse lex_and_parse.c:79
  58:     #22 0x10bdd0d7e in main_loop main_loop.c:72
  59:     #23 0x10bdb66ab in main main.c:69
  60:     #24 0x7fffb3e08234 in start (libdyld.dylib:x86_64+0x5234)
  61: 
  62: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:11 in local_get_node
  63: Shadow bytes around the buggy address:
  64:   0x1c08000115d0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  65:   0x1c08000115e0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  66:   0x1c08000115f0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  67:   0x1c0800011600: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  68:   0x1c0800011610: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  69: =>0x1c0800011620: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00[fa]
  70:   0x1c0800011630: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  71:   0x1c0800011640: fa fa fd fd fd fd fd fa fa fa fa fa fa fa fa fa
  72:   0x1c0800011650: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  73:   0x1c0800011660: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  74:   0x1c0800011670: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  75: Shadow byte legend (one shadow byte represents 8 application bytes):
  76:   Addressable:           00
  77:   Partially addressable: 01 02 03 04 05 06 07 
  78:   Heap left redzone:       fa
  79:   Freed heap region:       fd
  80:   Stack left redzone:      f1
  81:   Stack mid redzone:       f2
  82:   Stack right redzone:     f3
  83:   Stack after return:      f5
  84:   Stack use after scope:   f8
  85:   Global redzone:          f9
  86:   Global init order:       f6
  87:   Poisoned by user:        f7
  88:   Container overflow:      fc
  89:   Array cookie:            ac
  90:   Intra object redzone:    bb
  91:   ASan internal:           fe
  92:   Left alloca redzone:     ca
  93:   Right alloca redzone:    cb
  94: ==67046==ABORTING
  95: ./lib/main.sh: line 102: 67046 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/002-status-passed-as-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a number as first argument with the builtin `exit` results in the Shell termination with given number as exit status.[0m

  STDIN:
[38;5;239m  01: exit 42[0m

  STDOUT:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: tcsetattr error[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/003-status-of-last-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `exit` without any argument results in a Shell termination and the exit status of the previous command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: exit[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/001-too-many-args[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong number of arguments with the builtin `exit` does not result in the Shell termination but an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit 21 42
  02: ./write_on_stdout TOKEN201711150551[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711150551`[0m
[38;5;239m  01: TOKEN201711150551[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Tt]oo many arguments|[Aa]rgument list too long)`[0m
[38;5;239m  01: exit: to many arguments[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/002-non-numeric-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-numeric argument with the builtin `exit` results in the Shell termination and an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit abc
  02: ./write_on_stdout TOKEN201711150551[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711150551`[0m
[38;5;239m  01: TOKEN201711150551[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]umeric argument required`[0m
[38;5;239m  01: exit: numeric argument required[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/004-invalid-identifier[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong variable name with the builtin `setenv` (or `export`) results in error.[0m

  STDIN:
[38;5;239m  01: setenv 42
  02: export 42[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..[0m

Total tests: 281
Total failed tests: 92
Total pending tests: 3
