Mmain	srcs/main.c	/^int	main(void)$/
append_redir	srcs/lexer-parser/parser.c	/^static void	append_redir(t_ast **root, t_list **to/
apply_opt	srcs/builtin/env.c	/^static const char	**apply_opt(t_env *env, const ch/
array_matches	srcs/completion/comple_matches.c	/^char	**array_matches(char *dir_match, char *to_mat/
ast_create_node	srcs/lexer-parser/init.c	/^t_ast		*ast_create_node(t_token *token, t_list *ch/
ast_create_node_from_redir	srcs/lexer-parser/redir.c	/^t_ast		*ast_create_node_from_redir(t_list **token_/
ast_create_node_from_word	srcs/lexer-parser/casual_node.c	/^t_ast		*ast_create_node_from_word(t_list **token_l/
ast_create_simple_command	srcs/lexer-parser/parser.c	/^t_ast		*ast_create_simple_command(t_ast **root, t_/
ast_parse	srcs/lexer-parser/parser.c	/^t_ast		*ast_parse(t_ast **root, t_list **token_lis/
btsearch_add	srcs/history/btsearch_add.c	/^void	btsearch_add(char keycode, t_line *line, t_hi/
btsearch_change_line	srcs/history/btsearch_move.c	/^void	btsearch_change_line(t_line *line, t_hist *h,/
btsearch_exit	srcs/history/btsearch_exit.c	/^int		btsearch_exit(t_line *line, t_hist *h)$/
btsearch_first_search	srcs/history/btsearch_add.c	/^void	btsearch_first_search(t_hist *h)$/
btsearch_get_input	srcs/history/btsearch_get_input.c	/^int		btsearch_get_input(t_line *line)$/
btsearch_init	srcs/history/btsearch_init.c	/^int		btsearch_init(t_line *line, t_hist *h)$/
btsearch_next	srcs/history/btsearch_move.c	/^int	btsearch_next(t_line *line, t_hist *h)$/
btsearch_prev	srcs/history/btsearch_move.c	/^int	btsearch_prev(t_line *line, t_hist *h)$/
btsearch_refresh	srcs/history/btsearch_refresh.c	/^void	btsearch_refresh(t_line *line, t_hist *h)$/
btsearch_search	srcs/history/btsearch_add.c	/^void	btsearch_search(t_hist *h)$/
build_new_env	srcs/builtin/env.c	/^static const char	**build_new_env(t_env *env, cons/
builtin_cd	srcs/builtin/cd.c	/^int			builtin_cd(t_env *env, const char **argv)$/
builtin_echo	srcs/builtin/echo.c	/^int					builtin_echo(t_env *env, const char **argv/
builtin_env	srcs/builtin/env.c	/^int					builtin_env(t_env *old_env, const char **a/
builtin_exit	srcs/builtin/exit.c	/^int	builtin_exit(t_env *env, const char **argv)$/
builtin_setenv	srcs/builtin/setenv.c	/^int		builtin_setenv(t_env *env, const char **argv)/
builtin_unsetenv	srcs/builtin/unsetenv.c	/^int	builtin_unsetenv(t_env *env, char **argv)$/
close_expand	srcs/lexer-parser/match_expand.c	/^static int	close_expand(t_lexer *lex, char open, c/
comple_clear	srcs/completion/comple_exit_matched.c	/^void	comple_clear(t_comple c)$/
comple_down	srcs/completion/comple_move.c	/^int		comple_down(t_comple *c)$/
comple_exit_matched	srcs/completion/comple_exit_matched.c	/^int	comple_exit_matched(t_line *line, t_comple c)$/
comple_file_matches	srcs/completion/comple_matches.c	/^char    **comple_file_matches(t_line *line)$/
comple_free	srcs/completion/comple_exit_matched.c	/^void	comple_free(t_comple c)$/
comple_get_input	srcs/completion/comple_get_input.c	/^int		comple_get_input(t_line *line)$/
comple_handle_sigint	srcs/completion/comple_signals.c	/^void	comple_handle_sigint(t_line *line, t_comple */
comple_handle_sigwinch	srcs/completion/comple_signals.c	/^void	comple_handle_sigwinch(t_line *line, t_comple/
comple_init	srcs/completion/comple_init.c	/^int	comple_init(t_line *line, t_comple *c)$/
comple_init_winch	srcs/completion/comple_init.c	/^int	comple_init_winch(t_comple *c)$/
comple_left	srcs/completion/comple_move.c	/^int		comple_left(t_comple *c)$/
comple_line_refresh	srcs/completion/comple_refresh.c	/^void	comple_line_refresh(t_line *line, t_comple c)/
comple_loop	srcs/completion/comple_get_input.c	/^int		comple_loop(unsigned long long keycode, t_lin/
comple_refresh	srcs/completion/comple_refresh.c	/^int	comple_refresh(t_line *line, t_comple c)$/
comple_refresh_elem	srcs/completion/comple_refresh.c	/^void	comple_refresh_elem(t_comple c, int indice)$/
comple_right	srcs/completion/comple_move.c	/^int		comple_right(t_comple *c)$/
comple_set_comple_signum	srcs/completion/comple_signals.c	/^void	comple_set_comple_signum(signum)$/
comple_set_signals	srcs/completion/comple_signals.c	/^void	comple_set_signals(void)$/
comple_up	srcs/completion/comple_move.c	/^int		comple_up(t_comple *c)$/
complete_assignement_word	srcs/lexer-parser/casual_node.c	/^static void	complete_assignement_word(t_list **tok/
conf_term_in	srcs/line_editing/conf_term.c	/^void	conf_term_in(void)$/
conf_term_out	srcs/line_editing/conf_term.c	/^void	conf_term_out(void)$/
copy	srcs/line_editing/copy_paste.c	/^int	copy(t_line *line)$/
create_strstr_btsearch_buff	srcs/history/btsearch_add.c	/^void	create_strstr_btsearch_buff(t_list_d *item)$/
create_token	srcs/lexer-parser/init.c	/^t_token		*create_token(char *value, t_token_type t/
delete_word	srcs/completion/comple_matches.c	/^void	delete_word(char *to_replace)$/
delone_strstr_btsearch_buff	srcs/history/btsearch_add.c	/^void	delone_strstr_btsearch_buff(t_list_d *item)$/
edit_add	srcs/line_editing/edit_add.c	/^void	edit_add(int keycode, t_line *line)$/
edit_backspace	srcs/line_editing/edit_del.c	/^int	edit_backspace(t_line *line)$/
edit_down	srcs/line_editing/edit_move.c	/^int		edit_down(t_line *line)$/
edit_end	srcs/line_editing/edit_move.c	/^int		edit_end(t_line *line)$/
edit_exit	srcs/line_editing/edit_exit.c	/^char	*edit_exit(t_line *line)$/
edit_get_input	srcs/line_editing/get_input.c	/^char		*edit_get_input(t_env *env)$/
edit_handle_sigint	srcs/line_editing/edit_signals.c	/^void	edit_handle_sigint(int signum)$/
edit_handle_sigwinch	srcs/line_editing/edit_signals.c	/^void	edit_handle_sigwinch(int signum)$/
edit_home	srcs/line_editing/edit_move.c	/^int		edit_home(t_line *line)$/
edit_insert_str	srcs/line_editing/edit_insert_str.c	/^int	edit_insert_str(t_line *line, char *dest, char/
edit_left	srcs/line_editing/edit_move.c	/^int		edit_left(t_line *line)$/
edit_line_init	srcs/line_editing/edit_init.c	/^void		edit_line_init(t_line *line)$/
edit_loop	srcs/line_editing/get_input.c	/^int		edit_loop(unsigned long long keycode, t_line /
edit_refresh	srcs/line_editing/edit_refresh.c	/^void	edit_refresh(t_line *line)$/
edit_refresh_clear	srcs/line_editing/edit_refresh.c	/^void	edit_refresh_clear(t_line *line)$/
edit_refresh_cursor	srcs/line_editing/edit_refresh.c	/^void	edit_refresh_cursor(t_line *line)$/
edit_refresh_line	srcs/line_editing/edit_refresh.c	/^void	edit_refresh_line(t_line *line)$/
edit_refresh_nchar	srcs/line_editing/edit_refresh.c	/^size_t	edit_refresh_nchar(t_line *line, size_t pad/
edit_refresh_visu	srcs/line_editing/edit_refresh.c	/^void	edit_refresh_visu(t_line *line)$/
edit_right	srcs/line_editing/edit_move.c	/^int		edit_right(t_line *line)$/
edit_set_signals	srcs/line_editing/edit_signals.c	/^void	edit_set_signals(void)$/
edit_up	srcs/line_editing/edit_move.c	/^int		edit_up(t_line *line)$/
edit_word_left	srcs/line_editing/edit_move.c	/^int		edit_word_left(t_line *line)$/
edit_word_right	srcs/line_editing/edit_move.c	/^int		edit_word_right(t_line *line)$/
enter_visual_mode	srcs/line_editing/copy_paste.c	/^int	enter_visual_mode(t_line *line)$/
env_add_change	srcs/env/add_var.c	/^void		env_add_change(t_env *env, const char *key, /
env_add_var	srcs/env/add_var.c	/^void		env_add_var(t_env *env, const char *key, con/
env_add_var_from_string	srcs/env/add_var.c	/^void		env_add_var_from_string(t_env *env, char *ke/
env_change_value	srcs/env/add_var.c	/^void		env_change_value(t_env *env, const char *key/
env_copy_env	srcs/env/t_env.c	/^int		env_copy_env(t_env *new_env, t_env *old_env)$/
env_create_environ	srcs/env/environ.c	/^char		**env_create_environ(const char **original, /
env_free_env	srcs/env/t_env.c	/^int		env_free_env(t_env *env)$/
env_getenv	srcs/env/environ.c	/^char		*env_getenv(const char **environ, const char/
env_load_base_env	srcs/env/load_base_env.c	/^void		env_load_base_env(t_env *env, const char **e/
env_load_shlvl_pwd	srcs/env/load_base_env.c	/^void		env_load_shlvl_pwd(t_env *env)$/
env_print_environ	srcs/env/environ.c	/^void		env_print_environ(const char **environ)$/
env_remove_var	srcs/env/remove_var.c	/^void	env_remove_var(t_env *env, const char *key)$/
env_remove_var_index	srcs/env/remove_var.c	/^void	env_remove_var_index(t_env *env, size_t key_i/
exec	srcs/exec/main_loop.c	/^void	exec(t_env *env, const char **argv)$/
exec_builtin	srcs/builtin/exec_builtin.c	/^int		exec_builtin(t_env *env, const char **argv)$/
exec_expand	srcs/exec/word_expansion.c	/^void		exec_expand(t_token *token)$/
exec_redir	srcs/exec/exec_simple_commands.c	/^static void	exec_redir(t_ast *ast)$/
exec_simple_command	srcs/exec/exec_simple_commands.c	/^void		exec_simple_command(t_ast *ast)$/
exec_tree	srcs/exec/exec_tree.c	/^void			exec_tree(t_ast *ast)$/
expand_from_env	srcs/exec/param_expansion.c	/^static char	*expand_from_env(t_env *env, char *key/
failure	srcs/exec/exec_bin.c	/^static void	failure(const char *argv, char **paths/
flush_tree	srcs/exec/exec_tree.c	/^static t_ast	*flush_tree(t_ast *ast)$/
fork_exec_bin	srcs/exec/exec_bin.c	/^int			fork_exec_bin(t_env *env, const char **argv)/
free_ast_node	srcs/lexer-parser/free.c	/^void	free_ast_node(t_ast *node)$/
free_token	srcs/lexer-parser/free.c	/^void	free_token(void *value)$/
ft_exec_bin_absolute	srcs/exec/exec_bin.c	/^void		ft_exec_bin_absolute(t_env *env, const char /
ft_exec_bin_path	srcs/exec/exec_bin.c	/^void		ft_exec_bin_path(t_env *env, const char **ar/
ft_insert_str_dest	srcs/line_editing/edit_insert_str.c	/^int	ft_insert_str_dest(char *dest, char *str)$/
ft_putstr_padding_space	srcs/completion/comple_refresh.c	/^void	ft_putstr_padding_space(char *str, unsigned i/
get_current_word_cursor	srcs/completion/comple_matches.c	/^char	*get_current_word_cursor(t_line *line)$/
get_start_word_cursor	srcs/completion/comple_matches.c	/^char	*get_start_word_cursor(t_line *line)$/
get_word_slash	srcs/completion/comple_matches.c	/^char	*get_word_slash(t_line *line)$/
get_ws_col	srcs/completion/size_term.c	/^size_t				get_ws_col(void)$/
goto_termcap	srcs/line_editing/put_termcap.c	/^void	goto_termcap(char *capacity, int co, int li)$/
handle_i	srcs/builtin/env.c	/^static const char	**handle_i(t_env *env, const cha/
history_init	srcs/history/history_init.c	/^void	history_init(t_hist *h)$/
history_load	srcs/history/load_history.c	/^int	history_load(t_hist *h, t_env *env)$/
history_move_exit	srcs/history/history_move.c	/^int	history_move_exit(t_line *line, t_hist *h)$/
history_move_init	srcs/history/history_move.c	/^int	history_move_init(t_line *line, t_hist *h)$/
history_move_loop	srcs/history/history_move_loop.c	/^unsigned long	history_move_loop(t_line *line)$/
history_next	srcs/history/history_move.c	/^int	history_next(t_line *line, t_hist *h)$/
history_prev	srcs/history/history_move.c	/^int	history_prev(t_line *line, t_hist *h)$/
history_refresh	srcs/history/history_refresh.c	/^void	history_refresh(t_line *line)$/
init_lexer	srcs/lexer-parser/init.c	/^t_lexer		init_lexer(const char *line)$/
init_main_loop	srcs/exec/main_loop.c	/^void	init_main_loop(t_line *line, t_hist *hist)$/
int_putchar	srcs/line_editing/put_termcap.c	/^int	int_putchar(int c)$/
lex_get_token_id	srcs/lexer-parser/get_token_id.c	/^t_token_id		lex_get_token_id(t_token *token)$/
lex_id_io_number	srcs/lexer-parser/match_word.c	/^int			lex_id_io_number(t_token *token, char delimi/
lex_id_operator	srcs/lexer-parser/match_operator.c	/^t_token_id			lex_id_operator(const char *value)$/
lex_id_reserved_words	srcs/lexer-parser/match_word.c	/^int			lex_id_reserved_words(t_token *token, t_toke/
lex_id_word	srcs/lexer-parser/match_word.c	/^int			lex_id_word(t_token *token, t_token_id *id)$/
logical_and	srcs/exec/exec_tree.c	/^static void		logical_and(t_ast *ast)$/
main_loop	srcs/exec/main_loop.c	/^void	main_loop(t_env *env)$/
match_expand	srcs/lexer-parser/match_expand.c	/^int			match_expand(t_lexer *lex, size_t token_star/
match_operator	srcs/lexer-parser/match_operator.c	/^int					match_operator(const char *value, size_t t/
match_word	srcs/lexer-parser/match_word.c	/^int			match_word(t_lexer *lex)$/
move_cursor_bufflen_from_lastline	srcs/line_editing/edit_move_cursor.c	/^void	move_cursor_bufflen_from_lastline(t_line *lin/
move_cursor_firstline_from_lastline	srcs/line_editing/edit_move_cursor.c	/^void	move_cursor_firstline_from_lastline(t_line *l/
move_cursor_lastline	srcs/line_editing/edit_move_cursor.c	/^void	move_cursor_lastline(t_line *line)$/
parameter_expansion	srcs/exec/param_expansion.c	/^void		parameter_expansion(t_env *env, t_token *tok/
parse_options	srcs/builtin/echo.c	/^static const char	**parse_options(const char **arg/
part_1	srcs/lexer-parser/check_match.c	/^static int	part_1(t_lexer *lex, size_t token_start/
paste	srcs/line_editing/copy_paste.c	/^int	paste(t_line *line)$/
print_arg	srcs/builtin/echo.c	/^static void			print_arg(const char *argv)$/
print_unicode	srcs/builtin/echo.c	/^static void			print_unicode(const char *argv, size/
pushback_redir	srcs/lexer-parser/redir.c	/^static void	pushback_redir(t_list *child_list, t_l/
put_ntermcap	srcs/line_editing/put_termcap.c	/^void	put_ntermcap(char *capacity, int n)$/
put_prompt	srcs/env/prompt.c	/^size_t	put_prompt(t_env *env)$/
put_termcap	srcs/line_editing/put_termcap.c	/^void	put_termcap(char *capacity)$/
read_tree	srcs/lexer-parser/lexer.c	/^void	read_tree(t_ast *ast_start)$/
return_failure	srcs/return_failure.c	/^int	return_failure(const char *str, const char *er/
singleton_comple	srcs/completion/comple_init.c	/^t_comple	*singleton_comple()$/
singleton_env	srcs/env/t_env.c	/^t_env	*singleton_env(void)$/
singleton_hist	srcs/history/history_init.c	/^t_hist	*singleton_hist(void)$/
singleton_line	srcs/line_editing/edit_init.c	/^t_line		*singleton_line(void)$/
split_on_slash	srcs/exec/tild_expansion.c	/^static void	split_on_slash(t_env *env, char **spli/
split_on_space	srcs/exec/tild_expansion.c	/^static void	split_on_space(t_env *env, t_token *to/
split_word	srcs/completion/comple_matches.c	/^void	split_word(char *str, char *separator, char */
start_complexe_command	srcs/lexer-parser/parser.c	/^static void	start_complexe_command(t_ast **root, t/
start_lex	srcs/lexer-parser/lexer.c	/^t_ast	*start_lex(t_lexer *lex)$/
start_simple_command	srcs/lexer-parser/parser.c	/^static void	start_simple_command(t_ast **root, t_l/
start_token	srcs/lexer-parser/start_token.c	/^int		start_token(t_lexer *lex, size_t *token_start/
strnequ_writen_buff	srcs/history/history_move.c	/^int		strnequ_writen_buff(void *data)$/
tild_expand	srcs/exec/tild_expansion.c	/^void		tild_expand(t_env *env, t_token *token)$/
token_match	srcs/lexer-parser/check_match.c	/^int			token_match(t_lexer *lex, size_t token_start/
tokenize	srcs/lexer-parser/lexer.c	/^int		tokenize(t_lexer *lex, size_t token_start, si/
update_pwd_old_pwd	srcs/builtin/cd.c	/^static int	update_pwd_old_pwd(char *cwd_before_chd/
update_state	srcs/lexer-parser/update_state.c	/^int		update_state(t_lexer *lex)$/
valid_param_expansion	srcs/exec/param_expansion.c	/^static int	valid_param_expansion(char *str)$/
