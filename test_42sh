[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  

----------------------------------------------------------------

[37;1m21sh/misc/001-no-prompt-in-non-interactive-mode[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A non-interactive Shell should not output a prompt. All the test suite runs the Shell in a non-interactive way so that `isatty()` returns `0`. This test is the only one that take it into account so that you can succeed the rest of the suite.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to have_nb_of_lines 1[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m21sh/misc/002-simple-command-line[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell is able to execute a simple command line that contains separators `;`, pipes `|`, and a right redirection `>`.[0m

  Before test:
[38;5;239m  01: rm -rf "./size"
  02: rm -rf "TOKEN201711201817"
  03: echo '^'$(echo TOKEN201711201817_FILE_TOKEN201711201817_STDOUT | wc -c)'$' > "./size"[0m

  STDIN:
[38;5;239m  01: mkdir TOKEN201711201817 ; cd TOKEN201711201817 ; touch TOKEN201711201817_FILE ; ls -1 ; ls | cat | wc -c > TOKEN201711201817_STDOUT ; cat TOKEN201711201817_STDOUT[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711201817_FILE$`[0m
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./size`[0m
[38;5;239m  01: $TOKEN201711180134_NAME
  02: -
  03: 21sh-misc-001-no-prompt-in-non-interactive-mode.stderr
  04: 21sh-misc-001-no-prompt-in-non-interactive-mode.stderr.raw
  05: 21sh-misc-001-no-prompt-in-non-interactive-mode.stdout
  06: 21sh-misc-001-no-prompt-in-non-interactive-mode.stdout.raw
  07: 21sh-misc-002-simple-command-line.stderr
  08: 21sh-misc-002-simple-command-line.stderr.raw
  09: 21sh-misc-002-simple-command-line.stdout
  10: 21sh-misc-002-simple-command-line.stdout.raw
  11: 21sh-pipe-001-single-pipe.stderr
  12: 21sh-pipe-001-single-pipe.stderr.raw
  13: 21sh-pipe-001-single-pipe.stdout
  14: 21sh-pipe-001-single-pipe.stdout.raw
  15: 21sh-pipe-002-chained-pipes.stderr
  16: 21sh-pipe-002-chained-pipes.stderr.raw
  17: 21sh-pipe-002-chained-pipes.stdout
  18: 21sh-pipe-002-chained-pipes.stdout.raw
  19: 21sh-pipe-003-many-chained-pipes.stderr
  20: 21sh-pipe-003-many-chained-pipes.stderr.raw
  21: 21sh-pipe-003-many-chained-pipes.stdout
  22: 21sh-pipe-003-many-chained-pipes.stdout.raw
  23: 21sh-pipe-004-without-surrounding-whitespaces.stderr
  24: 21sh-pipe-004-without-surrounding-whitespaces.stderr.raw
  25: 21sh-pipe-004-without-surrounding-whitespaces.stdout
  26: 21sh-pipe-004-without-surrounding-whitespaces.stdout.raw
  27: 21sh-pipe-005-asynchronous.stderr
  28: 21sh-pipe-005-asynchronous.stderr.raw
  29: 21sh-pipe-005-asynchronous.stdout
  30: 21sh-pipe-005-asynchronous.stdout.raw
  31: 21sh-pipe-006-exit-status.stderr
  32: 21sh-pipe-006-exit-status.stderr.raw
  33: 21sh-pipe-006-exit-status.stdout
  34: 21sh-pipe-006-exit-status.stdout.raw
  35: 21sh-redirections-inputs-001-close-stdin.stderr
  36: 21sh-redirections-inputs-001-close-stdin.stderr.raw
  37: 21sh-redirections-inputs-001-close-stdin.stdout
  38: 21sh-redirections-inputs-001-close-stdin.stdout.raw
  39: 21sh-redirections-inputs-002-filename.stderr
  40: 21sh-redirections-inputs-002-filename.stderr.raw
  41: 21sh-redirections-inputs-002-filename.stdout
  42: 21sh-redirections-inputs-002-filename.stdout.raw
  43: 21sh-redirections-inputs-003-filename-with-whitespaces.stderr
  44: 21sh-redirections-inputs-003-filename-with-whitespaces.stderr.raw
  45: 21sh-redirections-inputs-003-filename-with-whitespaces.stdout
  46: 21sh-redirections-inputs-003-filename-with-whitespaces.stdout.raw
  47: 21sh-redirections-inputs-004-absolute-path.stderr
  48: 21sh-redirections-inputs-004-absolute-path.stderr.raw
  49: 21sh-redirections-inputs-004-absolute-path.stdout
  50: 21sh-redirections-inputs-004-absolute-path.stdout.raw
  51: 21sh-redirections-inputs-005-no-such-file.stderr
  52: 21sh-redirections-inputs-005-no-such-file.stderr.raw
  53: 21sh-redirections-inputs-005-no-such-file.stdout
  54: 21sh-redirections-inputs-005-no-such-file.stdout.raw
  55: 21sh-redirections-outputs-appending-001-append-default-to-file.stderr
  56: 21sh-redirections-outputs-appending-001-append-default-to-file.stderr.raw
  57: 21sh-redirections-outputs-appending-001-append-default-to-file.stdout
  58: 21sh-redirections-outputs-appending-001-append-default-to-file.stdout.raw
  59: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stderr
  60: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stderr.raw
  61: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stdout
  62: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stdout.raw
  63: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stderr
  64: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stderr.raw
  65: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stdout
  66: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stdout.raw
  67: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stderr
  68: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stderr.raw
  69: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stdout
  70: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stdout.raw
  71: 21sh-redirections-outputs-closing-001-close-default-output.stderr
  72: 21sh-redirections-outputs-closing-001-close-default-output.stderr.raw
  73: 21sh-redirections-outputs-closing-001-close-default-output.stdout
  74: 21sh-redirections-outputs-closing-001-close-default-output.stdout.raw
  75: 21sh-redirections-outputs-closing-002-close-stdout.stderr
  76: 21sh-redirections-outputs-closing-002-close-stdout.stderr.raw
  77: 21sh-redirections-outputs-closing-002-close-stdout.stdout
  78: 21sh-redirections-outputs-closing-002-close-stdout.stdout.raw
  79: 21sh-redirections-outputs-closing-003-close-stderr.stderr
  80: 21sh-redirections-outputs-closing-003-close-stderr.stderr.raw
  81: 21sh-redirections-outputs-closing-003-close-stderr.stdout
  82: 21sh-redirections-outputs-closing-003-close-stderr.stdout.raw
  83: 21sh-redirections-outputs-closing-004-close-twice-outputs.stderr
  84: 21sh-redirections-outputs-closing-004-close-twice-outputs.stderr.raw
  85: 21sh-redirections-outputs-closing-004-close-twice-outputs.stdout
  86: 21sh-redirections-outputs-closing-004-close-twice-outputs.stdout.raw
  87: 21sh-redirections-outputs-touching-001-works.stderr
  88: 21sh-redirections-outputs-touching-001-works.stderr.raw
  89: 21sh-redirections-outputs-touching-001-works.stdout
  90: 21sh-redirections-outputs-touching-001-works.stdout.raw
  91: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stderr
  92: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stderr.raw
  93: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stdout
  94: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stdout.raw
  95: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stderr
  96: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stderr.raw
  97: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stdout
  98: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stdout.raw
  99: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stderr
  100: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stderr.raw
  101: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stdout
  102: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stdout.raw
  103: 21sh-redirections-outputs-truncating-multiple-001-separately.stderr
  104: 21sh-redirections-outputs-truncating-multiple-001-separately.stderr.raw
  105: 21sh-redirections-outputs-truncating-multiple-001-separately.stdout
  106: 21sh-redirections-outputs-truncating-multiple-001-separately.stdout.raw
  107: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stderr
  108: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stderr.raw
  109: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stdout
  110: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stdout.raw
  111: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stderr
  112: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stderr.raw
  113: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stdout
  114: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stdout.raw
  115: 21sh-redirections-outputs-truncating-multiple-004-together.stderr
  116: 21sh-redirections-outputs-truncating-multiple-004-together.stderr.raw
  117: 21sh-redirections-outputs-truncating-multiple-004-together.stdout
  118: 21sh-redirections-outputs-truncating-multiple-004-together.stdout.raw
  119: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stderr
  120: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stderr.raw
  121: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stdout
  122: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stdout.raw
  123: 21sh-redirections-outputs-truncating-stderr-001-works.stderr
  124: 21sh-redirections-outputs-truncating-stderr-001-works.stderr.raw
  125: 21sh-redirections-outputs-truncating-stderr-001-works.stdout
  126: 21sh-redirections-outputs-truncating-stderr-001-works.stdout.raw
  127: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stderr
  128: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stderr.raw
  129: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stdout
  130: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stdout.raw
  131: 21sh-separators-semicolon-001-two-commands-sequentially.stderr
  132: 21sh-separators-semicolon-001-two-commands-sequentially.stderr.raw
  133: 21sh-separators-semicolon-001-two-commands-sequentially.stdout
  134: 21sh-separators-semicolon-001-two-commands-sequentially.stdout.raw
  135: 21sh-separators-semicolon-002-n-commands-sequentially.stderr
  136: 21sh-separators-semicolon-002-n-commands-sequentially.stderr.raw
  137: 21sh-separators-semicolon-002-n-commands-sequentially.stdout
  138: 21sh-separators-semicolon-002-n-commands-sequentially.stdout.raw
  139: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stderr
  140: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stderr.raw
  141: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stdout
  142: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stdout.raw
  143: 21sh-separators-semicolon-004-parse-error-empty-command.stderr
  144: 21sh-separators-semicolon-004-parse-error-empty-command.stderr.raw
  145: 21sh-separators-semicolon-004-parse-error-empty-command.stdout
  146: 21sh-separators-semicolon-004-parse-error-empty-command.stdout.raw
  147: 42sh-builtins-export-001-display-env.stderr
  148: 42sh-builtins-export-001-display-env.stderr.raw
  149: 42sh-builtins-export-001-display-env.stdout
  150: 42sh-builtins-export-001-display-env.stdout.raw
  151: 42sh-builtins-export-002-export-basic-key-value-1.stderr
  152: 42sh-builtins-export-002-export-basic-key-value-1.stderr.raw
  153: 42sh-builtins-export-002-export-basic-key-value-1.stdout
  154: 42sh-builtins-export-002-export-basic-key-value-1.stdout.raw
  155: 42sh-builtins-export-003-export-basic-key-value-2.stderr
  156: 42sh-builtins-export-003-export-basic-key-value-2.stderr.raw
  157: 42sh-builtins-export-003-export-basic-key-value-2.stdout
  158: 42sh-builtins-export-003-export-basic-key-value-2.stdout.raw
  159: 42sh-builtins-export-004-export-empty-variable-1.stderr
  160: 42sh-builtins-export-004-export-empty-variable-1.stderr.raw
  161: 42sh-builtins-export-004-export-empty-variable-1.stdout
  162: 42sh-builtins-export-004-export-empty-variable-1.stdout.raw
  163: 42sh-builtins-export-005-export-empty-variable-2.stderr
  164: 42sh-builtins-export-005-export-empty-variable-2.stderr.raw
  165: 42sh-builtins-export-005-export-empty-variable-2.stdout
  166: 42sh-builtins-export-005-export-empty-variable-2.stdout.raw
  167: 42sh-builtins-export-006-export-update-env-variable.stderr
  168: 42sh-builtins-export-006-export-update-env-variable.stderr.raw
  169: 42sh-builtins-export-006-export-update-env-variable.stdout
  170: 42sh-builtins-export-006-export-update-env-variable.stdout.raw
  171: 42sh-builtins-export-007-existing-environment-variable.stderr
  172: 42sh-builtins-export-007-existing-environment-variable.stderr.raw
  173: 42sh-builtins-export-007-existing-environment-variable.stdout
  174: 42sh-builtins-export-007-existing-environment-variable.stdout.raw
  175: 42sh-builtins-export-008-local-to-environment.stderr
  176: 42sh-builtins-export-008-local-to-environment.stderr.raw
  177: 42sh-builtins-export-008-local-to-environment.stdout
  178: 42sh-builtins-export-008-local-to-environment.stdout.raw
  179: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stderr
  180: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stderr.raw
  181: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stdout
  182: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stdout.raw
  183: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stderr
  184: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stderr.raw
  185: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stdout
  186: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stdout.raw
  187: 42sh-builtins-export-errors-001-invalid-identifier-1.stderr
  188: 42sh-builtins-export-errors-001-invalid-identifier-1.stderr.raw
  189: 42sh-builtins-export-errors-001-invalid-identifier-1.stdout
  190: 42sh-builtins-export-errors-001-invalid-identifier-1.stdout.raw
  191: 42sh-builtins-export-errors-002-invalid-identifier-2.stderr
  192: 42sh-builtins-export-errors-002-invalid-identifier-2.stderr.raw
  193: 42sh-builtins-export-errors-002-invalid-identifier-2.stdout
  194: 42sh-builtins-export-errors-002-invalid-identifier-2.stdout.raw
  195: 42sh-builtins-export-errors-003-illegal-option.stderr
  196: 42sh-builtins-export-errors-003-illegal-option.stderr.raw
  197: 42sh-builtins-export-errors-003-illegal-option.stdout
  198: 42sh-builtins-export-errors-003-illegal-option.stdout.raw
  199: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stderr
  200: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stderr.raw
  201: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stdout
  202: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stdout.raw
  203: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stderr
  204: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stderr.raw
  205: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stdout
  206: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stdout.raw
  207: 42sh-builtins-export-options-001-export-with-only-p-parameter.stderr
  208: 42sh-builtins-export-options-001-export-with-only-p-parameter.stderr.raw
  209: 42sh-builtins-export-options-001-export-with-only-p-parameter.stdout
  210: 42sh-builtins-export-options-001-export-with-only-p-parameter.stdout.raw
  211: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stderr
  212: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stderr.raw
  213: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stdout
  214: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stdout.raw
  215: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stderr
  216: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stderr.raw
  217: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stdout
  218: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stdout.raw
  219: 42sh-builtins-export-options-004-export-n-param.stderr
  220: 42sh-builtins-export-options-004-export-n-param.stderr.raw
  221: 42sh-builtins-export-options-004-export-n-param.stdout
  222: 42sh-builtins-export-options-004-export-n-param.stdout.raw
  223: 42sh-escaping-001-escape-single-character-1.stderr
  224: 42sh-escaping-001-escape-single-character-1.stderr.raw
  225: 42sh-escaping-001-escape-single-character-1.stdout
  226: 42sh-escaping-001-escape-single-character-1.stdout.raw
  227: 42sh-escaping-002-escape-single-character-2.stderr
  228: 42sh-escaping-002-escape-single-character-2.stderr.raw
  229: 42sh-escaping-002-escape-single-character-2.stdout
  230: 42sh-escaping-002-escape-single-character-2.stdout.raw
  231: 42sh-escaping-003-escape-single-character-3.stderr
  232: 42sh-escaping-003-escape-single-character-3.stderr.raw
  233: 42sh-escaping-003-escape-single-character-3.stdout
  234: 42sh-escaping-003-escape-single-character-3.stdout.raw
  235: 42sh-escaping-004-escape-single-character-4.stderr
  236: 42sh-escaping-004-escape-single-character-4.stderr.raw
  237: 42sh-escaping-004-escape-single-character-4.stdout
  238: 42sh-escaping-004-escape-single-character-4.stdout.raw
  239: 42sh-escaping-005-escape-single-character-5.stderr
  240: 42sh-escaping-005-escape-single-character-5.stderr.raw
  241: 42sh-escaping-005-escape-single-character-5.stdout
  242: 42sh-escaping-005-escape-single-character-5.stdout.raw
  243: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  244: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  245: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  246: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  247: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stderr
  248: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stderr.raw
  249: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stdout
  250: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stdout.raw
  251: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stderr
  252: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stderr.raw
  253: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stdout
  254: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stdout.raw
  255: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stderr
  256: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stderr.raw
  257: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stdout
  258: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stdout.raw
  259: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stderr
  260: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stderr.raw
  261: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stdout
  262: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stdout.raw
  263: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stderr
  264: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stderr.raw
  265: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stdout
  266: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stdout.raw
  267: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stderr
  268: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stderr.raw
  269: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stdout
  270: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stdout.raw
  271: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stderr
  272: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stderr.raw
  273: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stdout
  274: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stdout.raw
  275: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stderr
  276: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stderr.raw
  277: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stdout
  278: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stdout.raw
  279: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stderr
  280: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stderr.raw
  281: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stdout
  282: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stdout.raw
  283: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stderr
  284: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stderr.raw
  285: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stdout
  286: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stdout.raw
  287: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stderr
  288: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stderr.raw
  289: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stdout
  290: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stdout.raw
  291: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stderr
  292: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stderr.raw
  293: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stdout
  294: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stdout.raw
  295: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stderr
  296: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stderr.raw
  297: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stdout
  298: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stdout.raw
  299: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stderr
  300: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stderr.raw
  301: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stdout
  302: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stdout.raw
  303: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stderr
  304: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stderr.raw
  305: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stdout
  306: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stdout.raw
  307: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stderr
  308: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stderr.raw
  309: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stdout
  310: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stdout.raw
  311: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stderr
  312: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stderr.raw
  313: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stdout
  314: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stdout.raw
  315: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stderr
  316: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stderr.raw
  317: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stdout
  318: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stdout.raw
  319: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stderr
  320: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stderr.raw
  321: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stdout
  322: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stdout.raw
  323: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stderr
  324: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stderr.raw
  325: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stdout
  326: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stdout.raw
  327: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stderr
  328: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stderr.raw
  329: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stdout
  330: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stdout.raw
  331: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stderr
  332: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stderr.raw
  333: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stdout
  334: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stdout.raw
  335: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stderr
  336: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stderr.raw
  337: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stdout
  338: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stdout.raw
  339: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stderr
  340: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stderr.raw
  341: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stdout
  342: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stdout.raw
  343: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stderr
  344: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stderr.raw
  345: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stdout
  346: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stdout.raw
  347: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stderr
  348: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stderr.raw
  349: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stdout
  350: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stdout.raw
  351: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stderr
  352: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stderr.raw
  353: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stdout
  354: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stdout.raw
  355: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stderr
  356: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stderr.raw
  357: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stdout
  358: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stdout.raw
  359: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stderr
  360: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stderr.raw
  361: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stdout
  362: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stdout.raw
  363: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stderr
  364: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stderr.raw
  365: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stdout
  366: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stdout.raw
  367: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stderr
  368: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stderr.raw
  369: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stdout
  370: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stdout.raw
  371: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stderr
  372: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stderr.raw
  373: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stdout
  374: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stdout.raw
  375: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stderr
  376: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stderr.raw
  377: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stdout
  378: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stdout.raw
  379: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stderr
  380: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stderr.raw
  381: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stdout
  382: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stdout.raw
  383: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stderr
  384: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stderr.raw
  385: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stdout
  386: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stdout.raw
  387: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stderr
  388: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stderr.raw
  389: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stdout
  390: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stdout.raw
  391: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stderr
  392: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stderr.raw
  393: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stdout
  394: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stdout.raw
  395: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stderr
  396: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stderr.raw
  397: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stdout
  398: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stdout.raw
  399: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stderr
  400: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stderr.raw
  401: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stdout
  402: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stdout.raw
  403: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stderr
  404: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stderr.raw
  405: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stdout
  406: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stdout.raw
  407: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stderr
  408: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stderr.raw
  409: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stdout
  410: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stdout.raw
  411: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stderr
  412: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stderr.raw
  413: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stdout
  414: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stdout.raw
  415: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stderr
  416: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stderr.raw
  417: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stdout
  418: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stdout.raw
  419: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stderr
  420: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stderr.raw
  421: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stdout
  422: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stdout.raw
  423: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stderr
  424: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stderr.raw
  425: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stdout
  426: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stdout.raw
  427: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stderr
  428: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stderr.raw
  429: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stdout
  430: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stdout.raw
  431: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stderr
  432: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stderr.raw
  433: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stdout
  434: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stdout.raw
  435: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stderr
  436: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stderr.raw
  437: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stdout
  438: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stdout.raw
  439: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stderr
  440: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stderr.raw
  441: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stdout
  442: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stdout.raw
  443: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stderr
  444: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stderr.raw
  445: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stdout
  446: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stdout.raw
  447: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stderr
  448: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stderr.raw
  449: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stdout
  450: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stdout.raw
  451: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stderr
  452: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stderr.raw
  453: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stdout
  454: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stdout.raw
  455: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stderr
  456: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stderr.raw
  457: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stdout
  458: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stdout.raw
  459: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stderr
  460: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stderr.raw
  461: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stdout
  462: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stdout.raw
  463: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stderr
  464: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stderr.raw
  465: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stdout
  466: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stdout.raw
  467: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stderr
  468: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stderr.raw
  469: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stdout
  470: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stdout.raw
  471: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stderr
  472: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stderr.raw
  473: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stdout
  474: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stdout.raw
  475: 42sh-local-variable-001-declare-and-expand-1.stderr
  476: 42sh-local-variable-001-declare-and-expand-1.stderr.raw
  477: 42sh-local-variable-001-declare-and-expand-1.stdout
  478: 42sh-local-variable-001-declare-and-expand-1.stdout.raw
  479: 42sh-local-variable-002-declare-and-expand-2.stderr
  480: 42sh-local-variable-002-declare-and-expand-2.stderr.raw
  481: 42sh-local-variable-002-declare-and-expand-2.stdout
  482: 42sh-local-variable-002-declare-and-expand-2.stdout.raw
  483: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stderr
  484: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stderr.raw
  485: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stdout
  486: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stdout.raw
  487: 42sh-local-variable-004-existing-variable-in-environment-1.stderr
  488: 42sh-local-variable-004-existing-variable-in-environment-1.stderr.raw
  489: 42sh-local-variable-004-existing-variable-in-environment-1.stdout
  490: 42sh-local-variable-004-existing-variable-in-environment-1.stdout.raw
  491: 42sh-local-variable-005-existing-variable-in-environment-2.stderr
  492: 42sh-local-variable-005-existing-variable-in-environment-2.stderr.raw
  493: 42sh-local-variable-005-existing-variable-in-environment-2.stdout
  494: 42sh-local-variable-005-existing-variable-in-environment-2.stdout.raw
  495: 42sh-local-variable-006-existing-variable-in-environment-3.stderr
  496: 42sh-local-variable-006-existing-variable-in-environment-3.stderr.raw
  497: 42sh-local-variable-006-existing-variable-in-environment-3.stdout
  498: 42sh-local-variable-006-existing-variable-in-environment-3.stdout.raw
  499: 42sh-local-variable-007-multiple-declaration-at-a-time.stderr
  500: 42sh-local-variable-007-multiple-declaration-at-a-time.stderr.raw
  501: 42sh-local-variable-007-multiple-declaration-at-a-time.stdout
  502: 42sh-local-variable-007-multiple-declaration-at-a-time.stdout.raw
  503: 42sh-local-variable-008-multiple-declaration-with-same-name.stderr
  504: 42sh-local-variable-008-multiple-declaration-with-same-name.stderr.raw
  505: 42sh-local-variable-008-multiple-declaration-with-same-name.stdout
  506: 42sh-local-variable-008-multiple-declaration-with-same-name.stdout.raw
  507: 42sh-local-variable-009-last-exit-status.stderr
  508: 42sh-local-variable-009-last-exit-status.stderr.raw
  509: 42sh-local-variable-009-last-exit-status.stdout
  510: 42sh-local-variable-009-last-exit-status.stdout.raw
  511: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stderr
  512: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stderr.raw
  513: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stdout
  514: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stdout.raw
  515: 42sh-local-variable-mixed-redirections-001-truncating.stderr
  516: 42sh-local-variable-mixed-redirections-001-truncating.stderr.raw
  517: 42sh-local-variable-mixed-redirections-001-truncating.stdout
  518: 42sh-local-variable-mixed-redirections-001-truncating.stdout.raw
  519: 42sh-local-variable-mixed-redirections-002-appending.stderr
  520: 42sh-local-variable-mixed-redirections-002-appending.stderr.raw
  521: 42sh-local-variable-mixed-redirections-002-appending.stdout
  522: 42sh-local-variable-mixed-redirections-002-appending.stdout.raw
  523: 42sh-local-variable-mixed-redirections-003-reading.stderr
  524: 42sh-local-variable-mixed-redirections-003-reading.stderr.raw
  525: 42sh-local-variable-mixed-redirections-003-reading.stdout
  526: 42sh-local-variable-mixed-redirections-003-reading.stdout.raw
  527: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stderr
  528: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stderr.raw
  529: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stdout
  530: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stdout.raw
  531: 42sh-quoting-double-quotes-001-it-works.stderr
  532: 42sh-quoting-double-quotes-001-it-works.stderr.raw
  533: 42sh-quoting-double-quotes-001-it-works.stdout
  534: 42sh-quoting-double-quotes-001-it-works.stdout.raw
  535: 42sh-quoting-double-quotes-002-concatenated-strings.stderr
  536: 42sh-quoting-double-quotes-002-concatenated-strings.stderr.raw
  537: 42sh-quoting-double-quotes-002-concatenated-strings.stdout
  538: 42sh-quoting-double-quotes-002-concatenated-strings.stdout.raw
  539: 42sh-quoting-double-quotes-003-first-argument-inhibited.stderr
  540: 42sh-quoting-double-quotes-003-first-argument-inhibited.stderr.raw
  541: 42sh-quoting-double-quotes-003-first-argument-inhibited.stdout
  542: 42sh-quoting-double-quotes-003-first-argument-inhibited.stdout.raw
  543: 42sh-quoting-double-quotes-004-multiline-1.stderr
  544: 42sh-quoting-double-quotes-004-multiline-1.stderr.raw
  545: 42sh-quoting-double-quotes-004-multiline-1.stdout
  546: 42sh-quoting-double-quotes-004-multiline-1.stdout.raw
  547: 42sh-quoting-double-quotes-005-multiline-2.stderr
  548: 42sh-quoting-double-quotes-005-multiline-2.stderr.raw
  549: 42sh-quoting-double-quotes-005-multiline-2.stdout
  550: 42sh-quoting-double-quotes-005-multiline-2.stdout.raw
  551: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stderr
  552: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stderr.raw
  553: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stdout
  554: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stdout.raw
  555: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stderr
  556: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stderr.raw
  557: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stdout
  558: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stdout.raw
  559: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stderr
  560: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stderr.raw
  561: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stdout
  562: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stdout.raw
  563: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stderr
  564: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stderr.raw
  565: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stdout
  566: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stdout.raw
  567: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stderr
  568: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stderr.raw
  569: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stdout
  570: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stdout.raw
  571: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  572: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  573: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  574: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  575: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr
  576: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr.raw
  577: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout
  578: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout.raw
  579: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr
  580: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr.raw
  581: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout
  582: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout.raw
  583: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr
  584: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr.raw
  585: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout
  586: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout.raw
  587: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr
  588: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr.raw
  589: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout
  590: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout.raw
  591: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr
  592: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr.raw
  593: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout
  594: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout.raw
  595: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr
  596: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr.raw
  597: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout
  598: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout.raw
  599: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stderr
  600: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stderr.raw
  601: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stdout
  602: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stdout.raw
  603: 42sh-quoting-mixed-001-simple-and-double-quotes.stderr
  604: 42sh-quoting-mixed-001-simple-and-double-quotes.stderr.raw
  605: 42sh-quoting-mixed-001-simple-and-double-quotes.stdout
  606: 42sh-quoting-mixed-001-simple-and-double-quotes.stdout.raw
  607: 42sh-quoting-mixed-002-multiline.stderr
  608: 42sh-quoting-mixed-002-multiline.stderr.raw
  609: 42sh-quoting-mixed-002-multiline.stdout
  610: 42sh-quoting-mixed-002-multiline.stdout.raw
  611: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  612: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  613: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  614: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  615: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stderr
  616: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stderr.raw
  617: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stdout
  618: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stdout.raw
  619: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stderr
  620: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stderr.raw
  621: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stdout
  622: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stdout.raw
  623: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stderr
  624: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stderr.raw
  625: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stdout
  626: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stdout.raw
  627: 42sh-quoting-simple-quotes-001-it-works.stderr
  628: 42sh-quoting-simple-quotes-001-it-works.stderr.raw
  629: 42sh-quoting-simple-quotes-001-it-works.stdout
  630: 42sh-quoting-simple-quotes-001-it-works.stdout.raw
  631: 42sh-quoting-simple-quotes-002-concatenated-strings.stderr
  632: 42sh-quoting-simple-quotes-002-concatenated-strings.stderr.raw
  633: 42sh-quoting-simple-quotes-002-concatenated-strings.stdout
  634: 42sh-quoting-simple-quotes-002-concatenated-strings.stdout.raw
  635: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stderr
  636: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stderr.raw
  637: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stdout
  638: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stdout.raw
  639: 42sh-quoting-simple-quotes-004-multiline-1.stderr
  640: 42sh-quoting-simple-quotes-004-multiline-1.stderr.raw
  641: 42sh-quoting-simple-quotes-004-multiline-1.stdout
  642: 42sh-quoting-simple-quotes-004-multiline-1.stdout.raw
  643: 42sh-quoting-simple-quotes-005-multiline-2.stderr
  644: 42sh-quoting-simple-quotes-005-multiline-2.stderr.raw
  645: 42sh-quoting-simple-quotes-005-multiline-2.stdout
  646: 42sh-quoting-simple-quotes-005-multiline-2.stdout.raw
  647: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stderr
  648: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stderr.raw
  649: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stdout
  650: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stdout.raw
  651: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stderr
  652: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stderr.raw
  653: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stdout
  654: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stdout.raw
  655: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stderr
  656: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stderr.raw
  657: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stdout
  658: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stdout.raw
  659: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stderr
  660: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stderr.raw
  661: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stdout
  662: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stdout.raw
  663: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stderr
  664: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stderr.raw
  665: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stdout
  666: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stdout.raw
  667: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  668: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  669: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  670: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  671: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr
  672: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr.raw
  673: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout
  674: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout.raw
  675: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr
  676: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr.raw
  677: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout
  678: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout.raw
  679: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr
  680: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr.raw
  681: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout
  682: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout.raw
  683: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr
  684: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr.raw
  685: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout
  686: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout.raw
  687: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr
  688: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr.raw
  689: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout
  690: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout.raw
  691: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr
  692: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr.raw
  693: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout
  694: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout.raw
  695: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stderr
  696: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stderr.raw
  697: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stdout
  698: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stdout.raw
  699: 42sh-subshell-001-tokens-are-recognized.stderr
  700: 42sh-subshell-001-tokens-are-recognized.stderr.raw
  701: 42sh-subshell-001-tokens-are-recognized.stdout
  702: 42sh-subshell-001-tokens-are-recognized.stdout.raw
  703: 42sh-subshell-002-multiple-levels-of-subshells.stderr
  704: 42sh-subshell-002-multiple-levels-of-subshells.stderr.raw
  705: 42sh-subshell-002-multiple-levels-of-subshells.stdout
  706: 42sh-subshell-002-multiple-levels-of-subshells.stdout.raw
  707: 42sh-subshell-003-multiline.stderr
  708: 42sh-subshell-003-multiline.stderr.raw
  709: 42sh-subshell-003-multiline.stdout
  710: 42sh-subshell-003-multiline.stdout.raw
  711: 42sh-subshell-004-exit-status.stderr
  712: 42sh-subshell-004-exit-status.stderr.raw
  713: 42sh-subshell-004-exit-status.stdout
  714: 42sh-subshell-004-exit-status.stdout.raw
  715: 42sh-subshell-005-copy-of-environment.stderr
  716: 42sh-subshell-005-copy-of-environment.stderr.raw
  717: 42sh-subshell-005-copy-of-environment.stdout
  718: 42sh-subshell-005-copy-of-environment.stdout.raw
  719: 42sh-subshell-errors-001-parse-error-1.stderr
  720: 42sh-subshell-errors-001-parse-error-1.stderr.raw
  721: 42sh-subshell-errors-001-parse-error-1.stdout
  722: 42sh-subshell-errors-001-parse-error-1.stdout.raw
  723: 42sh-subshell-errors-002-parse-error-2.stderr
  724: 42sh-subshell-errors-002-parse-error-2.stderr.raw
  725: 42sh-subshell-errors-002-parse-error-2.stdout
  726: 42sh-subshell-errors-002-parse-error-2.stdout.raw
  727: 42sh-subshell-errors-003-parse-error-3.stderr
  728: 42sh-subshell-errors-003-parse-error-3.stderr.raw
  729: 42sh-subshell-errors-003-parse-error-3.stdout
  730: 42sh-subshell-errors-003-parse-error-3.stdout.raw
  731: 42sh-subshell-errors-004-parse-error-4.stderr
  732: 42sh-subshell-errors-004-parse-error-4.stderr.raw
  733: 42sh-subshell-errors-004-parse-error-4.stdout
  734: 42sh-subshell-errors-004-parse-error-4.stdout.raw
  735: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stderr
  736: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stderr.raw
  737: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stdout
  738: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stdout.raw
  739: 42sh-subshell-mixed-builtins-cd-002-multiline.stderr
  740: 42sh-subshell-mixed-builtins-cd-002-multiline.stderr.raw
  741: 42sh-subshell-mixed-builtins-cd-002-multiline.stdout
  742: 42sh-subshell-mixed-builtins-cd-002-multiline.stdout.raw
  743: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stderr
  744: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stderr.raw
  745: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stdout
  746: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stdout.raw
  747: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stderr
  748: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stderr.raw
  749: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stdout
  750: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stdout.raw
  751: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stderr
  752: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stderr.raw
  753: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stdout
  754: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stdout.raw
  755: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stderr
  756: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stderr.raw
  757: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stdout
  758: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stdout.raw
  759: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stderr
  760: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stderr.raw
  761: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stdout
  762: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stdout.raw
  763: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stderr
  764: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stderr.raw
  765: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stdout
  766: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stdout.raw
  767: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stderr
  768: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stderr.raw
  769: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stdout
  770: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stdout.raw
  771: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stderr
  772: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stderr.raw
  773: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stdout
  774: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stdout.raw
  775: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stderr
  776: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stderr.raw
  777: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stdout
  778: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stdout.raw
  779: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stderr
  780: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stderr.raw
  781: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stdout
  782: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stdout.raw
  783: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stderr
  784: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stderr.raw
  785: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stdout
  786: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stdout.raw
  787: 42sh-subshell-mixed-quoting-002-with-double-quotes.stderr
  788: 42sh-subshell-mixed-quoting-002-with-double-quotes.stderr.raw
  789: 42sh-subshell-mixed-quoting-002-with-double-quotes.stdout
  790: 42sh-subshell-mixed-quoting-002-with-double-quotes.stdout.raw
  791: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stderr
  792: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stderr.raw
  793: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stdout
  794: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stdout.raw
  795: TOKEN201711180134
  796: TOKEN201711180134_006-BINARY-UNDEFINED-PATH
  797: TOKEN201711180134_FILENAME
  798: TOKEN201711180134_SUBDIRECTORY
  799: TOKEN201711201814
  800: TOKEN201711201814_FILE
  801: TOKEN201711201814_STDOUT
  802: TOKEN201711201817
  803: TOKEN201711201817_FILE
  804: append_file_default
  805: append_file_stderr
  806: append_file_stdout
  807: bonuses-inline-environment-variable-001-modifies-child-environment-1.stderr
  808: bonuses-inline-environment-variable-001-modifies-child-environment-1.stderr.raw
  809: bonuses-inline-environment-variable-001-modifies-child-environment-1.stdout
  810: bonuses-inline-environment-variable-001-modifies-child-environment-1.stdout.raw
  811: bonuses-inline-environment-variable-002-modifies-child-environment-2.stderr
  812: bonuses-inline-environment-variable-002-modifies-child-environment-2.stderr.raw
  813: bonuses-inline-environment-variable-002-modifies-child-environment-2.stdout
  814: bonuses-inline-environment-variable-002-modifies-child-environment-2.stdout.raw
  815: bonuses-inline-environment-variable-003-modifies-PATH-only.stderr
  816: bonuses-inline-environment-variable-003-modifies-PATH-only.stderr.raw
  817: bonuses-inline-environment-variable-003-modifies-PATH-only.stdout
  818: bonuses-inline-environment-variable-003-modifies-PATH-only.stdout.raw
  819: bonuses-separators-and-001-run-twice.stderr
  820: bonuses-separators-and-001-run-twice.stderr.raw
  821: bonuses-separators-and-001-run-twice.stdout
  822: bonuses-separators-and-001-run-twice.stdout.raw
  823: bonuses-separators-and-002-do-not-run-second.stderr
  824: bonuses-separators-and-002-do-not-run-second.stderr.raw
  825: bonuses-separators-and-002-do-not-run-second.stdout
  826: bonuses-separators-and-002-do-not-run-second.stdout.raw
  827: bonuses-separators-and-003-run-until-failing.stderr
  828: bonuses-separators-and-003-run-until-failing.stderr.raw
  829: bonuses-separators-and-003-run-until-failing.stdout
  830: bonuses-separators-and-003-run-until-failing.stdout.raw
  831: bonuses-separators-and-errors-001-parse-error-at-beginning.stderr
  832: bonuses-separators-and-errors-001-parse-error-at-beginning.stderr.raw
  833: bonuses-separators-and-errors-001-parse-error-at-beginning.stdout
  834: bonuses-separators-and-errors-001-parse-error-at-beginning.stdout.raw
  835: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stderr
  836: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stderr.raw
  837: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stdout
  838: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stdout.raw
  839: bonuses-separators-mixed-001-and-or.stderr
  840: bonuses-separators-mixed-001-and-or.stderr.raw
  841: bonuses-separators-mixed-001-and-or.stdout
  842: bonuses-separators-mixed-001-and-or.stdout.raw
  843: bonuses-separators-mixed-002-and-or.stderr
  844: bonuses-separators-mixed-002-and-or.stderr.raw
  845: bonuses-separators-mixed-002-and-or.stdout
  846: bonuses-separators-mixed-002-and-or.stdout.raw
  847: bonuses-separators-mixed-003-and-or.stderr
  848: bonuses-separators-mixed-003-and-or.stderr.raw
  849: bonuses-separators-mixed-003-and-or.stdout
  850: bonuses-separators-mixed-003-and-or.stdout.raw
  851: bonuses-separators-mixed-004-or-and.stderr
  852: bonuses-separators-mixed-004-or-and.stderr.raw
  853: bonuses-separators-mixed-004-or-and.stdout
  854: bonuses-separators-mixed-004-or-and.stdout.raw
  855: bonuses-separators-mixed-005-or-and.stderr
  856: bonuses-separators-mixed-005-or-and.stderr.raw
  857: bonuses-separators-mixed-005-or-and.stdout
  858: bonuses-separators-mixed-005-or-and.stdout.raw
  859: bonuses-separators-mixed-006-or-and.stderr
  860: bonuses-separators-mixed-006-or-and.stderr.raw
  861: bonuses-separators-mixed-006-or-and.stdout
  862: bonuses-separators-mixed-006-or-and.stdout.raw
  863: bonuses-separators-or-001-run-first-only.stderr
  864: bonuses-separators-or-001-run-first-only.stderr.raw
  865: bonuses-separators-or-001-run-first-only.stdout
  866: bonuses-separators-or-001-run-first-only.stdout.raw
  867: bonuses-separators-or-002-run-second-only.stderr
  868: bonuses-separators-or-002-run-second-only.stderr.raw
  869: bonuses-separators-or-002-run-second-only.stdout
  870: bonuses-separators-or-002-run-second-only.stdout.raw
  871: bonuses-separators-or-003-run-until-succeeding.stderr
  872: bonuses-separators-or-003-run-until-succeeding.stderr.raw
  873: bonuses-separators-or-003-run-until-succeeding.stdout
  874: bonuses-separators-or-003-run-until-succeeding.stdout.raw
  875: bonuses-separators-or-errors-001-parse-error-at-beginning.stderr
  876: bonuses-separators-or-errors-001-parse-error-at-beginning.stderr.raw
  877: bonuses-separators-or-errors-001-parse-error-at-beginning.stdout
  878: bonuses-separators-or-errors-001-parse-error-at-beginning.stdout.raw
  879: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stderr
  880: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stderr.raw
  881: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stdout
  882: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stdout.raw
  883: bonuses-tilde-expansion-001-expanded-with-HOME-1.stderr
  884: bonuses-tilde-expansion-001-expanded-with-HOME-1.stderr.raw
  885: bonuses-tilde-expansion-001-expanded-with-HOME-1.stdout
  886: bonuses-tilde-expansion-001-expanded-with-HOME-1.stdout.raw
  887: bonuses-tilde-expansion-002-expanded-with-HOME-2.stderr
  888: bonuses-tilde-expansion-002-expanded-with-HOME-2.stderr.raw
  889: bonuses-tilde-expansion-002-expanded-with-HOME-2.stdout
  890: bonuses-tilde-expansion-002-expanded-with-HOME-2.stdout.raw
  891: bonuses-tilde-expansion-003-expanded-with-PWD-1.stderr
  892: bonuses-tilde-expansion-003-expanded-with-PWD-1.stderr.raw
  893: bonuses-tilde-expansion-003-expanded-with-PWD-1.stdout
  894: bonuses-tilde-expansion-003-expanded-with-PWD-1.stdout.raw
  895: bonuses-tilde-expansion-004-expanded-with-PWD-2.stderr
  896: bonuses-tilde-expansion-004-expanded-with-PWD-2.stderr.raw
  897: bonuses-tilde-expansion-004-expanded-with-PWD-2.stdout
  898: bonuses-tilde-expansion-004-expanded-with-PWD-2.stdout.raw
  899: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stderr
  900: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stderr.raw
  901: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stdout
  902: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stdout.raw
  903: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stderr
  904: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stderr.raw
  905: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stdout
  906: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stdout.raw
  907: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stderr
  908: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stderr.raw
  909: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stdout
  910: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stdout.raw
  911: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stderr
  912: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stderr.raw
  913: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stdout
  914: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stdout.raw
  915: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stderr
  916: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stderr.raw
  917: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stdout
  918: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stdout.raw
  919: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stderr
  920: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stderr.raw
  921: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stdout
  922: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stdout.raw
  923: display_env
  924: display_program_name
  925: display_pwd
  926: enoent_symlink
  927: exit_with_status
  928: minishell-binary-001-binary-path-relative.stderr
  929: minishell-binary-001-binary-path-relative.stderr.raw
  930: minishell-binary-001-binary-path-relative.stdout
  931: minishell-binary-001-binary-path-relative.stdout.raw
  932: minishell-binary-002-binary-path-absolute.stderr
  933: minishell-binary-002-binary-path-absolute.stderr.raw
  934: minishell-binary-002-binary-path-absolute.stdout
  935: minishell-binary-002-binary-path-absolute.stdout.raw
  936: minishell-binary-003-binary-test-exec-order.stderr
  937: minishell-binary-003-binary-test-exec-order.stderr.raw
  938: minishell-binary-003-binary-test-exec-order.stdout
  939: minishell-binary-003-binary-test-exec-order.stdout.raw
  940: minishell-binary-004-binary-test-empty-path.stderr
  941: minishell-binary-004-binary-test-empty-path.stderr.raw
  942: minishell-binary-004-binary-test-empty-path.stdout
  943: minishell-binary-004-binary-test-empty-path.stdout.raw
  944: minishell-binary-005-binary-test-wrong-path.stderr
  945: minishell-binary-005-binary-test-wrong-path.stderr.raw
  946: minishell-binary-005-binary-test-wrong-path.stdout
  947: minishell-binary-005-binary-test-wrong-path.stdout.raw
  948: minishell-binary-006-binary-undefined-path.stderr
  949: minishell-binary-006-binary-undefined-path.stderr.raw
  950: minishell-binary-006-binary-undefined-path.stdout
  951: minishell-binary-006-binary-undefined-path.stdout.raw
  952: minishell-binary-007-binary-permission-denied.stderr
  953: minishell-binary-007-binary-permission-denied.stderr.raw
  954: minishell-binary-007-binary-permission-denied.stdout
  955: minishell-binary-007-binary-permission-denied.stdout.raw
  956: minishell-binary-008-binary-too-many-symbolic-links-encountered.stderr
  957: minishell-binary-008-binary-too-many-symbolic-links-encountered.stderr.raw
  958: minishell-binary-008-binary-too-many-symbolic-links-encountered.stdout
  959: minishell-binary-008-binary-too-many-symbolic-links-encountered.stdout.raw
  960: minishell-builtins-cd-001-no-arg.stderr
  961: minishell-builtins-cd-001-no-arg.stderr.raw
  962: minishell-builtins-cd-001-no-arg.stdout
  963: minishell-builtins-cd-001-no-arg.stdout.raw
  964: minishell-builtins-cd-002-current-directory.stderr
  965: minishell-builtins-cd-002-current-directory.stderr.raw
  966: minishell-builtins-cd-002-current-directory.stdout
  967: minishell-builtins-cd-002-current-directory.stdout.raw
  968: minishell-builtins-cd-003-current-directory-2.stderr
  969: minishell-builtins-cd-003-current-directory-2.stderr.raw
  970: minishell-builtins-cd-003-current-directory-2.stdout
  971: minishell-builtins-cd-003-current-directory-2.stdout.raw
  972: minishell-builtins-cd-004-parent-directory.stderr
  973: minishell-builtins-cd-004-parent-directory.stderr.raw
  974: minishell-builtins-cd-004-parent-directory.stdout
  975: minishell-builtins-cd-004-parent-directory.stdout.raw
  976: minishell-builtins-cd-005-root-path.stderr
  977: minishell-builtins-cd-005-root-path.stderr.raw
  978: minishell-builtins-cd-005-root-path.stdout
  979: minishell-builtins-cd-005-root-path.stdout.raw
  980: minishell-builtins-cd-006-root-path-2.stderr
  981: minishell-builtins-cd-006-root-path-2.stderr.raw
  982: minishell-builtins-cd-006-root-path-2.stdout
  983: minishell-builtins-cd-006-root-path-2.stdout.raw
  984: minishell-builtins-cd-007-symbolic-link.stderr
  985: minishell-builtins-cd-007-symbolic-link.stderr.raw
  986: minishell-builtins-cd-007-symbolic-link.stdout
  987: minishell-builtins-cd-007-symbolic-link.stdout.raw
  988: minishell-builtins-cd-008-symbolic-link-2.stderr
  989: minishell-builtins-cd-008-symbolic-link-2.stderr.raw
  990: minishell-builtins-cd-008-symbolic-link-2.stdout
  991: minishell-builtins-cd-008-symbolic-link-2.stdout.raw
  992: minishell-builtins-cd-010-update-OLDPWD.stderr
  993: minishell-builtins-cd-010-update-OLDPWD.stderr.raw
  994: minishell-builtins-cd-010-update-OLDPWD.stdout
  995: minishell-builtins-cd-010-update-OLDPWD.stdout.raw
  996: minishell-builtins-cd-011-dotdot.stderr
  997: minishell-builtins-cd-011-dotdot.stderr.raw
  998: minishell-builtins-cd-011-dotdot.stdout
  999: minishell-builtins-cd-011-dotdot.stdout.raw
  1000: minishell-builtins-cd-012-dot.stderr
  1001: minishell-builtins-cd-012-dot.stderr.raw
  1002: minishell-builtins-cd-012-dot.stdout
  1003: minishell-builtins-cd-012-dot.stdout.raw
  1004: minishell-builtins-cd-013-absolute-path.stderr
  1005: minishell-builtins-cd-013-absolute-path.stderr.raw
  1006: minishell-builtins-cd-013-absolute-path.stdout
  1007: minishell-builtins-cd-013-absolute-path.stdout.raw
  1008: minishell-builtins-cd-errors-001-not-a-directory.stderr
  1009: minishell-builtins-cd-errors-001-not-a-directory.stderr.raw
  1010: minishell-builtins-cd-errors-001-not-a-directory.stdout
  1011: minishell-builtins-cd-errors-001-not-a-directory.stdout.raw
  1012: minishell-builtins-cd-errors-002-not-a-directory-2.stderr
  1013: minishell-builtins-cd-errors-002-not-a-directory-2.stderr.raw
  1014: minishell-builtins-cd-errors-002-not-a-directory-2.stdout
  1015: minishell-builtins-cd-errors-002-not-a-directory-2.stdout.raw
  1016: minishell-builtins-cd-errors-003-permission-denied.stderr
  1017: minishell-builtins-cd-errors-003-permission-denied.stderr.raw
  1018: minishell-builtins-cd-errors-003-permission-denied.stdout
  1019: minishell-builtins-cd-errors-003-permission-denied.stdout.raw
  1020: minishell-builtins-cd-errors-004-permission-denied-2.stderr
  1021: minishell-builtins-cd-errors-004-permission-denied-2.stderr.raw
  1022: minishell-builtins-cd-errors-004-permission-denied-2.stdout
  1023: minishell-builtins-cd-errors-004-permission-denied-2.stdout.raw
  1024: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stderr
  1025: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stderr.raw
  1026: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stdout
  1027: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stdout.raw
  1028: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stderr
  1029: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stderr.raw
  1030: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stdout
  1031: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stdout.raw
  1032: minishell-builtins-cd-errors-007-no-such-file-or-directory.stderr
  1033: minishell-builtins-cd-errors-007-no-such-file-or-directory.stderr.raw
  1034: minishell-builtins-cd-errors-007-no-such-file-or-directory.stdout
  1035: minishell-builtins-cd-errors-007-no-such-file-or-directory.stdout.raw
  1036: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stderr
  1037: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stderr.raw
  1038: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stdout
  1039: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stdout.raw
  1040: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stderr
  1041: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stderr.raw
  1042: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stdout
  1043: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stdout.raw
  1044: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stderr
  1045: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stderr.raw
  1046: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stdout
  1047: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stdout.raw
  1048: minishell-builtins-cd-options-001-not-following-links.stderr
  1049: minishell-builtins-cd-options-001-not-following-links.stderr.raw
  1050: minishell-builtins-cd-options-001-not-following-links.stdout
  1051: minishell-builtins-cd-options-001-not-following-links.stdout.raw
  1052: minishell-builtins-cd-options-002-oldpwd.stderr
  1053: minishell-builtins-cd-options-002-oldpwd.stderr.raw
  1054: minishell-builtins-cd-options-002-oldpwd.stdout
  1055: minishell-builtins-cd-options-002-oldpwd.stdout.raw
  1056: minishell-builtins-env-001-env-same-value-as-parent.stderr
  1057: minishell-builtins-env-001-env-same-value-as-parent.stderr.raw
  1058: minishell-builtins-env-001-env-same-value-as-parent.stdout
  1059: minishell-builtins-env-001-env-same-value-as-parent.stdout.raw
  1060: minishell-builtins-env-002-env-check-usefull-var.stderr
  1061: minishell-builtins-env-002-env-check-usefull-var.stderr.raw
  1062: minishell-builtins-env-002-env-check-usefull-var.stdout
  1063: minishell-builtins-env-002-env-check-usefull-var.stdout.raw
  1064: minishell-builtins-env-003-ignore-environment.stderr
  1065: minishell-builtins-env-003-ignore-environment.stderr.raw
  1066: minishell-builtins-env-003-ignore-environment.stdout
  1067: minishell-builtins-env-003-ignore-environment.stdout.raw
  1068: minishell-builtins-env-005-set-variables.stderr
  1069: minishell-builtins-env-005-set-variables.stderr.raw
  1070: minishell-builtins-env-005-set-variables.stdout
  1071: minishell-builtins-env-005-set-variables.stdout.raw
  1072: minishell-builtins-env-errors-001-command-not-found.stderr
  1073: minishell-builtins-env-errors-001-command-not-found.stderr.raw
  1074: minishell-builtins-env-errors-001-command-not-found.stdout
  1075: minishell-builtins-env-errors-001-command-not-found.stdout.raw
  1076: minishell-builtins-env-errors-002-illegal-option.stderr
  1077: minishell-builtins-env-errors-002-illegal-option.stderr.raw
  1078: minishell-builtins-env-errors-002-illegal-option.stdout
  1079: minishell-builtins-env-errors-002-illegal-option.stdout.raw
  1080: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stderr
  1081: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stderr.raw
  1082: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stdout
  1083: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stdout.raw
  1084: minishell-builtins-exit-001-without-any-argument.stderr
  1085: minishell-builtins-exit-001-without-any-argument.stderr.raw
  1086: minishell-builtins-exit-001-without-any-argument.stdout
  1087: minishell-builtins-exit-001-without-any-argument.stdout.raw
  1088: minishell-builtins-exit-002-status-passed-as-argument.stderr
  1089: minishell-builtins-exit-002-status-passed-as-argument.stderr.raw
  1090: minishell-builtins-exit-002-status-passed-as-argument.stdout
  1091: minishell-builtins-exit-002-status-passed-as-argument.stdout.raw
  1092: minishell-builtins-exit-003-status-of-last-command.stderr
  1093: minishell-builtins-exit-003-status-of-last-command.stderr.raw
  1094: minishell-builtins-exit-003-status-of-last-command.stdout
  1095: minishell-builtins-exit-003-status-of-last-command.stdout.raw
  1096: minishell-builtins-exit-errors-001-too-many-args.stderr
  1097: minishell-builtins-exit-errors-001-too-many-args.stderr.raw
  1098: minishell-builtins-exit-errors-001-too-many-args.stdout
  1099: minishell-builtins-exit-errors-001-too-many-args.stdout.raw
  1100: minishell-builtins-exit-errors-002-non-numeric-argument.stderr
  1101: minishell-builtins-exit-errors-002-non-numeric-argument.stderr.raw
  1102: minishell-builtins-exit-errors-002-non-numeric-argument.stdout
  1103: minishell-builtins-exit-errors-002-non-numeric-argument.stdout.raw
  1104: minishell-builtins-mixed-001-setenv-unsetenv.stderr
  1105: minishell-builtins-mixed-001-setenv-unsetenv.stderr.raw
  1106: minishell-builtins-mixed-001-setenv-unsetenv.stdout
  1107: minishell-builtins-mixed-001-setenv-unsetenv.stdout.raw
  1108: minishell-builtins-setenv-001-no-argument.stderr
  1109: minishell-builtins-setenv-001-no-argument.stderr.raw
  1110: minishell-builtins-setenv-001-no-argument.stdout
  1111: minishell-builtins-setenv-001-no-argument.stdout.raw
  1112: minishell-builtins-setenv-002-add-new-variable.stderr
  1113: minishell-builtins-setenv-002-add-new-variable.stderr.raw
  1114: minishell-builtins-setenv-002-add-new-variable.stdout
  1115: minishell-builtins-setenv-002-add-new-variable.stdout.raw
  1116: minishell-builtins-setenv-003-set-existing-variable.stderr
  1117: minishell-builtins-setenv-003-set-existing-variable.stderr.raw
  1118: minishell-builtins-setenv-003-set-existing-variable.stdout
  1119: minishell-builtins-setenv-003-set-existing-variable.stdout.raw
  1120: minishell-builtins-setenv-004-invalid-identifier.stderr
  1121: minishell-builtins-setenv-004-invalid-identifier.stderr.raw
  1122: minishell-builtins-setenv-004-invalid-identifier.stdout
  1123: minishell-builtins-setenv-004-invalid-identifier.stdout.raw
  1124: minishell-builtins-setenv-005-add-and-set-multiple-variables.stderr
  1125: minishell-builtins-setenv-005-add-and-set-multiple-variables.stderr.raw
  1126: minishell-builtins-setenv-005-add-and-set-multiple-variables.stdout
  1127: minishell-builtins-setenv-005-add-and-set-multiple-variables.stdout.raw
  1128: minishell-builtins-unsetenv-001-unsetenv-first-elem.stderr
  1129: minishell-builtins-unsetenv-001-unsetenv-first-elem.stderr.raw
  1130: minishell-builtins-unsetenv-001-unsetenv-first-elem.stdout
  1131: minishell-builtins-unsetenv-001-unsetenv-first-elem.stdout.raw
  1132: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stderr
  1133: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stderr.raw
  1134: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stdout
  1135: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stdout.raw
  1136: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stderr
  1137: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stderr.raw
  1138: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stdout
  1139: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stdout.raw
  1140: minishell-misc-001-copy-of-environment.stderr
  1141: minishell-misc-001-copy-of-environment.stderr.raw
  1142: minishell-misc-001-copy-of-environment.stdout
  1143: minishell-misc-001-copy-of-environment.stdout.raw
  1144: my_sub_directory
  1145: new_empty_file
  1146: new_file_stderr_and_stdout
  1147: not_a_directory
  1148: playing_with_dotdot
  1149: read_on_stdin
  1150: simple_text_file
  1151: size
  1152: sleep_and_exit_with_status
  1153: sleep_and_write_on_stderr
  1154: stdin
  1155: stored_env
  1156: sub_directory
  1157: sub_directory_link
  1158: symbolic_link
  1159: symbolic_link1
  1160: symbolic_link2
  1161: symbolic_link3
  1162: temporary_directory
  1163: test_globbing
  1164: truncated_file
  1165: virtual_path
  1166: virtual_path_1
  1167: virtual_path_2
  1168: write_all_arguments_on_stdout
  1169: write_on_stderr
  1170: write_on_stdout
  1171: write_on_stdout_and_stderr
  1172:    75627[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m21sh/pipe/001-single-pipe[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Simple test with one piped command.
  The first process write a token on STDOUT and another on STDERR, then the second one read on STDIN and write lines suffixed with the character '@' (similar to `cat -e`).[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_stdout TOKEN201711201817_stderr | ./read_on_stdin[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stdout@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stderr$`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found
  02: ./read_on_stdin: commmand not found[0m

----------------------------------------------------------------

[37;1m21sh/pipe/002-chained-pipes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Simple test with two piped commands.
  The first process write a token on STDOUT and another on STDERR, then the second one read on STDIN and write lines suffixed with the character '@' (similar to `cat -e`). The third one does the same as the second one, so that lines are suffixed with '@@'.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_stdout TOKEN201711201817_stderr | ./read_on_stdin | ./read_on_stdin[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stdout@@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stderr$`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found
  02: ./read_on_stdin: commmand not found
  03: ./read_on_stdin: commmand not found[0m

----------------------------------------------------------------

[37;1m21sh/pipe/003-many-chained-pipes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  One line with many piped commands.
  The first process write a token on STDOUT and another on STDERR, then the others read on STDIN and write lines suffixed with the character '@' (similar to `cat -e`). The full command line results in an output suffixed with ten characters '@@@@@@@@@@'.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_stdout TOKEN201711201817_stderr | ./read_on_stdin | ./read_on_stdin | ./read_on_stdin | ./read_on_stdin | ./read_on_stdin | ./read_on_stdin | ./read_on_stdin | ./read_on_stdin | ./read_on_stdin | ./read_on_stdin[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stdout@@@@@@@@@@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stderr$`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found
  02: ./read_on_stdin: commmand not found
  03: ./read_on_stdin: commmand not found
  04: ./read_on_stdin: commmand not found
  05: ./read_on_stdin: commmand not found
  06: ./read_on_stdin: commmand not found
  07: ./read_on_stdin: commmand not found
  08: ./read_on_stdin: commmand not found
  09: ./read_on_stdin: commmand not found
  10: ./read_on_stdin: commmand not found
  11: ./read_on_stdin: commmand not found[0m

----------------------------------------------------------------

[37;1m21sh/pipe/004-without-surrounding-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A pipe character `|` that is not enclosed in double-quotes is interpreted as a pipe separator even if it is closely placed to the next and previous command fields.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817|./read_on_stdin[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found
  02: ./read_on_stdin: commmand not found[0m

----------------------------------------------------------------

[37;1m21sh/pipe/005-asynchronous[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell waits for all the commands specified in a pipeline to complete before looking after the next command line. In this test, the first command of the pipeline takes a longer time to complete than the next one, so that the outputs should appear in a reverse order. The Shell should wait for the two processes to complete and then launch the second command line.[0m

  STDIN:
[38;5;239m  01: ./sleep_and_write_on_stderr 1 TOKEN201711201817_FIRST | ./sleep_and_write_on_stderr 0 TOKEN201711201817_SECOND
  02: ./sleep_and_write_on_stderr 0 TOKEN201711201817_LAST[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SECONDTOKEN201711201817_FIRSTTOKEN201711201817_LAST`[0m
[38;5;239m  01: ./sleep_and_write_on_stderr: commmand not found
  02: ./sleep_and_write_on_stderr: commmand not found
  03: ./sleep_and_write_on_stderr: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/pipe/006-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a pipeline command is the same as the last piped process.[0m

  STDIN:
[38;5;239m  01: ./sleep_and_exit_with_status 1 21 | ./exit_with_status 42[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./sleep_and_exit_with_status: commmand not found
  02: ./exit_with_status: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/001-close-stdin[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the closing operator `&-` within the STDIN redirection `<` results in a closed standard input, so that `read(2)` results in a read error.[0m

  Before test:
[38;5;239m  01: rm -f ./read_on_stdin
  02: gcc -Wall -Werror -Wextra "/Users/vcombey/42ShellTester/support/read-on-stdin/main.c" -o ./read_on_stdin[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `STDIN READ ERROR$`[0m
[38;5;239m  01: ./read_on_stdin: commmand not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/002-filename[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711201817_LINE_1" > simple_text_file
  02: echo "TOKEN201711201817_LINE_2" >> simple_text_file
  03: echo "TOKEN201711201817_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./read_on_stdin: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/003-filename-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.
  The file path is specified in a separated field.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711201817_LINE_1" > simple_text_file
  02: echo "TOKEN201711201817_LINE_2" >> simple_text_file
  03: echo "TOKEN201711201817_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin < 	 simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./read_on_stdin: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/004-absolute-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using an absolute path to a file within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711201817_LINE_1" > simple_text_file
  02: echo "TOKEN201711201817_LINE_2" >> simple_text_file
  03: echo "TOKEN201711201817_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin </Users/vcombey/42ShellTester/tmp/simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./read_on_stdin: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/001-append-default-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the output to be redirected is not specified so that the standard output is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711201817_first" >append_file_default[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_default TOKEN201711201817_stderr >>append_file_default[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_default`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stderr`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_default` matching_regex `TOKEN201711201817_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_default` matching_regex `TOKEN201711201817_default`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/002-append-stdout-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the standard output is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711201817_first" >append_file_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_stdout TOKEN201711201817_stderr 1>>append_file_stdout[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stderr`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711201817_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711201817_stdout`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/003-append-stderr-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the standard error is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711201817_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_stdout TOKEN201711201817_stderr 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_stderr`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711201817_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711201817_stderr`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/multiple/001-append-twice-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, each output is appended to different files.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711201817_stdout_first" >append_file_stdout
  02: ./write_on_stdout "TOKEN201711201817_stderr_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_stdout_second TOKEN201711201817_stderr_second 1>>append_file_stdout 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_stdout_second`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_stderr_second`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711201817_stdout_first$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711201817_stdout_second$`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711201817_stderr_first$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711201817_stderr_second$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/001-close-default-output[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Not specifying which output to close makes the default standard output to be closed (`>&-` is similar to `1>&-`).
  Closing the standard output has the same behavior as redirecting to `/dev/null`.[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_stdout TOKEN201711201817_stderr >&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stderr`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/002-close-stdout[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard output has the same behavior as redirecting to `/dev/null` (e.g. `ls 1>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_stdout TOKEN201711201817_stderr 1>&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stderr`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/003-close-stderr[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard error has the same behavior as redirecting to `/dev/null` (e.g. `ls 2>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_stdout TOKEN201711201817_stderr 2>&-[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_stderr`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/001-creates-file-if-not-exits[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The right redirection `>` opens the file with the oflag `O_CREAT` so that the file is created if it does not exists.[0m

  Before test:
[38;5;239m  01: rm -f new_file[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817 >new_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file` matching_regex `TOKEN201711201817`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file` with_nb_of_lines `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/002-truncates-file-if-exists[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The right redirection `>` opens the file with the oflag `O_TRUNC` so that the file size is truncated to 0 before writing in it.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817_first >truncated_file[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817_second >truncated_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex TOKEN201711201817_second[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `truncated_file` matching_regex `TOKEN201711201817_second`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `truncated_file` not_matching_regex `TOKEN201711201817_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `truncated_file` with_nb_of_lines `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/003-whitespace-before-filename[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The file name for a right redirection can be specified closely to the character `>` or in a separated field.[0m

  Before test:
[38;5;239m  01: rm -f "new_file"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817 > new_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file` matching_regex `TOKEN201711201817`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file` with_nb_of_lines `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/001-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A different right redirection may be specified for each output.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr"
  02: rm -f "new_file_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_1 TOKEN201711201817_2 1>new_file_stdout 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stdout` matching_regex `TOKEN201711201817_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` matching_regex `TOKEN201711201817_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/002-together-stdout-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard output is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_1 TOKEN201711201817_2 1>new_file_stderr_and_stdout 2>&1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711201817_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711201817_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/003-together-stderr-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard error is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_1 TOKEN201711201817_2 2>new_file_stderr_and_stdout 1>&2[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711201817_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711201817_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/004-together[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr_and_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_1 TOKEN201711201817_2 &>new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711201817_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711201817_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/005-together-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.
  In this test, we specify the file name in a separate field.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_1 TOKEN201711201817_2 &>	  	new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_2`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711201817_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711201817_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/stderr/001-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that redirecting the standard error STDERR to a file `2>` works. In this test, the binary writes a token on each standard and error output, so that only the STDOUT is outputted and STDERR is written in a file `new_file_stderr`.[0m

  Before test:
[38;5;239m  01: rm -f "./new_file_stderr"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711201817_STDOUT TOKEN201711201817_STDERR 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_STDERR`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` matching_regex `TOKEN201711201817_STDERR`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` with_nb_of_lines 1[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/stdout/001-with-explicit-fd[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if '1>' redirect STDIN to a file.
  We are using echo with one argument. The output should NOT return anything on the standard output.[0m

  Before test:
[38;5;239m  01: rm -f new_file[0m

  STDIN:
[38;5;239m  01: /bin/echo TOKEN1 1>new_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex TOKEN1[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file new_file matching_regex TOKEN1[0m
[31m[38;5;160m  FAILURE    expected_to create_file new_file with_nb_of_lines 1[0m

----------------------------------------------------------------

[37;1m21sh/separators/semicolon/001-two-commands-sequentially[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the semicolon separator `;` makes two inline commands to be executed sequentially.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817_FIRST ; ./write_on_stdout TOKEN201711201817_SECOND[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SECOND$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found
  02: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m21sh/separators/semicolon/002-n-commands-sequentially[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the semicolon separator `;` makes multiple inline commands to be executed sequentially.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817_FIRST ; ./write_on_stdout TOKEN201711201817_SECOND ; ./write_on_stdout TOKEN201711201817_THIRD ; ./write_on_stdout TOKEN201711201817_FOURTH[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SECOND$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_FOURTH$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found
  02: ./write_on_stdout: commmand not found
  03: ./write_on_stdout: commmand not found
  04: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/002-export-basic-key-value-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` may declare a new environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711201817_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711201817_NAME=TOKEN201711201817_VALUE
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_NAME=TOKEN201711201817_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/004-export-empty-variable-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711201817
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/005-export-empty-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment, but can be displayed with the builtin `export`.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711201817
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.KbCk0DSV2L/Render
  08: TERM_PROGRAM_VERSION=3.1.5
  09: TERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  12: USER=vcombey
  13: COMMAND_MODE=unix2003
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.l8garU3esV/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: DISPLAY=/private/tmp/com.apple.launchd.OLizdaIfY7/org.macosforge.xquartz:0
  39: SECURITYSESSIONID=186a6
  40: COLORTERM=truecolor
  41: OLDPWD=/Users/vcombey/42ShellTester
  42: _=/Users/vcombey/42/42sh/42sh
  43: HISTFILE=/Users/vcombey/.42sh_history[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/006-export-update-env-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting the same variable twice in a row does result in an updated variable, but not in a duplicated variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711201817_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711201817_NAME=TOKEN201711201817_VALUE1
  02: export TOKEN201711201817_NAME=TOKEN201711201817_VALUE2
  03: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_NAME=TOKEN201711201817_VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_NAME=TOKEN201711201817_VALUE2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/007-existing-environment-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an existing variable results in an updated variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE1"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711201817_NAME=TOKEN201711201817_VALUE2
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_NAME=TOKEN201711201817_VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_NAME=TOKEN201711201817_VALUE2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/008-local-to-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a declared local variable may be exported to the environment with the builtin `export`.[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=TOKEN201711201817_VALUE
  02: export TOKEN201711201817_NAME
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_NAME=TOKEN201711201817_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/009-export-with-equal-but-no-value-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the builtin export works fine with equal sign but no value. This test is based on the environment variables return.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711201817_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_NAME=`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/002-invalid-identifier-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export .=TOKEN201711201817[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/003-illegal-option[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with an illegal option results in an error and a failure exit status.[0m

  STDIN:
[38;5;239m  01: export -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: Wrong option -w[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/002-export-and-tmp-env-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711201817_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=TOKEN201711201817_VALUE export TOKEN201711201817_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_NAME=TOKEN201711201817_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/002-export-p-param-and-token-should-add-local-var-only-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if export with -p option + token , add the variable into export list but not in env list. And don't display the export variable on stdout.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711201817_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711201817_NAME
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_NAME`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.KbCk0DSV2L/Render
  08: TERM_PROGRAM_VERSION=3.1.5
  09: TERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  12: USER=vcombey
  13: COMMAND_MODE=unix2003
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.l8garU3esV/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: DISPLAY=/private/tmp/com.apple.launchd.OLizdaIfY7/org.macosforge.xquartz:0
  39: SECURITYSESSIONID=186a6
  40: COLORTERM=truecolor
  41: OLDPWD=/Users/vcombey/42ShellTester
  42: _=/Users/vcombey/42/42sh/42sh
  43: HISTFILE=/Users/vcombey/.42sh_history
  44: TERM_PROGRAM=iTerm.app
  45: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  46: TERM=xterm-256color
  47: SHELL=42sh
  48: MYVIMRC=/Users/vcombey/.vimrc
  49: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  50: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.KbCk0DSV2L/Render
  51: TERM_PROGRAM_VERSION=3.1.5
  52: TERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  53: ZSH=/Users/vcombey/.oh-my-zsh
  54: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  55: USER=vcombey
  56: COMMAND_MODE=unix2003
  57: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.l8garU3esV/Listeners
  58: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  59: PAGER=less
  60: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  61: DOTFILES=/Users/vcombey/.dotfiles
  62: LSCOLORS=HxBxcxdxbxegedabagacad
  63: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  64: ZSHRC=/Users/vcombey/.zshrc
  65: PWD=/Users/vcombey/42ShellTester/tmp
  66: EDITOR=vim
  67: BASE16_THEME=base16-nord
  68: LANG=en_US.UTF-8
  69: ITERM_PROFILE=Default
  70: XPC_FLAGS=0x0
  71: XPC_SERVICE_NAME=0
  72: INSTALL_ROOT=/Users/vcombey/.sbcl
  73: SHLVL=3
  74: HOME=/Users/vcombey
  75: COLORFGBG=7;0
  76: ITERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  77: LESS=-R
  78: LOGNAME=vcombey
  79: VISUAL=vim
  80: LC_CTYPE=en_US.UTF-8
  81: DISPLAY=/private/tmp/com.apple.launchd.OLizdaIfY7/org.macosforge.xquartz:0
  82: SECURITYSESSIONID=186a6
  83: COLORTERM=truecolor
  84: OLDPWD=/Users/vcombey/42ShellTester
  85: _=/Users/vcombey/42/42sh/42sh
  86: HISTFILE=/Users/vcombey/.42sh_history[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/003-export-p-param-and-token-should-add-local-var-only-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` with option `-p` results in an added variable into the export list but not from the environment.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711201817_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711201817_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_NAME`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.KbCk0DSV2L/Render
  08: TERM_PROGRAM_VERSION=3.1.5
  09: TERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  12: USER=vcombey
  13: COMMAND_MODE=unix2003
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.l8garU3esV/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: DISPLAY=/private/tmp/com.apple.launchd.OLizdaIfY7/org.macosforge.xquartz:0
  39: SECURITYSESSIONID=186a6
  40: COLORTERM=truecolor
  41: OLDPWD=/Users/vcombey/42ShellTester
  42: _=/Users/vcombey/42/42sh/42sh
  43: HISTFILE=/Users/vcombey/.42sh_history[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/004-export-n-param[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that using the builtin `export` with option `-n` results in a removed environment variable.[0m

  Before test:
[38;5;239m  01: export TOKEN201711201817_NAME=TOKEN201711201817_VALUE[0m

  STDIN:
[38;5;239m  01: export -n TOKEN201711201817_NAME
  02: export
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711201817_NAME`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.KbCk0DSV2L/Render
  08: TERM_PROGRAM_VERSION=3.1.5
  09: OLDPWD=/Users/vcombey/42ShellTester
  10: TERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: COMMAND_MODE=unix2003
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.l8garU3esV/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:11C9EEA4-4F91-4C93-B4D5-3967EA359A74
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: DISPLAY=/private/tmp/com.apple.launchd.OLizdaIfY7/org.macosforge.xquartz:0
  40: TOKEN201711201817_NAME=TOKEN201711201817_VALUE
  41: SECURITYSESSIONID=186a6
  42: COLORTERM=truecolor
  43: _=/Users/vcombey/42/42sh/42sh
  44: HISTFILE=/Users/vcombey/.42sh_history[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: Wrong option -n
  02: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/001-escape-single-character-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817\TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/002-escape-single-character-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817\\TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817\TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/003-escape-single-character-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817\\\TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817\TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/004-escape-single-character-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817\\\\TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817\\TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/005-escape-single-character-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TEST4\041TEST[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TEST4041TEST$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping braces does not result in an expansion process.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \{1..2} {1\..2} {1.\.2} {1..2\}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[{]1..2}@[{]1..2}@[{]1..2}@[{]1..2}@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/002-it-expands-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\1@\2@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/003-it-expands-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\\{1..2} \\\\{1..2} \\\\\{1..2} \\\\\\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\[{]1..2}@\\1@\\2@\\[{]1..2}@\\\1@\\\2@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/001-it-does-not-expand-brackets[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping brackets does not result in an expansion process.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout \[abc] [abc\] \[abc\][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[[]abc]@[[]abc]@[[]abc]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/002-escaped-inversion-mark[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an inversion mark `!` or `^` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '!' '^'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\!abc]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\^abc][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `!@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[\^]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[1;33m  WARNING    might match_regex `^!@a@b@c@$`[0m
[31m[1;33m  WARNING    might match_regex `^[\^]@a@b@c@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/003-it-takes-escaped-bracket-as-pattern-character[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a closing bracket ']' may be escaped in a backet expansion pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' ']'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\]def]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\]def]
  03: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\]def]
  04: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\\\]def][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `]@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@` 4 times[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@b@c@d@e@f@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found
  03: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found
  04: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/001-escape-variable-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` before the symbol of variable expansion `$` does not result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \$TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_NAME`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/002-it-does-not-escape-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol of variable expansion `$` does result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\$TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_NAME`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/003-escape-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using three backslashes `\\` before the symbol of variable expansion `$` does not result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\\$TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_NAME`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..e}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@b@c@d@e@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711201817{a..e}TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817aTOKEN201711201817@TOKEN201711201817bTOKEN201711201817@TOKEN201711201817cTOKEN201711201817@TOKEN201711201817dTOKEN201711201817@TOKEN201711201817eTOKEN201711201817@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..E}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/004-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {E..A}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^E@D@C@B@A@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/005-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711201817{E..A}TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817ETOKEN201711201817@TOKEN201711201817DTOKEN201711201817@TOKEN201711201817CTOKEN201711201817@TOKEN201711201817BTOKEN201711201817@TOKEN201711201817ATOKEN201711201817@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/006-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711201817{e..a}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817e@TOKEN201711201817d@TOKEN201711201817c@TOKEN201711201817b@TOKEN201711201817a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/007-identical-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single ASCII value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {f..f}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^f@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/008-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..b}{c..d}{e..f}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^ace@acf@ade@adf@bce@bcf@bde@bdf@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/009-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711201817{a..b}abc{Z..X}def{s..s}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817aabcZdefs@TOKEN201711201817aabcYdefs@TOKEN201711201817aabcXdefs@TOKEN201711201817babcZdefs@TOKEN201711201817babcYdefs@TOKEN201711201817babcXdefs@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/010-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..z}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@.+@.?@.+@.+@_@.+@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/001-invalid-pattern-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {A}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^{A}$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/002-invalid-pattern-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {B..}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^{B..}$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/003-invalid-pattern-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {..C}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^{..C}$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/004-invalid-pattern-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {Q..C..1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^{Q..C..1}$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/001-nothing-to-be-done[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is not processed when neither range `..` nor comma `,` tokens is specified.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {TOKEN201711201817}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `{TOKEN201711201817}`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/002-simple-test-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed when at least one comma `,` is encountered.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711201817_A,TOKEN201711201817_B}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_A@TOKEN201711201817_B@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/003-simple-test-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed with a list of three patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711201817_A,TOKEN201711201817_B,TOKEN201711201817_C}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_A@TOKEN201711201817_B@TOKEN201711201817_C@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^1@2@3@4@5@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711201817{1..5}TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017112018171TOKEN201711201817@TOKEN2017112018172TOKEN201711201817@TOKEN2017112018173TOKEN201711201817@TOKEN2017112018174TOKEN201711201817@TOKEN2017112018175TOKEN201711201817@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711201817{1..+5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017112018171@TOKEN2017112018172@TOKEN2017112018173@TOKEN2017112018174@TOKEN2017112018175@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/004-simple-ascending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-5..0}TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-5TOKEN201711201817@-4TOKEN201711201817@-3TOKEN201711201817@-2TOKEN201711201817@-1TOKEN201711201817@0TOKEN201711201817@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/005-simple-ascending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..-98}TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100TOKEN201711201817@-99TOKEN201711201817@-98TOKEN201711201817@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/006-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {5..1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^5@4@3@2@1@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/007-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711201817{5..1}TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017112018175TOKEN201711201817@TOKEN2017112018174TOKEN201711201817@TOKEN2017112018173TOKEN201711201817@TOKEN2017112018172TOKEN201711201817@TOKEN2017112018171TOKEN201711201817@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/008-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711201817{5..+1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017112018175@TOKEN2017112018174@TOKEN2017112018173@TOKEN2017112018172@TOKEN2017112018171@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/009-simple-descending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {0..-5}TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^0TOKEN201711201817@-1TOKEN201711201817@-2TOKEN201711201817@-3TOKEN201711201817@-4TOKEN201711201817@-5TOKEN201711201817@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/010-simple-descending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-98..-100}TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-98TOKEN201711201817@-99TOKEN201711201817@-100TOKEN201711201817@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/011-identical-positive-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {42..42}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/012-identical-negative-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-42..-42}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-42@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/013-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}{3..4}{5..6}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^135@136@145@146@235@236@245@246@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/014-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711201817{1..2}abc{-50..-53}def{0..0}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017112018171abc-50def0@TOKEN2017112018171abc-51def0@TOKEN2017112018171abc-52def0@TOKEN2017112018171abc-53def0@TOKEN2017112018172abc-50def0@TOKEN2017112018172abc-51def0@TOKEN2017112018172abc-52def0@TOKEN2017112018172abc-53def0@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/015-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..100}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100@-99@-98@-97@-96@-95@-94@-93@-92@-91@-90@-89@-88@-87@-86@-85@-84@-83@-82@-81@-80@-79@-78@-77@-76@-75@-74@-73@-72@-71@-70@-69@-68@-67@-66@-65@-64@-63@-62@-61@-60@-59@-58@-57@-56@-55@-54@-53@-52@-51@-50@-49@-48@-47@-46@-45@-44@-43@-42@-41@-40@-39@-38@-37@-36@-35@-34@-33@-32@-31@-30@-29@-28@-27@-26@-25@-24@-23@-22@-21@-20@-19@-18@-17@-16@-15@-14@-13@-12@-11@-10@-9@-8@-7@-6@-5@-4@-3@-2@-1@0@1@2@3@4@5@6@7@8@9@10@11@12@13@14@15@16@17@18@19@20@21@22@23@24@25@26@27@28@29@30@31@32@33@34@35@36@37@38@39@40@41@42@43@44@45@46@47@48@49@50@51@52@53@54@55@56@57@58@59@60@61@62@63@64@65@66@67@68@69@70@71@72@73@74@75@76@77@78@79@80@81@82@83@84@85@86@87@88@89@90@91@92@93@94@95@96@97@98@99@100@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/001-range-and-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with a range and 2 characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '1' '2' '3' 'a' 'b' 'z' 'C' '-' '[a-z-2]' 'a-z-2'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z-2][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `-@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a-z-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-z-2@`[0m
[31m[1;33m  WARNING    might match_regex `^-@2@a@b@z@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/002-reverse-range-and-chars[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with 2 patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a4' 'a3' 'a2' 'a42' 'a[42]' 'z4' 'z3' 'z2' 'z42' 'z[42]' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-y][42]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-y][42][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `42@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z[[]42]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]42]@`[0m
[31m[1;33m  WARNING    might match_regex `^42@z2@z4@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/003-reverse-multi-hard[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check how the value inside multiple brackets are parsed with bracket as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '][' 'a[' '1['[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!]az][[]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^]az][[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `][[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]@`[0m
[31m[1;33m  WARNING    might match_regex `^1[[]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/004-simple-bracket+char+range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to control if 2 patterns splited by a minus characters can be match.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a-0' 'a-1' 'a-2' 'b-0' 'b-1' 'b-2' 'Z-0' 'Z-1' 'Z-2' 'a1' 'Z9' 'D4'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [aZ]-[1-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a-2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `D4@`[0m
[31m[1;33m  WARNING    might match_regex `^Z-1@Z-2@a-1@a-2@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/001-simple-opposit-match[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' '1' 'Z' 'd' 'e' 'f' 'def'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a1Z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a1Z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def@`[0m
[31m[1;33m  WARNING    might match_regex `^d@e@f@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/002-simple-opposite-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'z' '1' '2' '3' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `42@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@3@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/001-alpha-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[a-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'f' 'z' 'A' '1' '[a-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `A@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@f@z@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/002-numeric-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[0-9]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '4' '2' '1' '9' 'a' 'C' '[0-9]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [0-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]0-9]@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@4@9@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/003-ascii-range-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the bracket expansion works with the following pattern []-z].
  One test use the following range which is the default range for bash:
  < > , ; : ! ' " ( ) [ ] { } @ $ \ # % 1 2 3 4 5 6 7 8 9 a A b B c C d D e E f F g G h H i I j J k K l L m M n N o O p P q Q r R s S t T u U v V w W x X y Y z
  The other use the ascii value, which does make more sense.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' '[' ']' '[]-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]]-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@c@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/004-ascii-range-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[1-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' ']' '[' '[1-z]' '1-z' '-'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [1-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `B@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1-z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]1-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^2@B@Z@[[]@]@a@c@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/001-simple-list[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a simple list of characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '[bca]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [bca][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]bca]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@b@c@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/002-multi-bracket[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with multiple brackets patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch "TOKEN201711201817abcd" "TOKEN201711201817abc" "TOKEN201711201817abdc" "TOKEN201711201817b" "TOKEN201711201817" "TOKEN201711201817\[a]b\[c]\[d]"[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout TOKEN201711201817[a]b[c][d][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817abcd@$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817abc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817abdc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817b@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817[[]a]b[[]c][[]d]@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/003-brackets-as-pattern[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` and a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' ']' 'a' 'Z' '[][]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [][][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/004-multi-bracket-multi-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to match a file name which contain a bracket as first character.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 21 23 24 25 26 27 28 29 ']' '[' '[12][34]' '1234'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [12][34][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `13@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `14@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `23@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `24@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `0[0-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]12][[]34]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1234@`[0m
[31m[1;33m  WARNING    might match_regex `^13@14@23@24@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/001-single-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a single character as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' '[a]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/002-closing-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch ']' '[]]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]]]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/003-opening-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' '[[]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/001-declare-and-expand-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring and expanding a local variable does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=TOKEN201711201817_VALUE
  02: ./write_on_stdout_and_stderr $TOKEN201711201817_NAME $TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VALUE$`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/002-declare-and-expand-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an empty variable is not expanded as an empty string and results in any new argument in the command line.[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=
  02: ./write_on_stdout_and_stderr $TOKEN201711201817_NAME $TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/003-unknown-variable-does-not-result-in-new-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an unknown variable is not expanded as an empty string and results in any new argument in the command line.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711201817_UNKNOWN"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201711201817_UNKNOWN TOKEN201711201817_DISPLAYED[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_DISPLAYED`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/004-existing-variable-in-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE_OLD"[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=TOKEN201711201817_VALUE_NEW
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_NAME=TOKEN201711201817_VALUE_NEW$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711201817_NAME=TOKEN201711201817_VALUE_OLD$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/005-existing-variable-in-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_NAME=$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711201817_NAME=TOKEN201711201817_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/006-existing-variable-in-environment-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion takes the environment variables into account.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/007-multiple-declaration-at-a-time[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring multiple variables in the same command line does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME1=TOKEN201711201817_VALUE1 TOKEN201711201817_NAME2=TOKEN201711201817_VALUE2 TOKEN201711201817_NAME3=TOKEN201711201817_VALUE3
  02: ./write_on_stdout_and_stderr $TOKEN201711201817_NAME1 $TOKEN201711201817_NAME1
  03: ./write_on_stdout $TOKEN201711201817_NAME2
  04: ./write_on_stderr $TOKEN201711201817_NAME3[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711201817_VALUE3$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711201817_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VALUE3$`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found
  02: ./write_on_stdout: commmand not found
  03: ./write_on_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/008-multiple-declaration-with-same-name[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring the same variable several times in the same command line does work and does not result in error.[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=TOKEN201711201817_VALUE1 TOKEN201711201817_NAME=TOKEN201711201817_VALUE2 TOKEN201711201817_NAME=TOKEN201711201817_VALUE3
  02: ./write_on_stdout $TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711201817_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711201817_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VALUE3$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/009-last-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the special variable `$?` may be expanded with the last exit status.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: ./write_on_stderr $?[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42$`[0m
[38;5;239m  01: ./exit_with_status: commmand not found
  02: ./write_on_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/inline-environment-variable/001-local-variable-shouldnt-be-set[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary does not result in local variable declaration but a modified environment for the command.[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=TOKEN201711201817_VALUE ./display_env
  02: ./write_on_stderr $TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_NAME=TOKEN201711201817_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_VALUE`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: ./display_env: commmand not found
  02: ./write_on_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/001-truncating[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711201817_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=TOKEN201711201817_FILENAME
  02: ./write_on_stdout TOKEN201711201817_VALUE > $TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711201817_FILENAME` matching_regex `^TOKEN201711201817_VALUE$`[0m
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/002-appending[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711201817_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=TOKEN201711201817_FILENAME
  02: ./write_on_stdout TOKEN201711201817_VALUE1 >> $TOKEN201711201817_NAME
  03: ./write_on_stdout TOKEN201711201817_VALUE2 >> $TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found
  02: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711201817_FILENAME` matching_regex `^TOKEN201711201817_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711201817_FILENAME` matching_regex `^TOKEN201711201817_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/003-reading[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711201817_FILENAME"
  02: echo "TOKEN201711201817_VALUE" > "TOKEN201711201817_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_NAME=TOKEN201711201817_FILENAME
  02: ./read_on_stdin < $TOKEN201711201817_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VALUE@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./read_on_stdin: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/tilde-expansion/001-process-tilde-expansion[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tilde expansion `~` in variable declaration.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817=~
  02: ./write_on_stdout TILDE:$TOKEN201711201817[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TILDE:~`[0m
[31m[1;33m  WARNING    might match_regex `TILDE:/TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/001-it-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the symbol double quote `"` does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "SIMPLE TEXT WITH SPACES"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `SIMPLE TEXT WITH SPACES`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A"B"CDEF"GHIJ""KLMNO" "P"QRS"T""U""V"WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/003-first-argument-inhibited[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the shell implementation has no special case for the first argument.[0m

  STDIN:
[38;5;239m  01: "./write_on_stdout_and_stderr" TOKEN201711201817_STDOUT TOKEN201711201817_STDERR[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_STDERR`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/004-multiline-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "
  02: TOKEN201711201817_FIRST
  03: TOKEN201711201817_SECOND
  04: TOKEN201711201817_THIRD
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_SECOND$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_THIRD$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "
  02: "TOKEN201711201817"_FIRST
  03: TOKEN201711201817_SECOND" "TOKEN201711201817_THIRD
  04: TOKEN201711201817_FOU"RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_SECOND$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_FOURTH$`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/001-escape-double-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817\"TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817"TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/002-escape-double-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711201817 \" TOKEN201711201817"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817 ` TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/003-escape-double-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "\""[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^"$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/004-it-results-in-error[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using backslash `\\` before the closing double-quote `"` does result in syntax error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711201817\"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/005-it-does-not-escape-double-quote[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol double-quote `"` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\"TOKEN201711201817\\"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\TOKEN201711201817\$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}"{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}"{1..2}"{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}" {1..2} "{1..2}" "{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc"def"gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `bc`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `gh`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/variable-expansion/001-expansion-enabled[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion is processed within double quotes.[0m

  Before test:
[38;5;239m  01: export "TOKEN=TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/001-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "ABCD'EFG"HI'J"KL"'MNO'P"' Q"RS'T'U''"VW'X"Y'Z[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCD'EFGHIJ"KL"MNOP`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `QRS'T'U''VWX"YZ`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/002-multiline[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony in multiline mode.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711201817"_FIR'ST
  03: TOKEN201711201817_SECOND" 'TOKEN201711201817_TH"IRD
  04: TOKEN201711201817_FOU'RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_FIR'ST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_SECOND$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_TH"IRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_FOURTH$`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}'{1..2}'{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [""'a'""][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `bc`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `gh`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/variable-expansion/001-it-does-not-expand-in-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check if a local variable is display correctly inside simple and double quote.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN201711201817_NAME"$TOKEN201711201817_NAME'$TOKEN201711201817_NAME'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_VALUETOKEN201711201817_VALUE[$]TOKEN201711201817_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/001-it-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the symbol simple quote `'` does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout 'SIMPLE TEXT WITH SPACES'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `SIMPLE TEXT WITH SPACES`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A'B'CDEF'GHIJ''KLMNO' 'P'QRS'T''U''V'WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/003-first-argument-inhibited[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the shell implementation has no special case for the first argument.[0m

  STDIN:
[38;5;239m  01: './write_on_stdout_and_stderr' TOKEN201711201817_STDOUT TOKEN201711201817_STDERR[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_STDERR`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/004-multiline-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '
  02: TOKEN201711201817_FIRST
  03: TOKEN201711201817_SECOND
  04: TOKEN201711201817_THIRD
  05: '[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_SECOND$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_THIRD$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711201817'_FIRST
  03: TOKEN201711201817_SECOND' 'TOKEN201711201817_THIRD
  04: TOKEN201711201817_FOU'RT'H
  05: '[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_SECOND$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_FOURTH$`[0m
[38;5;239m  01: ./write_on_stdout_and_stderr: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/001-escape-simple-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817\'TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817'TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/002-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr \'TOKEN201711201817_STDOUT TOKEN201711201817_STDERR\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^'TOKEN201711201817_STDOUT$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_STDERR'$`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/003-escape-simple-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/005-it-does-not-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol simple-quote `'` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\'TOKEN201711201817\\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\TOKEN201711201817\\$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}'{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}'{1..2}'{1..2}'{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}' {1..2} '{1..2}' '{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `bc`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `gh`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/variable-expansion/001-expansion-disabled[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion is not processed within simple quotes.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '[$]TOKEN201711201817_NAME'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/001-tokens-are-recognized[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that adding twice symbols `(` and `)` in a command line does not make the Shell resulting in error.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout TOKEN201711201817)[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/002-multiple-levels-of-subshells[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that imbricating multiple subshells does not result in error.[0m

  STDIN:
[38;5;239m  01: ( ( ( ( ./write_on_stdout TOKEN201711201817 ) ) ) )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/003-multiline[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell implementation may parse a subshell command on multiple lines.[0m

  STDIN:
[38;5;239m  01: (
  02: ./write_on_stdout TOKEN201711201817_SUBSHELL1 ;
  03: ./write_on_stdout TOKEN201711201817_SUBSHELL2
  04: )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SUBSHELL1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SUBSHELL2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found
  02: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/004-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a subshell command that is executed at the end of a script is correctly returned at termination by the parent shell.[0m

  STDIN:
[38;5;239m  01: (./exit_with_status 42)[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./exit_with_status: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status 42[0m

----------------------------------------------------------------

[37;1m42sh/subshell/005-copy-of-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a subshell get a copy of the parent environment.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_VAR1=VALUE1"
  02: export "TOKEN201711201817_VAR2=VALUE2"
  03: export "TOKEN201711201817_VAR3=VALUE3"[0m

  STDIN:
[38;5;239m  01: (./display_env)[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_VAR1=VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_VAR2=VALUE2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_VAR3=VALUE3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/cd/001-it-does-not-change-current-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the part of a command line that is embraced within the subshell tokens `(` and `)` effectively results in a subshell execution.[0m

  STDIN:
[38;5;239m  01: (cd /)
  02: ./display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_pwd: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/cd/002-multiline[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell implementation may parse a subshell command on multiple lines.[0m

  STDIN:
[38;5;239m  01: (
  02: cd / ;
  03: /Users/vcombey/42ShellTester/tmp/write_on_stdout TOKEN201711201817_SUBSHELL ;
  04: /Users/vcombey/42ShellTester/tmp/display_pwd
  05: )
  06: ./write_on_stdout TOKEN201711201817_PARENT[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SUBSHELL`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_PARENT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_on_stdout: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  03: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/exit/001-exiting-subshell[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that prematurely exiting a subshell does work and does not result in parent shell termination.[0m

  STDIN:
[38;5;239m  01: (exit ; ./write_on_stdout TOKEN201711201817_NOT_DISPLAYED)
  02: ./write_on_stdout TOKEN201711201817_DISPLAYED[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_NOT_DISPLAYED`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_DISPLAYED`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: open: Bad address
  02: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/unsetenv/001-it-does-not-modify-parent-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that changing environment in subshell commands does not result in a changed of the parent shell's environment.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711201817_NAME=TOKEN201711201817_VALUE"[0m

  STDIN:
[38;5;239m  01: (unsetenv TOKEN201711201817_NAME ; unset TOKEN201711201817_NAME)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_NAME=TOKEN201711201817_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/escaping/001-escaped-subshell-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a subshell with parentheses `(` and `)` may be escaped with backslash `\\`.[0m

  STDIN:
[38;5;239m  01: \(./write_on_stdout TOKEN201711201817_STDOUT\)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Cc]ommand not found|[Nn]o such file or directory)`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/escaping/002-escaped-subshell-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tokens parentheses `(` and `)` for subshell generation may be escaped with backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\\(TOKEN201711201817_STDOUT\\\)[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `\(TOKEN201711201817_STDOUT\)`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/001-modifies-the-child-environment-only-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: (TOKEN201711201817_NAME=TOKEN201711201817_VALUE ./display_env)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_NAME=TOKEN201711201817_VALUE$` once[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found
  02: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/002-modifies-the-child-environment-only-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: ( (TOKEN201711201817_NAME=TOKEN201711201817_VALUE ./display_env) ; ./display_env) ; ./display_env
  02: [0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_NAME=TOKEN201711201817_VALUE$` once[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found
  02: ./display_env: commmand not found
  03: ./display_env: commmand not found
  04: ./lib/main.sh: line 102: 99778 Segmentation fault: 11  /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/piping/001-subshells-inside-piped-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that subshells may be executed inside a piped command.[0m

  STDIN:
[38;5;239m  01: (cd / ; /Users/vcombey/42ShellTester/tmp/display_pwd) | (./read_on_stdin) | (./read_on_stdin)
  02: ./write_on_stdout TOKEN201711201817[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD@@$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./read_on_stdin: commmand not found
  02: ./read_on_stdin: commmand not found
  03: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  04: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/piping/002-pipes-inside-subshells[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that piped command may be executed inside a subshell command.[0m

  STDIN:
[38;5;239m  01: (cd / ; /Users/vcombey/42ShellTester/tmp/display_pwd | /Users/vcombey/42ShellTester/tmp/read_on_stdin | /Users/vcombey/42ShellTester/tmp/read_on_stdin)
  02: ./write_on_stdout TOKEN201711201817[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD@@$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/read_on_stdin: commmand not found
  03: /Users/vcombey/42ShellTester/tmp/read_on_stdin: commmand not found
  04: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/piping/003-imbricated-subshells-and-pipes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that pipes and subshells run twice together in harmony.[0m

  STDIN:
[38;5;239m  01: ( ( (cd / ; /Users/vcombey/42ShellTester/tmp/display_pwd) | ./read_on_stdin) ) | ( ( (./read_on_stdin) ) | ./read_on_stdin )
  02: ./write_on_stdout TOKEN201711201817[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD@@@$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./read_on_stdin: commmand not found
  02: ./read_on_stdin: commmand not found
  03: ./read_on_stdin: commmand not found
  04: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  05: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/001-with-simple-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `'`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout 'TOKEN201711201817_FIRST)' ; (./write_on_stdout '(TOKEN201711201817_SECOND') )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found
  02: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/002-with-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201711201817_FIRST)" ; (./write_on_stdout "(TOKEN201711201817_SECOND") )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found
  02: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/003-with-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbols `'` and `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201711201817_FIRST)" ; (./write_on_stdout '(TOKEN201711201817_SECOND') )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found
  02: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/001-modifies-child-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711201817_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_VARIABLE=TOKEN201711201817_VALUE ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VARIABLE=TOKEN201711201817_VALUE$` once[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found
  02: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/002-modifies-child-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711201817_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711201817_VARIABLE1=TOKEN201711201817_VALUE1 TOKEN201711201817_VARIABLE2=TOKEN201711201817_VALUE2 TOKEN201711201817_VARIABLE3=TOKEN201711201817_VALUE3 ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VARIABLE1=TOKEN201711201817_VALUE1$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VARIABLE2=TOKEN201711201817_VALUE2$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817_VARIABLE3=TOKEN201711201817_VALUE3$` once[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env: commmand not found
  02: ./display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/003-modifies-PATH-only[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: rm -rf "temporary_directory"
  02: mkdir -p "temporary_directory"
  03: cd "temporary_directory"[0m

  STDIN:
[38;5;239m  01: PATH=.. write_on_stdout TOKEN201711201817
  02: exit_with_status 42[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: write_on_stdout: commmand not found
  02: exit_with_status: commmand not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `42`[0m
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/001-run-twice[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the AND operator `&&` works with two valid commands.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817_LEFT && ./write_on_stdout TOKEN201711201817_RIGHT[0m

  STDOUT:
[31m[1;33m  WARNING    might match_regex `TOKEN201711201817_LEFT`[0m
[31m[1;33m  WARNING    might match_regex `TOKEN201711201817_RIGHT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/002-do-not-run-second[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the AND operator `&&` makes the right command to not be executed if the left one exits with an error status code.
  The Shell should exit with the status code of the executed command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 && ./write_on_stdout TOKEN201711201817[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex TOKEN201711201817[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: ./exit_with_status: commmand not found[0m

  MISC:
[31m[1;33m  WARNING    might exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/003-run-until-failing[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the AND separator `&&` with chained commands results in the execution of all until the first fail.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./exit_with_status 0 && ./exit_with_status 0 && ./exit_with_status 0 && ./write_on_stdout TOKEN201711201817_FIRST && ./exit_with_status 42 && ./write_on_stdout TOKEN201711201817_SECOND[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./exit_with_status: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/001-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 && ./write_on_stderr TOKEN201711201817_ERROR 21 || ./write_on_stdout TOKEN201711201817_SUCCESS[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./exit_with_status: commmand not found
  02: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/002-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./write_on_stderr TOKEN201711201817_ERROR 21 || ./write_on_stdout TOKEN201711201817_SUCCESS[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_ERROR`[0m
[38;5;239m  01: ./exit_with_status: commmand not found
  02: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/003-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./write_on_stdout TOKEN201711201817_SUCCESS || ./write_on_stderr TOKEN201711201817_ERROR 21[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./exit_with_status: commmand not found
  02: ./write_on_stderr: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/004-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stderr TOKEN201711201817_ERROR 21 && ./write_on_stdout TOKEN201711201817_SUCCESS[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_ERROR`[0m
[38;5;239m  01: ./exit_with_status: commmand not found
  02: ./write_on_stderr: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/005-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201711201817_SUCCESS && ./write_on_stderr TOKEN201711201817_ERROR 21[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_ERROR`[0m
[38;5;239m  01: ./exit_with_status: commmand not found
  02: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/006-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 || ./write_on_stderr TOKEN201711201817_ERROR 21 && ./write_on_stdout TOKEN201711201817_SUCCESS[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./exit_with_status: commmand not found
  02: ./write_on_stderr: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/001-run-first-only[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the OR operator `||` makes the right command to not be executed if the left one exits with a success status.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711201817_LEFT || ./write_on_stdout TOKEN201711201817_RIGHT[0m

  STDOUT:
[31m[1;33m  WARNING    might match_regex TOKEN201711201817_LEFT[0m
[31m[38;5;34m  SUCCESS    might_not match_regex TOKEN201711201817_RIGHT[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: ./write_on_stdout: commmand not found
  02: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/002-run-second-only[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the OR operator `||` makes the right command to be executed if the left one exits with an error status code.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201711201817[0m

  STDOUT:
[31m[1;33m  WARNING    might match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: ./exit_with_status: commmand not found
  02: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[1;33m  WARNING    might exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/003-run-until-succeeding[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the OR separator `||` with chained commands results in the execution of all until the first succeed. The remaining commands are not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 1 || ./exit_with_status 2 || ./exit_with_status 3 || ./exit_with_status 4 || ./write_on_stdout TOKEN201711201817_FIRST || ./write_on_stdout TOKEN201711201817_SECOND[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711201817_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./exit_with_status: commmand not found
  02: ./exit_with_status: commmand not found
  03: ./exit_with_status: commmand not found
  04: ./exit_with_status: commmand not found
  05: ./write_on_stdout: commmand not found
  06: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/001-expanded-with-HOME-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable HOME.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/002-expanded-with-HOME-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` followed by the symbol slash `/` may be expanded with the environment variable HOME.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~/TOKEN201711201817_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/TOKEN201711201817/TOKEN201711201817_SUBDIRECTORY$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/003-expanded-with-PWD-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable PWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~[+]`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711201817[+]`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/004-expanded-with-PWD-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable PWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+/TOKEN201711201817_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~+/TOKEN201711201817_SUBDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711201817[+]/TOKEN201711201817_SUBDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp/TOKEN201711201817_SUBDIRECTORY$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/005-expanded-with-OLDPWD-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable OLDPWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711201817_SUBDIRECTORY"
  02: mkdir "./TOKEN201711201817_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711201817_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~-`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711201817-`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/006-expanded-with-OLDPWD-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable OLDPWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711201817_SUBDIRECTORY"
  02: mkdir "./TOKEN201711201817_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711201817_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-/TOKEN201711201817_OTHERDIRECTORY[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~-/TOKEN201711201817_OTHERDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711201817-/TOKEN201711201817_OTHERDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp/TOKEN201711201817_OTHERDIRECTORY$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/001-not-expanded-with-HOME-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be not expanded when not followed by an authorized symbol or user name.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~~[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~~$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/002-not-expanded-with-HOME-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be not expanded when not followed by an authorized symbol or user name.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~TOKEN201711201817_UNKNOWNUSER[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~TOKEN201711201817_UNKNOWNUSER$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711201817TOKEN201711201817_UNKNOWNUSER`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/003-not-expanded-with-PWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` is not expanded with the environment variable PWD when not followed by the symbol `/`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+TOKEN201711201817_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~[+]TOKEN201711201817_SUBDIRECTORY$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711201817[+]TOKEN201711201817_SUBDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmpTOKEN201711201817_SUBDIRECTORY`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/004-not-expanded-with-OLDPWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` is not expanded with the environment variable OLDPWD when not followed by the symbol `/`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711201817_SUBDIRECTORY"
  02: mkdir "./TOKEN201711201817_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711201817_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-TOKEN201711201817_OTHERDIRECTORY[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~-TOKEN201711201817_OTHERDIRECTORY$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711201817-/TOKEN201711201817_OTHERDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp/TOKEN201711201817_OTHERDIRECTORY`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_on_stdout: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/binary/002-binary-path-absolute[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell correctly finds binaries through their absolute path.[0m

  Before test:
[38;5;239m  01: mkdir -p "./virtual_path"
  02: rm -f "./virtual_path/write_on_stdout"
  03: cp "./write_on_stdout" "./virtual_path/write_on_stdout"
  04: export PATH=""[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_on_stdout TOKEN201711201817_1
  02: /Users/vcombey/42ShellTester/tmp/virtual_path/write_on_stdout TOKEN201711201817_2[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_on_stdout: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/virtual_path/write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/003-binary-test-exec-order[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell correctly finds binaries by iterating on paths within the environment variable PATH from left to right.[0m

  Before test:
[38;5;239m  01: mkdir -p "./virtual_path_1" "./virtual_path_2"
  02: cp "./write_on_stdout" "./virtual_path_1/fake_echo"
  03: cp "./write_on_stderr" "./virtual_path_2/fake_echo"
  04: export PATH="/Users/vcombey/42ShellTester/tmp/virtual_path_1:/Users/vcombey/42ShellTester/tmp/virtual_path_2"[0m

  STDIN:
[38;5;239m  01: fake_echo TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex TOKEN201711201817[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711201817[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/004-binary-test-empty-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell finds binaries that are located in the current directory when the environment variable PATH is empty.[0m

  Before test:
[38;5;239m  01: export PATH=""[0m

  STDIN:
[38;5;239m  01: write_on_stdout "TOKEN201711201817"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/005-binary-test-wrong-path[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  This test purpose is to check if your shell is not able to use binary with a wrong PATH
  We are changing the actual PATH by PATH=NULL
  And executing the commande ls[0m

  Before test:
[38;5;239m  01: export PATH="/"[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: ls: commmand not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/006-binary-undefined-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell retrieves the default value of the environment variable PATH if not set. This test depends on the presence of the UNIX binary `ls`, located in a path within the default environment variable PATH.[0m

  Before test:
[38;5;239m  01: rm -rf "TOKEN201711201817_006-BINARY-UNDEFINED-PATH"
  02: touch "TOKEN201711201817_006-BINARY-UNDEFINED-PATH"
  03: unset PATH[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817_006-BINARY-UNDEFINED-PATH`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ls: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/007-binary-permission-denied[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a non-permitted binary results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./permission_denied
  02: touch ./permission_denied
  03: chmod 0 ./permission_denied[0m

  STDIN:
[38;5;239m  01: ./permission_denied[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Pp]ermission denied`[0m
[38;5;239m  01: ./permission_denied: commmand not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status 0[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/binary/008-binary-too-many-symbolic-links-encountered[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a path that encounters an infinite loop of symbolic link results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./symbolic_link1 ./symbolic_link2 ./symbolic_link3
  02: ln -s ./symbolic_link1 ./symbolic_link2
  03: ln -s ./symbolic_link2 ./symbolic_link3
  04: ln -s ./symbolic_link3 ./symbolic_link1[0m

  STDIN:
[38;5;239m  01: ./symbolic_link1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: ./symbolic_link1: commmand not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status 0[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/001-no-arg[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `cd` without any argument results in moving to the HOME directory.[0m

  STDIN:
[38;5;239m  01: cd
  02: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/002-current-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using `.` as first argument with the builtin `cd` results in not changing current directory.[0m

  STDIN:
[38;5;239m  01: cd .
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/003-current-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a relative path to the current directory as argument with the builtin `cd` results in not changing the current directory. The environment variable must not be changed.[0m

  STDIN:
[38;5;239m  01: cd ../tmp
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/004-parent-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using `..` as first argument with the builtin `cd` results in moving to the parent directory.[0m

  STDIN:
[38;5;239m  01: cd ..
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/005-root-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the root path as first argument with the builtin `cd` results in moving to the correct directory.[0m

  STDIN:
[38;5;239m  01: cd /
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/006-root-path-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the root path as first argument with the builtin `cd` results in moving to the correct directory.[0m

  STDIN:
[38;5;239m  01: cd /.
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/007-symbolic-link[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving the linked directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/symbolic_link$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/008-symbolic-link-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving to the linked directory. In this test, the directory is linked with to chained symbolic links.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link1"
  04: ln -s "./symbolic_link1" "./symbolic_link2"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link2
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/symbolic_link2$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/010-update-OLDPWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `cd` results in a modified environment variable `PWD`.[0m

  Before test:
[38;5;239m  01: rm -rf "TOKEN201711201817"
  02: mkdir -p "./TOKEN201711201817/TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: cd TOKEN201711201817
  02: cd TOKEN201711201817
  03: ../../display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/TOKEN201711201817/TOKEN201711201817$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^OLDPWD=/Users/vcombey/42ShellTester/tmp/TOKEN201711201817$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ../../display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/011-dotdot[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that playing with relative paths with the builtin `cd` results in correctly changing the current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "playing_with_dotdot"
  02: mkdir -p "playing_with_dotdot/1/2/3/4/5/6/7/8/9/10"[0m

  STDIN:
[38;5;239m  01: cd playing_with_dotdot
  02: cd ../playing_with_dotdot
  03: cd 1/2/3/4/../4/../4/../../3/4/5/6/7/8/9/10
  04: cd ../../../../../../../../../../1/2/3/4/5
  05: /Users/vcombey/42ShellTester/tmp/display_pwd
  06: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/playing_with_dotdot/1/2/3/4/5:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/playing_with_dotdot/1/2/3/4/5$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /usr/bin/cd: line 4: cd: ../playing_with_dotdot: No such file or directory
  02: /usr/bin/cd: line 4: cd: 1/2/3/4/../4/../4/../../3/4/5/6/7/8/9/10: No such file or directory
  03: /usr/bin/cd: line 4: cd: ../../../../../../../../../../1/2/3/4/5: No such file or directory
  04: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  05: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/012-dot[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that playing with relative paths to the current directory with the builtin `cd` results in not changing the current directory.[0m

  STDIN:
[38;5;239m  01: cd .
  02: cd ./
  03: cd ./.
  04: cd ././
  05: cd ./././././././././.
  06: /Users/vcombey/42ShellTester/tmp/display_pwd
  07: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/013-absolute-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using an absolute path as first argument with the builtin `cd` results in moving to the correct directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./my_sub_directory"
  02: mkdir -p "./my_sub_directory/and_another_one/"[0m

  STDIN:
[38;5;239m  01: cd /Users/vcombey/42ShellTester/tmp/my_sub_directory/and_another_one
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/my_sub_directory/and_another_one:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/my_sub_directory/and_another_one$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/001-not-a-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file name as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: touch "./not_a_directory"[0m

  STDIN:
[38;5;239m  01: cd not_a_directory
  02: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]ot a directory`[0m
[38;5;239m  01: /usr/bin/cd: line 4: cd: not_a_directory: Not a directory
  02: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/003-permission-denied[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a directory without any permission as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"
  03: mkdir -m 0 "./permission_denied"[0m

  STDIN:
[38;5;239m  01: cd permission_denied
  02: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Pp]ermission denied`[0m
[38;5;239m  01: /usr/bin/cd: line 4: cd: permission_denied: Permission denied
  02: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/005-too-many-symbolic-links-encountered[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1
  02: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: /usr/bin/cd: line 4: cd: symbolic_link1: Not a directory
  02: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/007-no-such-file-or-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-existing path as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file_or_directory"[0m

  STDIN:
[38;5;239m  01: cd no_such_file_or_directory
  02: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]o such file or directory`[0m
[38;5;239m  01: /usr/bin/cd: line 4: cd: no_such_file_or_directory: No such file or directory
  02: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/009-no-such-file-or-directory-symlink[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link that targets to a non-existing directory with the builtin `cd`  results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./enoent_symlink" "./enoent_directory"
  02: ln -s "./enoent_directory" "./enoent_symlink"[0m

  STDIN:
[38;5;239m  01: cd ./enoent_symlink
  02: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]o such file or directory`[0m
[38;5;239m  01: /usr/bin/cd: line 4: cd: ./enoent_symlink: No such file or directory
  02: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/options/001-not-following-links[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using symbolic links twice with the builtin `cd` and the option `-P` results in a correct environment variable PWD. The option `-P` makes the Shell to resolve symbolic links.[0m

  Before test:
[38;5;239m  01: rm -fr "./sub_directory_link" "./sub_directory"
  02: mkdir -p "./sub_directory/sub_sub_directory"
  03: ln -s "./sub_directory" "./sub_directory_link"
  04: ln -s "./sub_sub_directory" "./sub_directory/sub_sub_directory_link"[0m

  STDIN:
[38;5;239m  01: cd -P sub_directory_link
  02: cd -P sub_sub_directory_link
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD=/Users/vcombey/42ShellTester/tmp/sub_directory/sub_sub_directory`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: /usr/bin/cd: line 4: cd: sub_sub_directory_link: No such file or directory
  02: /Users/vcombey/42ShellTester/tmp/display_env: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/options/002-oldpwd[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using `-` as first argument with the builtin `cd` results in moving the previous current directory.[0m

  STDIN:
[38;5;239m  01: cd /
  02: cd -
  03: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: /usr/bin/cd: line 4: cd: OLDPWD not set
  02: /Users/vcombey/42ShellTester/tmp/display_pwd: commmand not found[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/001-command-not-found[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid binary as argument results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./invalid_binary"[0m

  STDIN:
[38;5;239m  01: env ./invalid_binary[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: env: ./invalid_binary: No such file or directory[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/002-status-passed-as-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a number as first argument with the builtin `exit` results in the Shell termination with given number as exit status.[0m

  STDIN:
[38;5;239m  01: exit 42[0m

  STDOUT:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: tcsetattr error[0m

  STDERR:
[38;5;239m  01: open: Bad address[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/003-status-of-last-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `exit` without any argument results in a Shell termination and the exit status of the previous command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: exit[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./exit_with_status: commmand not found
  02: open: Bad address[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/001-too-many-args[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong number of arguments with the builtin `exit` does not result in the Shell termination but an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit 21 42
  02: ./write_on_stdout TOKEN201711201817[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Tt]oo many arguments|[Aa]rgument list too long)`[0m
[38;5;239m  01: exit: too many arguments
  02: ./write_on_stdout: commmand not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/002-add-new-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `setenv` (or `export`) can add a new variable to the environment, either with the syntax `setenv KEY VALUE` or with `setenv KEY=VALUE`.[0m

  Before test:
[38;5;239m  01: unset "TESTVAR1"[0m

  STDIN:
[38;5;239m  01: setenv TESTVAR1 VALUE_TOKEN201711201817
  02: ./display_env
  03: 
  04: setenv TESTVAR1=VALUE_TOKEN201711201817
  05: ./display_env
  06: 
  07: export TESTVAR1=VALUE_TOKEN201711201817
  08: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR1=VALUE_TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..
  02: ./display_env: commmand not found
  03: ./lib/main.sh: line 102: 10325 Segmentation fault: 11  /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/003-set-existing-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `setenv` (or `export`) can add a new variable to the environment, either with the syntax `setenv KEY VALUE` or with `setenv KEY=VALUE`.[0m

  Before test:
[38;5;239m  01: export "TESTVAR1=OLD_TOKEN201711201817"[0m

  STDIN:
[38;5;239m  01: setenv TESTVAR1 NEW_TOKEN201711201817
  02: ./display_env
  03: 
  04: setenv TESTVAR1=NEW_TOKEN201711201817
  05: ./display_env
  06: 
  07: export TESTVAR1=NEW_TOKEN201711201817
  08: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR1=NEW_TOKEN201711201817`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..
  02: ./display_env: commmand not found
  03: ./lib/main.sh: line 102: 10437 Segmentation fault: 11  /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/004-invalid-identifier[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong variable name with the builtin `setenv` (or `export`) results in error.[0m

  STDIN:
[38;5;239m  01: setenv 42
  02: export 42[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/005-add-and-set-multiple-variables[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `setenv` (or `export`) can add multiples variables into the environment, either with the syntax `setenv KEY VALUE` or with `setenv KEY=VALUE`.[0m

  Before test:
[38;5;239m  01: unset "TESTVAR1"
  02: unset "TESTVAR2"
  03: unset "TESTVAR3"
  04: unset "TESTVAR4"
  05: unset "TESTVAR5"
  06: unset "TESTVAR6"
  07: unset "TESTVAR7"
  08: unset "TESTVAR8"
  09: unset "TESTVAR9"
  10: unset "TESTVAR10"
  11: 
  12: export "TEST2VAR1=OLD_TOKEN201711201817_1"
  13: export "TEST2VAR2=OLD_TOKEN201711201817_2"
  14: export "TEST2VAR3=OLD_TOKEN201711201817_3"
  15: export "TEST2VAR4=OLD_TOKEN201711201817_4"
  16: export "TEST2VAR5=OLD_TOKEN201711201817_5"
  17: export "TEST2VAR6=OLD_TOKEN201711201817_6"
  18: export "TEST2VAR7=OLD_TOKEN201711201817_7"
  19: export "TEST2VAR8=OLD_TOKEN201711201817_8"
  20: export "TEST2VAR9=OLD_TOKEN201711201817_9"
  21: export "TEST2VAR10=OLD_TOKEN201711201817_10"[0m

  STDIN:
[38;5;239m  01: setenv TESTVAR1 VALUE_TOKEN201711201817_1
  02: setenv TEST2VAR1 VALUE_TOKEN201711201817_1
  03: setenv TESTVAR2 VALUE_TOKEN201711201817_2
  04: setenv TEST2VAR2 VALUE_TOKEN201711201817_2
  05: setenv TESTVAR3 VALUE_TOKEN201711201817_3
  06: setenv TEST2VAR3 VALUE_TOKEN201711201817_3
  07: setenv TESTVAR4 VALUE_TOKEN201711201817_4
  08: setenv TEST2VAR4 VALUE_TOKEN201711201817_4
  09: setenv TESTVAR5 VALUE_TOKEN201711201817_5
  10: setenv TEST2VAR5 VALUE_TOKEN201711201817_5
  11: setenv TESTVAR6 VALUE_TOKEN201711201817_6
  12: setenv TEST2VAR6 VALUE_TOKEN201711201817_6
  13: setenv TESTVAR7 VALUE_TOKEN201711201817_7
  14: setenv TEST2VAR7 VALUE_TOKEN201711201817_7
  15: setenv TESTVAR8 VALUE_TOKEN201711201817_8
  16: setenv TEST2VAR8 VALUE_TOKEN201711201817_8
  17: setenv TESTVAR9 VALUE_TOKEN201711201817_9
  18: setenv TEST2VAR9 VALUE_TOKEN201711201817_9
  19: setenv TESTVAR10 VALUE_TOKEN201711201817_10
  20: setenv TEST2VAR10 VALUE_TOKEN201711201817_10
  21: ./display_env
  22: 
  23: setenv TESTVAR1=VALUE_TOKEN201711201817_1
  24: setenv TEST2VAR1=VALUE_TOKEN201711201817_1
  25: setenv TESTVAR2=VALUE_TOKEN201711201817_2
  26: setenv TEST2VAR2=VALUE_TOKEN201711201817_2
  27: setenv TESTVAR3=VALUE_TOKEN201711201817_3
  28: setenv TEST2VAR3=VALUE_TOKEN201711201817_3
  29: setenv TESTVAR4=VALUE_TOKEN201711201817_4
  30: setenv TEST2VAR4=VALUE_TOKEN201711201817_4
  31: setenv TESTVAR5=VALUE_TOKEN201711201817_5
  32: setenv TEST2VAR5=VALUE_TOKEN201711201817_5
  33: setenv TESTVAR6=VALUE_TOKEN201711201817_6
  34: setenv TEST2VAR6=VALUE_TOKEN201711201817_6
  35: setenv TESTVAR7=VALUE_TOKEN201711201817_7
  36: setenv TEST2VAR7=VALUE_TOKEN201711201817_7
  37: setenv TESTVAR8=VALUE_TOKEN201711201817_8
  38: setenv TEST2VAR8=VALUE_TOKEN201711201817_8
  39: setenv TESTVAR9=VALUE_TOKEN201711201817_9
  40: setenv TEST2VAR9=VALUE_TOKEN201711201817_9
  41: setenv TESTVAR10=VALUE_TOKEN201711201817_10
  42: setenv TEST2VAR10=VALUE_TOKEN201711201817_10
  43: ./display_env
  44: 
  45: export TESTVAR1=VALUE_TOKEN201711201817_1
  46: export TEST2VAR1=VALUE_TOKEN201711201817_1
  47: export TESTVAR2=VALUE_TOKEN201711201817_2
  48: export TEST2VAR2=VALUE_TOKEN201711201817_2
  49: export TESTVAR3=VALUE_TOKEN201711201817_3
  50: export TEST2VAR3=VALUE_TOKEN201711201817_3
  51: export TESTVAR4=VALUE_TOKEN201711201817_4
  52: export TEST2VAR4=VALUE_TOKEN201711201817_4
  53: export TESTVAR5=VALUE_TOKEN201711201817_5
  54: export TEST2VAR5=VALUE_TOKEN201711201817_5
  55: export TESTVAR6=VALUE_TOKEN201711201817_6
  56: export TEST2VAR6=VALUE_TOKEN201711201817_6
  57: export TESTVAR7=VALUE_TOKEN201711201817_7
  58: export TEST2VAR7=VALUE_TOKEN201711201817_7
  59: export TESTVAR8=VALUE_TOKEN201711201817_8
  60: export TEST2VAR8=VALUE_TOKEN201711201817_8
  61: export TESTVAR9=VALUE_TOKEN201711201817_9
  62: export TEST2VAR9=VALUE_TOKEN201711201817_9
  63: export TESTVAR10=VALUE_TOKEN201711201817_10
  64: export TEST2VAR10=VALUE_TOKEN201711201817_10
  65: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR1=VALUE_TOKEN201711201817_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR2=VALUE_TOKEN201711201817_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR3=VALUE_TOKEN201711201817_3`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR4=VALUE_TOKEN201711201817_4`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR5=VALUE_TOKEN201711201817_5`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR6=VALUE_TOKEN201711201817_6`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR7=VALUE_TOKEN201711201817_7`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR8=VALUE_TOKEN201711201817_8`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR9=VALUE_TOKEN201711201817_9`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR10=VALUE_TOKEN201711201817_10`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR1=VALUE_TOKEN201711201817_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR2=VALUE_TOKEN201711201817_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR3=VALUE_TOKEN201711201817_3`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR4=VALUE_TOKEN201711201817_4`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR5=VALUE_TOKEN201711201817_5`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR6=VALUE_TOKEN201711201817_6`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR7=VALUE_TOKEN201711201817_7`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR8=VALUE_TOKEN201711201817_8`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR9=VALUE_TOKEN201711201817_9`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR10=VALUE_TOKEN201711201817_10`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..
  02: usage: setenv key1=value1 key2=value2 ..
  03: usage: setenv key1=value1 key2=value2 ..
  04: usage: setenv key1=value1 key2=value2 ..
  05: usage: setenv key1=value1 key2=value2 ..
  06: usage: setenv key1=value1 key2=value2 ..
  07: usage: setenv key1=value1 key2=value2 ..
  08: usage: setenv key1=value1 key2=value2 ..
  09: usage: setenv key1=value1 key2=value2 ..
  10: usage: setenv key1=value1 key2=value2 ..
  11: usage: setenv key1=value1 key2=value2 ..
  12: usage: setenv key1=value1 key2=value2 ..
  13: usage: setenv key1=value1 key2=value2 ..
  14: usage: setenv key1=value1 key2=value2 ..
  15: usage: setenv key1=value1 key2=value2 ..
  16: usage: setenv key1=value1 key2=value2 ..
  17: usage: setenv key1=value1 key2=value2 ..
  18: usage: setenv key1=value1 key2=value2 ..
  19: usage: setenv key1=value1 key2=value2 ..
  20: usage: setenv key1=value1 key2=value2 ..
  21: ./display_env: commmand not found
  22: ./lib/main.sh: line 102: 10737 Segmentation fault: 11  /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/misc/001-copy-of-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A Shell must send a copy of the environment to its child processes.[0m

  Before test:
[38;5;239m  01: export COPYENV_VAR1="TOKEN201711201817_VAR1"
  02: export COPYENV_VAR2="TOKEN201711201817_VAR2"
  03: export COPYENV_VAR3="TOKEN201711201817_VAR3"[0m

  STDIN:
[38;5;239m  01: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `COPYENV_VAR1=TOKEN201711201817_VAR1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `COPYENV_VAR2=TOKEN201711201817_VAR2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `COPYENV_VAR3=TOKEN201711201817_VAR3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./display_env: commmand not found[0m

Total tests: 281
Total failed tests: 231
Total pending tests: 3
