[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m                                                                                                                                                                                              

----------------------------------------------------------------

[37;1m21sh/misc/002-simple-command-line[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell is able to execute a simple command line that contains separators `;`, pipes `|`, and a right redirection `>`.[0m

  Before test:
[38;5;239m  01: rm -rf "./size"
  02: rm -rf "TOKEN201711151905"
  03: echo '^'$(echo TOKEN201711151905_FILE_TOKEN201711151905_STDOUT | wc -c)'$' > "./size"[0m

  STDIN:
[38;5;239m  01: mkdir TOKEN201711151905 ; cd TOKEN201711151905 ; touch TOKEN201711151905_FILE ; ls -1 ; ls | cat | wc -c > TOKEN201711151905_STDOUT ; cat TOKEN201711151905_STDOUT[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711151905_FILE$`[0m
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./size`[0m
[38;5;239m  01: TOKEN201711151905_FILE
  02:       23[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m21sh/pipe/006-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a pipeline command is the same as the last piped process.[0m

  STDIN:
[38;5;239m  01: ./sleep_and_exit_with_status 1 21 | ./exit_with_status 42[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/001-close-stdin[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the closing operator `&-` within the STDIN redirection `<` results in a closed standard input, so that `read(2)` results in a read error.[0m

  Before test:
[38;5;239m  01: rm -f ./read_on_stdin
  02: gcc -Wall -Werror -Wextra "/Users/vcombey/42ShellTester/support/read-on-stdin/main.c" -o ./read_on_stdin[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `STDIN READ ERROR$`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/002-filename[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711151905_LINE_1" > simple_text_file
  02: echo "TOKEN201711151905_LINE_2" >> simple_text_file
  03: echo "TOKEN201711151905_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/003-filename-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.
  The file path is specified in a separated field.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711151905_LINE_1" > simple_text_file
  02: echo "TOKEN201711151905_LINE_2" >> simple_text_file
  03: echo "TOKEN201711151905_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin < 	 simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/004-absolute-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using an absolute path to a file within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711151905_LINE_1" > simple_text_file
  02: echo "TOKEN201711151905_LINE_2" >> simple_text_file
  03: echo "TOKEN201711151905_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin </Users/vcombey/42ShellTester/tmp/simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/005-no-such-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong path within the STDIN redirection `<` results in an error.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file"[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <no_such_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]o such file or directory`[0m
[38;5;239m  01: open: No such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/002-append-stdout-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the standard output is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711151905_first" >append_file_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_stdout TOKEN201711151905_stderr 1>>append_file_stdout[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_stderr`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711151905_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711151905_stdout`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/003-append-stderr-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the standard error is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711151905_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_stdout TOKEN201711151905_stderr 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_stderr`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711151905_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711151905_stderr`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/multiple/001-append-twice-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, each output is appended to different files.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711151905_stdout_first" >append_file_stdout
  02: ./write_on_stdout "TOKEN201711151905_stderr_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_stdout_second TOKEN201711151905_stderr_second 1>>append_file_stdout 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_stdout_second`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_stderr_second`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711151905_stdout_first$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711151905_stdout_second$`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711151905_stderr_first$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711151905_stderr_second$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/002-close-stdout[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard output has the same behavior as redirecting to `/dev/null` (e.g. `ls 1>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_stdout TOKEN201711151905_stderr 1>&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_stderr`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/003-close-stderr[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard error has the same behavior as redirecting to `/dev/null` (e.g. `ls 2>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_stdout TOKEN201711151905_stderr 2>&-[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_stderr`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/001-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A different right redirection may be specified for each output.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr"
  02: rm -f "new_file_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_1 TOKEN201711151905_2 1>new_file_stdout 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stdout` matching_regex `TOKEN201711151905_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` matching_regex `TOKEN201711151905_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/002-together-stdout-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard output is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_1 TOKEN201711151905_2 1>new_file_stderr_and_stdout 2>&1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711151905_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711151905_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/003-together-stderr-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard error is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_1 TOKEN201711151905_2 2>new_file_stderr_and_stdout 1>&2[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711151905_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711151905_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/004-together[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr_and_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_1 TOKEN201711151905_2 &>new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  01: TOKEN201711151905_1[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  01: TOKEN201711151905_2[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711151905_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711151905_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/005-together-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.
  In this test, we specify the file name in a separate field.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_1 TOKEN201711151905_2 &>	  	new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  01: TOKEN201711151905_1[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711151905_2`[0m
[38;5;239m  01: TOKEN201711151905_2[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711151905_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711151905_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/stderr/001-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that redirecting the standard error STDERR to a file `2>` works. In this test, the binary writes a token on each standard and error output, so that only the STDOUT is outputted and STDERR is written in a file `new_file_stderr`.[0m

  Before test:
[38;5;239m  01: rm -f "./new_file_stderr"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711151905_STDOUT TOKEN201711151905_STDERR 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_STDERR`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` matching_regex `TOKEN201711151905_STDERR`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` with_nb_of_lines 1[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/stdout/001-with-explicit-fd[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if '1>' redirect STDIN to a file.
  We are using echo with one argument. The output should NOT return anything on the standard output.[0m

  Before test:
[38;5;239m  01: rm -f new_file[0m

  STDIN:
[38;5;239m  01: /bin/echo TOKEN1 1>new_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex TOKEN1[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file new_file matching_regex TOKEN1[0m
[31m[38;5;160m  FAILURE    expected_to create_file new_file with_nb_of_lines 1[0m

----------------------------------------------------------------

[37;1m21sh/separators/semicolon/003-parse-error-empty-inline-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the simicolon separator `;` with empty commands results in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711151905 ; ; ./exit_with_status 42[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `;'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `42`[0m
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/005-export-empty-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment, but can be displayed with the builtin `export`.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711151905
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  08: TERM_PROGRAM_VERSION=3.1.2
  09: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  12: USER=vcombey
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  14: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  15: PAGER=less
  16: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  17: DOTFILES=/Users/vcombey/.dotfiles
  18: LSCOLORS=HxBxcxdxbxegedabagacad
  19: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  20: ZSHRC=/Users/vcombey/.zshrc
  21: PWD=/Users/vcombey/42ShellTester/tmp
  22: EDITOR=vim
  23: BASE16_THEME=base16-nord
  24: LANG=en_US.UTF-8
  25: ITERM_PROFILE=Default
  26: XPC_FLAGS=0x0
  27: XPC_SERVICE_NAME=0
  28: INSTALL_ROOT=/Users/vcombey/.sbcl
  29: SHLVL=3
  30: HOME=/Users/vcombey
  31: COLORFGBG=7;0
  32: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  33: LESS=-R
  34: LOGNAME=vcombey
  35: VISUAL=vim
  36: LC_CTYPE=en_US.UTF-8
  37: COLORTERM=truecolor
  38: OLDPWD=/Users/vcombey/42ShellTester
  39: _=/Users/vcombey/42/42sh/42sh
  40: HISTFILE=/Users/vcombey/.42sh_history
  41: PS1=$> 
  42: PS2=dquote> 
  43: PS3=quote> [0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/001-invalid-identifier-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export 42=TOKEN201711151905[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: Wrong assignement :: key cannot be fully numeric or contain reserved symbols[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/002-invalid-identifier-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export .=TOKEN201711151905[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/003-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with an illegal option results in an error and a failure exit status.[0m

  STDIN:
[38;5;239m  01: export -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: Wrong option -w[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/002-export-p-param-and-token-should-add-local-var-only-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if export with -p option + token , add the variable into export list but not in env list. And don't display the export variable on stdout.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711151905_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711151905_NAME
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_NAME`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  08: TERM_PROGRAM_VERSION=3.1.2
  09: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  12: USER=vcombey
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  14: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  15: PAGER=less
  16: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  17: DOTFILES=/Users/vcombey/.dotfiles
  18: LSCOLORS=HxBxcxdxbxegedabagacad
  19: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  20: ZSHRC=/Users/vcombey/.zshrc
  21: PWD=/Users/vcombey/42ShellTester/tmp
  22: EDITOR=vim
  23: BASE16_THEME=base16-nord
  24: LANG=en_US.UTF-8
  25: ITERM_PROFILE=Default
  26: XPC_FLAGS=0x0
  27: XPC_SERVICE_NAME=0
  28: INSTALL_ROOT=/Users/vcombey/.sbcl
  29: SHLVL=3
  30: HOME=/Users/vcombey
  31: COLORFGBG=7;0
  32: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  33: LESS=-R
  34: LOGNAME=vcombey
  35: VISUAL=vim
  36: LC_CTYPE=en_US.UTF-8
  37: COLORTERM=truecolor
  38: OLDPWD=/Users/vcombey/42ShellTester
  39: _=/Users/vcombey/42/42sh/42sh
  40: HISTFILE=/Users/vcombey/.42sh_history
  41: PS1=$> 
  42: PS2=dquote> 
  43: PS3=quote> 
  44: TERM_PROGRAM=iTerm.app
  45: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  46: TERM=xterm-256color
  47: SHELL=42sh
  48: MYVIMRC=/Users/vcombey/.vimrc
  49: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  50: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  51: TERM_PROGRAM_VERSION=3.1.2
  52: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  53: ZSH=/Users/vcombey/.oh-my-zsh
  54: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  55: USER=vcombey
  56: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  57: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  58: PAGER=less
  59: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  60: DOTFILES=/Users/vcombey/.dotfiles
  61: LSCOLORS=HxBxcxdxbxegedabagacad
  62: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  63: ZSHRC=/Users/vcombey/.zshrc
  64: PWD=/Users/vcombey/42ShellTester/tmp
  65: EDITOR=vim
  66: BASE16_THEME=base16-nord
  67: LANG=en_US.UTF-8
  68: ITERM_PROFILE=Default
  69: XPC_FLAGS=0x0
  70: XPC_SERVICE_NAME=0
  71: INSTALL_ROOT=/Users/vcombey/.sbcl
  72: SHLVL=3
  73: HOME=/Users/vcombey
  74: COLORFGBG=7;0
  75: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  76: LESS=-R
  77: LOGNAME=vcombey
  78: VISUAL=vim
  79: LC_CTYPE=en_US.UTF-8
  80: COLORTERM=truecolor
  81: OLDPWD=/Users/vcombey/42ShellTester
  82: _=/Users/vcombey/42/42sh/42sh
  83: HISTFILE=/Users/vcombey/.42sh_history
  84: PS1=$> 
  85: PS2=dquote> 
  86: PS3=quote> [0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/004-export-n-param[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that using the builtin `export` with option `-n` results in a removed environment variable.[0m

  Before test:
[38;5;239m  01: export TOKEN201711151905_NAME=TOKEN201711151905_VALUE[0m

  STDIN:
[38;5;239m  01: export -n TOKEN201711151905_NAME
  02: export
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711151905_NAME`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  08: TERM_PROGRAM_VERSION=3.1.2
  09: OLDPWD=/Users/vcombey/42ShellTester
  10: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: TOKEN201711151905_NAME=TOKEN201711151905_VALUE
  39: COLORTERM=truecolor
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TERM_PROGRAM=iTerm.app
  47: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  48: TERM=xterm-256color
  49: SHELL=42sh
  50: MYVIMRC=/Users/vcombey/.vimrc
  51: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  52: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  53: TERM_PROGRAM_VERSION=3.1.2
  54: OLDPWD=/Users/vcombey/42ShellTester
  55: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  56: ZSH=/Users/vcombey/.oh-my-zsh
  57: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  58: USER=vcombey
  59: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  60: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  61: PAGER=less
  62: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  63: DOTFILES=/Users/vcombey/.dotfiles
  64: LSCOLORS=HxBxcxdxbxegedabagacad
  65: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  66: ZSHRC=/Users/vcombey/.zshrc
  67: PWD=/Users/vcombey/42ShellTester/tmp
  68: EDITOR=vim
  69: BASE16_THEME=base16-nord
  70: LANG=en_US.UTF-8
  71: ITERM_PROFILE=Default
  72: XPC_FLAGS=0x0
  73: XPC_SERVICE_NAME=0
  74: INSTALL_ROOT=/Users/vcombey/.sbcl
  75: SHLVL=3
  76: HOME=/Users/vcombey
  77: COLORFGBG=7;0
  78: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  79: LESS=-R
  80: LOGNAME=vcombey
  81: VISUAL=vim
  82: LC_CTYPE=en_US.UTF-8
  83: TOKEN201711151905_NAME=TOKEN201711151905_VALUE
  84: COLORTERM=truecolor
  85: _=/Users/vcombey/42/42sh/42sh
  86: HISTFILE=/Users/vcombey/.42sh_history
  87: PS1=$> 
  88: PS2=dquote> 
  89: PS3=quote> 
  90: ------------------------------
  91: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: Wrong option -n[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/010-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..z}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@.+@.?@.+@.+@_@.+@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==33967==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000040132 at pc 0x000102bfc821 bp 0x7fff5d05c460 sp 0x7fff5d05c458
  03: READ of size 1 at 0x602000040132 thread T0
  04:     #0 0x102bfc820 in parse_loop wordexp_posix.c:91
  05:     #1 0x102bfc2eb in word_expansion wordexp_posix.c:150
  06:     #2 0x102bc31da in exec_cmd_suffix exec_simple_command.c:42
  07:     #3 0x102bc3da9 in exec_simple_command exec_simple_command.c:136
  08:     #4 0x102bbfae5 in exec exec.c:39
  09:     #5 0x102bc0b94 in exec_command exec_command.c:20
  10:     #6 0x102bbfae5 in exec exec.c:39
  11:     #7 0x102bdca5f in launch_process job_launch.c:58
  12:     #8 0x102bdd0dd in launch_job job_launch.c:95
  13:     #9 0x102bc2c8b in exec_pipeline exec_pipeline.c:80
  14:     #10 0x102bbfae5 in exec exec.c:39
  15:     #11 0x102bbfc31 in exec_and_or exec_and_or.c:13
  16:     #12 0x102bbfae5 in exec exec.c:39
  17:     #13 0x102bc0f97 in exec_complete_command exec_complete_command.c:45
  18:     #14 0x102bbfae5 in exec exec.c:39
  19:     #15 0x102bc1251 in exec_complete_commands exec_complete_commands.c:10
  20:     #16 0x102bbfae5 in exec exec.c:39
  21:     #17 0x102bc2ec9 in exec_program exec_program.c:10
  22:     #18 0x102bbfae5 in exec exec.c:39
  23:     #19 0x102bbdf55 in exec_main_loop lex_and_parse.c:18
  24:     #20 0x102bbe739 in lex_and_parse lex_and_parse.c:75
  25:     #21 0x102bbef5e in main_loop main_loop.c:72
  26:     #22 0x102ba3d6b in main main.c:82
  27:     #23 0x7fffc0cac234 in start (libdyld.dylib:x86_64+0x5234)
  28: 
  29: 0x602000040132 is located 0 bytes to the right of 2-byte region [0x602000040130,0x602000040132)
  30: allocated by thread T0 here:
  31:     #0 0x102d98ffc in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64+0x55ffc)
  32:     #1 0x102c0e4cf in ft_memalloc ft_memalloc.c:17
  33:     #2 0x102c13e7c in ft_strnew ft_strnew.c:8
  34:     #3 0x102c13229 in ft_strjoin3_free ft_strjoin3_free.c:26
  35:     #4 0x102bcb5d4 in curly_brackets_range_alpha curly_brackets_range.c:18
  36:     #5 0x102bcc0df in curly_brackets_range curly_brackets_range.c:71
  37:     #6 0x102bca167 in curly_brackets curly_brackets.c:124
  38:     #7 0x102bca7f6 in expand_curly_brackets curly_brackets.c:136
  39:     #8 0x102bfc574 in brace_expension wordexp_posix.c:69
  40:     #9 0x102bfc23d in word_expansion wordexp_posix.c:146
  41:     #10 0x102bc31da in exec_cmd_suffix exec_simple_command.c:42
  42:     #11 0x102bc3da9 in exec_simple_command exec_simple_command.c:136
  43:     #12 0x102bbfae5 in exec exec.c:39
  44:     #13 0x102bc0b94 in exec_command exec_command.c:20
  45:     #14 0x102bbfae5 in exec exec.c:39
  46:     #15 0x102bdca5f in launch_process job_launch.c:58
  47:     #16 0x102bdd0dd in launch_job job_launch.c:95
  48:     #17 0x102bc2c8b in exec_pipeline exec_pipeline.c:80
  49:     #18 0x102bbfae5 in exec exec.c:39
  50:     #19 0x102bbfc31 in exec_and_or exec_and_or.c:13
  51:     #20 0x102bbfae5 in exec exec.c:39
  52:     #21 0x102bc0f97 in exec_complete_command exec_complete_command.c:45
  53:     #22 0x102bbfae5 in exec exec.c:39
  54:     #23 0x102bc1251 in exec_complete_commands exec_complete_commands.c:10
  55:     #24 0x102bbfae5 in exec exec.c:39
  56:     #25 0x102bc2ec9 in exec_program exec_program.c:10
  57:     #26 0x102bbfae5 in exec exec.c:39
  58:     #27 0x102bbdf55 in exec_main_loop lex_and_parse.c:18
  59:     #28 0x102bbe739 in lex_and_parse lex_and_parse.c:75
  60:     #29 0x102bbef5e in main_loop main_loop.c:72
  61: 
  62: SUMMARY: AddressSanitizer: heap-buffer-overflow wordexp_posix.c:91 in parse_loop
  63: Shadow bytes around the buggy address:
  64:   0x1c0400007fd0: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  65:   0x1c0400007fe0: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  66:   0x1c0400007ff0: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  67:   0x1c0400008000: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  68:   0x1c0400008010: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  69: =>0x1c0400008020: fa fa fd fd fa fa[02]fa fa fa fd fd fa fa 02 fa
  70:   0x1c0400008030: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  71:   0x1c0400008040: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  72:   0x1c0400008050: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  73:   0x1c0400008060: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  74:   0x1c0400008070: fa fa fd fd fa fa 02 fa fa fa fd fd fa fa 02 fa
  75: Shadow byte legend (one shadow byte represents 8 application bytes):
  76:   Addressable:           00
  77:   Partially addressable: 01 02 03 04 05 06 07 
  78:   Heap left redzone:       fa
  79:   Freed heap region:       fd
  80:   Stack left redzone:      f1
  81:   Stack mid redzone:       f2
  82:   Stack right redzone:     f3
  83:   Stack after return:      f5
  84:   Stack use after scope:   f8
  85:   Global redzone:          f9
  86:   Global init order:       f6
  87:   Poisoned by user:        f7
  88:   Container overflow:      fc
  89:   Array cookie:            ac
  90:   Intra object redzone:    bb
  91:   ASan internal:           fe
  92:   Left alloca redzone:     ca
  93:   Right alloca redzone:    cb
  94: ==33967==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/002-simple-test-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed when at least one comma `,` is encountered.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711151905_A,TOKEN201711151905_B}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_A@TOKEN201711151905_B@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==34625==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300002f799 at pc 0x0001099a15bd bp 0x7fff56285230 sp 0x7fff56285228
  03: READ of size 1 at 0x60300002f799 thread T0
  04:     #0 0x1099a15bc in get_start_bracket curly_brackets.c:88
  05:     #1 0x1099a102c in curly_brackets curly_brackets.c:113
  06:     #2 0x1099a0f56 in curly_brackets_coma curly_brackets.c:15
  07:     #3 0x1099a119f in curly_brackets curly_brackets.c:126
  08:     #4 0x1099a17f6 in expand_curly_brackets curly_brackets.c:136
  09:     #5 0x1099d3574 in brace_expension wordexp_posix.c:69
  10:     #6 0x1099d323d in word_expansion wordexp_posix.c:146
  11:     #7 0x10999a1da in exec_cmd_suffix exec_simple_command.c:42
  12:     #8 0x10999ada9 in exec_simple_command exec_simple_command.c:136
  13:     #9 0x109996ae5 in exec exec.c:39
  14:     #10 0x109997b94 in exec_command exec_command.c:20
  15:     #11 0x109996ae5 in exec exec.c:39
  16:     #12 0x1099b3a5f in launch_process job_launch.c:58
  17:     #13 0x1099b40dd in launch_job job_launch.c:95
  18:     #14 0x109999c8b in exec_pipeline exec_pipeline.c:80
  19:     #15 0x109996ae5 in exec exec.c:39
  20:     #16 0x109996c31 in exec_and_or exec_and_or.c:13
  21:     #17 0x109996ae5 in exec exec.c:39
  22:     #18 0x109997f97 in exec_complete_command exec_complete_command.c:45
  23:     #19 0x109996ae5 in exec exec.c:39
  24:     #20 0x109998251 in exec_complete_commands exec_complete_commands.c:10
  25:     #21 0x109996ae5 in exec exec.c:39
  26:     #22 0x109999ec9 in exec_program exec_program.c:10
  27:     #23 0x109996ae5 in exec exec.c:39
  28:     #24 0x109994f55 in exec_main_loop lex_and_parse.c:18
  29:     #25 0x109995739 in lex_and_parse lex_and_parse.c:75
  30:     #26 0x109995f5e in main_loop main_loop.c:72
  31:     #27 0x10997ad6b in main main.c:82
  32:     #28 0x7fffc0cac234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: 0x60300002f799 is located 21 bytes to the right of 20-byte region [0x60300002f770,0x60300002f784)
  35: allocated by thread T0 here:
  36:     #0 0x109b6fffc in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64+0x55ffc)
  37:     #1 0x1099e54cf in ft_memalloc ft_memalloc.c:17
  38:     #2 0x1099eae7c in ft_strnew ft_strnew.c:8
  39:     #3 0x1099ea229 in ft_strjoin3_free ft_strjoin3_free.c:26
  40:     #4 0x1099a0f3f in curly_brackets_coma curly_brackets.c:16
  41:     #5 0x1099a119f in curly_brackets curly_brackets.c:126
  42:     #6 0x1099a17f6 in expand_curly_brackets curly_brackets.c:136
  43:     #7 0x1099d3574 in brace_expension wordexp_posix.c:69
  44:     #8 0x1099d323d in word_expansion wordexp_posix.c:146
  45:     #9 0x10999a1da in exec_cmd_suffix exec_simple_command.c:42
  46:     #10 0x10999ada9 in exec_simple_command exec_simple_command.c:136
  47:     #11 0x109996ae5 in exec exec.c:39
  48:     #12 0x109997b94 in exec_command exec_command.c:20
  49:     #13 0x109996ae5 in exec exec.c:39
  50:     #14 0x1099b3a5f in launch_process job_launch.c:58
  51:     #15 0x1099b40dd in launch_job job_launch.c:95
  52:     #16 0x109999c8b in exec_pipeline exec_pipeline.c:80
  53:     #17 0x109996ae5 in exec exec.c:39
  54:     #18 0x109996c31 in exec_and_or exec_and_or.c:13
  55:     #19 0x109996ae5 in exec exec.c:39
  56:     #20 0x109997f97 in exec_complete_command exec_complete_command.c:45
  57:     #21 0x109996ae5 in exec exec.c:39
  58:     #22 0x109998251 in exec_complete_commands exec_complete_commands.c:10
  59:     #23 0x109996ae5 in exec exec.c:39
  60:     #24 0x109999ec9 in exec_program exec_program.c:10
  61:     #25 0x109996ae5 in exec exec.c:39
  62:     #26 0x109994f55 in exec_main_loop lex_and_parse.c:18
  63:     #27 0x109995739 in lex_and_parse lex_and_parse.c:75
  64:     #28 0x109995f5e in main_loop main_loop.c:72
  65:     #29 0x10997ad6b in main main.c:82
  66: 
  67: SUMMARY: AddressSanitizer: heap-buffer-overflow curly_brackets.c:88 in get_start_bracket
  68: Shadow bytes around the buggy address:
  69:   0x1c0600005ea0: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa
  70:   0x1c0600005eb0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd
  71:   0x1c0600005ec0: fd fa fa fa fd fd fd fd fa fa fd fd fd fa fa fa
  72:   0x1c0600005ed0: fd fd fd fd fa fa fd fd fd fd fa fa 00 00 00 fa
  73:   0x1c0600005ee0: fa fa 00 00 04 fa fa fa 00 00 04 fa fa fa 00 00
  74: =>0x1c0600005ef0: 04 fa fa[fa]fa fa fa fa fa fa fa fa fa fa fa fa
  75:   0x1c0600005f00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  76:   0x1c0600005f10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  77:   0x1c0600005f20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  78:   0x1c0600005f30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  79:   0x1c0600005f40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  80: Shadow byte legend (one shadow byte represents 8 application bytes):
  81:   Addressable:           00
  82:   Partially addressable: 01 02 03 04 05 06 07 
  83:   Heap left redzone:       fa
  84:   Freed heap region:       fd
  85:   Stack left redzone:      f1
  86:   Stack mid redzone:       f2
  87:   Stack right redzone:     f3
  88:   Stack after return:      f5
  89:   Stack use after scope:   f8
  90:   Global redzone:          f9
  91:   Global init order:       f6
  92:   Poisoned by user:        f7
  93:   Container overflow:      fc
  94:   Array cookie:            ac
  95:   Intra object redzone:    bb
  96:   ASan internal:           fe
  97:   Left alloca redzone:     ca
  98:   Right alloca redzone:    cb
  99: ==34625==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/003-simple-test-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed with a list of three patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711151905_A,TOKEN201711151905_B,TOKEN201711151905_C}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_A@TOKEN201711151905_B@TOKEN201711151905_C@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==34751==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300002f7dd at pc 0x0001100225bd bp 0x7fff4fc04230 sp 0x7fff4fc04228
  03: READ of size 1 at 0x60300002f7dd thread T0
  04:     #0 0x1100225bc in get_start_bracket curly_brackets.c:88
  05:     #1 0x11002202c in curly_brackets curly_brackets.c:113
  06:     #2 0x110021f56 in curly_brackets_coma curly_brackets.c:15
  07:     #3 0x11002219f in curly_brackets curly_brackets.c:126
  08:     #4 0x1100227f6 in expand_curly_brackets curly_brackets.c:136
  09:     #5 0x110054574 in brace_expension wordexp_posix.c:69
  10:     #6 0x11005423d in word_expansion wordexp_posix.c:146
  11:     #7 0x11001b1da in exec_cmd_suffix exec_simple_command.c:42
  12:     #8 0x11001bda9 in exec_simple_command exec_simple_command.c:136
  13:     #9 0x110017ae5 in exec exec.c:39
  14:     #10 0x110018b94 in exec_command exec_command.c:20
  15:     #11 0x110017ae5 in exec exec.c:39
  16:     #12 0x110034a5f in launch_process job_launch.c:58
  17:     #13 0x1100350dd in launch_job job_launch.c:95
  18:     #14 0x11001ac8b in exec_pipeline exec_pipeline.c:80
  19:     #15 0x110017ae5 in exec exec.c:39
  20:     #16 0x110017c31 in exec_and_or exec_and_or.c:13
  21:     #17 0x110017ae5 in exec exec.c:39
  22:     #18 0x110018f97 in exec_complete_command exec_complete_command.c:45
  23:     #19 0x110017ae5 in exec exec.c:39
  24:     #20 0x110019251 in exec_complete_commands exec_complete_commands.c:10
  25:     #21 0x110017ae5 in exec exec.c:39
  26:     #22 0x11001aec9 in exec_program exec_program.c:10
  27:     #23 0x110017ae5 in exec exec.c:39
  28:     #24 0x110015f55 in exec_main_loop lex_and_parse.c:18
  29:     #25 0x110016739 in lex_and_parse lex_and_parse.c:75
  30:     #26 0x110016f5e in main_loop main_loop.c:72
  31:     #27 0x10fffbd6b in main main.c:82
  32:     #28 0x7fffc0cac234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: Address 0x60300002f7dd is a wild pointer.
  35: SUMMARY: AddressSanitizer: heap-buffer-overflow curly_brackets.c:88 in get_start_bracket
  36: Shadow bytes around the buggy address:
  37:   0x1c0600005ea0: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa
  38:   0x1c0600005eb0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd
  39:   0x1c0600005ec0: fd fa fa fa fd fd fd fd fa fa fd fd fd fa fa fa
  40:   0x1c0600005ed0: fd fd fd fd fa fa fd fd fd fd fa fa 00 00 00 00
  41:   0x1c0600005ee0: fa fa 00 00 04 fa fa fa 00 00 04 fa fa fa 00 00
  42: =>0x1c0600005ef0: 04 fa fa fa 00 00 04 fa fa fa fa[fa]fa fa fa fa
  43:   0x1c0600005f00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  44:   0x1c0600005f10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  45:   0x1c0600005f20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  46:   0x1c0600005f30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  47:   0x1c0600005f40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  48: Shadow byte legend (one shadow byte represents 8 application bytes):
  49:   Addressable:           00
  50:   Partially addressable: 01 02 03 04 05 06 07 
  51:   Heap left redzone:       fa
  52:   Freed heap region:       fd
  53:   Stack left redzone:      f1
  54:   Stack mid redzone:       f2
  55:   Stack right redzone:     f3
  56:   Stack after return:      f5
  57:   Stack use after scope:   f8
  58:   Global redzone:          f9
  59:   Global init order:       f6
  60:   Poisoned by user:        f7
  61:   Container overflow:      fc
  62:   Array cookie:            ac
  63:   Intra object redzone:    bb
  64:   ASan internal:           fe
  65:   Left alloca redzone:     ca
  66:   Right alloca redzone:    cb
  67: ==34751==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/004-simple-bracket+char+range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to control if 2 patterns splited by a minus characters can be match.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a-0' 'a-1' 'a-2' 'b-0' 'b-1' 'b-2' 'Z-0' 'Z-1' 'Z-2' 'a1' 'Z9' 'D4'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [aZ]-[1-9][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `Z-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `Z-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `D4@`[0m
[31m[1;33m  WARNING    might match_regex `^Z-1@Z-2@a-1@a-2@$`[0m
[38;5;239m  01: a-1@a-2@Z-1@Z-2@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/001-simple-opposit-match[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' '1' 'Z' 'd' 'e' 'f' 'def'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a1Z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a1Z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def@`[0m
[31m[1;33m  WARNING    might match_regex `^d@e@f@$`[0m
[38;5;239m  01: .@d@e@f@
  02: 1@a@Z@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/002-simple-opposite-range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'z' '1' '2' '3' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `42@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@3@$`[0m
[38;5;239m  01: .@1@2@3@
  02: a@b@c@z@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/004-ascii-range-2[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[1-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' ']' '[' '[1-z]' '1-z' '-'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [1-z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1-z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]1-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^2@B@Z@[[]@]@a@c@$`[0m
[38;5;239m  01: 2@[@]@a@B@c@Z@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/004-existing-variable-in-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711151905_NAME=TOKEN201711151905_VALUE_OLD"[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905_NAME=TOKEN201711151905_VALUE_NEW
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_NAME=TOKEN201711151905_VALUE_NEW$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `^TOKEN201711151905_NAME=TOKEN201711151905_VALUE_OLD$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: OLDPWD=/Users/vcombey/42ShellTester
  11: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: TOKEN201711151905_NAME=TOKEN201711151905_VALUE_OLD
  40: COLORTERM=truecolor
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/005-existing-variable-in-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711151905_NAME=TOKEN201711151905_VALUE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_NAME=$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `^TOKEN201711151905_NAME=TOKEN201711151905_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: OLDPWD=/Users/vcombey/42ShellTester
  11: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: TOKEN201711151905_NAME=TOKEN201711151905_VALUE
  40: COLORTERM=truecolor
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/008-multiple-declaration-with-same-name[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring the same variable several times in the same command line does work and does not result in error.[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905_NAME=TOKEN201711151905_VALUE1 TOKEN201711151905_NAME=TOKEN201711151905_VALUE2 TOKEN201711151905_NAME=TOKEN201711151905_VALUE3
  02: ./write_on_stdout $TOKEN201711151905_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `^TOKEN201711151905_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711151905_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_VALUE3$`[0m
[38;5;239m  01: TOKEN201711151905_VALUE1[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/009-last-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the special variable `$?` may be expanded with the last exit status.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: ./write_on_stderr $?[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42$`[0m
[38;5;239m  01: $?[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/inline-environment-variable/001-local-variable-shouldnt-be-set[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary does not result in local variable declaration but a modified environment for the command.[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905_NAME=TOKEN201711151905_VALUE ./display_env
  02: ./write_on_stderr $TOKEN201711151905[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_NAME=TOKEN201711151905_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_VALUE`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/001-truncating[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711151905_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905_NAME=TOKEN201711151905_FILENAME
  02: ./write_on_stdout TOKEN201711151905_VALUE > $TOKEN201711151905_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711151905_FILENAME` matching_regex `^TOKEN201711151905_VALUE$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/002-appending[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711151905_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905_NAME=TOKEN201711151905_FILENAME
  02: ./write_on_stdout TOKEN201711151905_VALUE1 >> $TOKEN201711151905_NAME
  03: ./write_on_stdout TOKEN201711151905_VALUE2 >> $TOKEN201711151905_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711151905_FILENAME` matching_regex `^TOKEN201711151905_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711151905_FILENAME` matching_regex `^TOKEN201711151905_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/003-reading[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711151905_FILENAME"
  02: echo "TOKEN201711151905_VALUE" > "TOKEN201711151905_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905_NAME=TOKEN201711151905_FILENAME
  02: ./read_on_stdin < $TOKEN201711151905_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_VALUE@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/tilde-expansion/001-process-tilde-expansion[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tilde expansion `~` in variable declaration.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905=~
  02: ./write_on_stdout TILDE:$TOKEN201711151905[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TILDE:~`[0m
[31m[1;33m  WARNING    might match_regex `TILDE:/TOKEN201711151905`[0m
[38;5;239m  01: TILDE:~[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/004-it-results-in-error[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using backslash `\\` before the closing double-quote `"` does result in syntax error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711151905\"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711151905$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: dquote> [0m

----------------------------------------------------------------

[37;1m42sh/subshell/004-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a subshell command that is executed at the end of a script is correctly returned at termination by the parent shell.[0m

  STDIN:
[38;5;239m  01: (./exit_with_status 42)[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status 42[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/001-modifies-the-child-environment-only-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: (TOKEN201711151905_NAME=TOKEN201711151905_VALUE ./display_env)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_NAME=TOKEN201711151905_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711151905_NAME=TOKEN201711151905_VALUE: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/002-modifies-the-child-environment-only-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: ( (TOKEN201711151905_NAME=TOKEN201711151905_VALUE ./display_env) ; ./display_env) ; ./display_env
  02: [0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_NAME=TOKEN201711151905_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43
  47: ------------------------------
  48: TERM_PROGRAM=iTerm.app
  49: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  50: TERM=xterm-256color
  51: SHELL=42sh
  52: MYVIMRC=/Users/vcombey/.vimrc
  53: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  54: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  55: TERM_PROGRAM_VERSION=3.1.2
  56: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  57: ZSH=/Users/vcombey/.oh-my-zsh
  58: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  59: USER=vcombey
  60: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  61: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  62: PAGER=less
  63: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  64: DOTFILES=/Users/vcombey/.dotfiles
  65: LSCOLORS=HxBxcxdxbxegedabagacad
  66: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  67: ZSHRC=/Users/vcombey/.zshrc
  68: PWD=/Users/vcombey/42ShellTester/tmp
  69: EDITOR=vim
  70: BASE16_THEME=base16-nord
  71: LANG=en_US.UTF-8
  72: ITERM_PROFILE=Default
  73: XPC_FLAGS=0x0
  74: XPC_SERVICE_NAME=0
  75: INSTALL_ROOT=/Users/vcombey/.sbcl
  76: SHLVL=3
  77: HOME=/Users/vcombey
  78: COLORFGBG=7;0
  79: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  80: LESS=-R
  81: LOGNAME=vcombey
  82: VISUAL=vim
  83: LC_CTYPE=en_US.UTF-8
  84: COLORTERM=truecolor
  85: OLDPWD=/Users/vcombey/42ShellTester
  86: _=/Users/vcombey/42/42sh/42sh
  87: HISTFILE=/Users/vcombey/.42sh_history
  88: PS1=$> 
  89: PS2=dquote> 
  90: PS3=quote> 
  91: ------------------------------
  92: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711151905_NAME=TOKEN201711151905_VALUE: command not found[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/001-modifies-child-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711151905_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905_VARIABLE=TOKEN201711151905_VALUE ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_VARIABLE=TOKEN201711151905_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43
  47: ------------------------------
  48: TERM_PROGRAM=iTerm.app
  49: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  50: TERM=xterm-256color
  51: SHELL=42sh
  52: MYVIMRC=/Users/vcombey/.vimrc
  53: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  54: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  55: TERM_PROGRAM_VERSION=3.1.2
  56: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  57: ZSH=/Users/vcombey/.oh-my-zsh
  58: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  59: USER=vcombey
  60: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  61: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  62: PAGER=less
  63: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  64: DOTFILES=/Users/vcombey/.dotfiles
  65: LSCOLORS=HxBxcxdxbxegedabagacad
  66: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  67: ZSHRC=/Users/vcombey/.zshrc
  68: PWD=/Users/vcombey/42ShellTester/tmp
  69: EDITOR=vim
  70: BASE16_THEME=base16-nord
  71: LANG=en_US.UTF-8
  72: ITERM_PROFILE=Default
  73: XPC_FLAGS=0x0
  74: XPC_SERVICE_NAME=0
  75: INSTALL_ROOT=/Users/vcombey/.sbcl
  76: SHLVL=3
  77: HOME=/Users/vcombey
  78: COLORFGBG=7;0
  79: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  80: LESS=-R
  81: LOGNAME=vcombey
  82: VISUAL=vim
  83: LC_CTYPE=en_US.UTF-8
  84: COLORTERM=truecolor
  85: OLDPWD=/Users/vcombey/42ShellTester
  86: _=/Users/vcombey/42/42sh/42sh
  87: HISTFILE=/Users/vcombey/.42sh_history
  88: PS1=$> 
  89: PS2=dquote> 
  90: PS3=quote> 
  91: ------------------------------
  92: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/002-modifies-child-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711151905_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711151905_VARIABLE1=TOKEN201711151905_VALUE1 TOKEN201711151905_VARIABLE2=TOKEN201711151905_VALUE2 TOKEN201711151905_VARIABLE3=TOKEN201711151905_VALUE3 ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_VARIABLE1=TOKEN201711151905_VALUE1$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_VARIABLE2=TOKEN201711151905_VALUE2$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905_VARIABLE3=TOKEN201711151905_VALUE3$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43
  47: ------------------------------
  48: TERM_PROGRAM=iTerm.app
  49: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  50: TERM=xterm-256color
  51: SHELL=42sh
  52: MYVIMRC=/Users/vcombey/.vimrc
  53: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  54: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  55: TERM_PROGRAM_VERSION=3.1.2
  56: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  57: ZSH=/Users/vcombey/.oh-my-zsh
  58: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  59: USER=vcombey
  60: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  61: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  62: PAGER=less
  63: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  64: DOTFILES=/Users/vcombey/.dotfiles
  65: LSCOLORS=HxBxcxdxbxegedabagacad
  66: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  67: ZSHRC=/Users/vcombey/.zshrc
  68: PWD=/Users/vcombey/42ShellTester/tmp
  69: EDITOR=vim
  70: BASE16_THEME=base16-nord
  71: LANG=en_US.UTF-8
  72: ITERM_PROFILE=Default
  73: XPC_FLAGS=0x0
  74: XPC_SERVICE_NAME=0
  75: INSTALL_ROOT=/Users/vcombey/.sbcl
  76: SHLVL=3
  77: HOME=/Users/vcombey
  78: COLORFGBG=7;0
  79: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  80: LESS=-R
  81: LOGNAME=vcombey
  82: VISUAL=vim
  83: LC_CTYPE=en_US.UTF-8
  84: COLORTERM=truecolor
  85: OLDPWD=/Users/vcombey/42ShellTester
  86: _=/Users/vcombey/42/42sh/42sh
  87: HISTFILE=/Users/vcombey/.42sh_history
  88: PS1=$> 
  89: PS2=dquote> 
  90: PS3=quote> 
  91: ------------------------------
  92: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/003-modifies-PATH-only[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: rm -rf "temporary_directory"
  02: mkdir -p "temporary_directory"
  03: cd "temporary_directory"[0m

  STDIN:
[38;5;239m  01: PATH=.. write_on_stdout TOKEN201711151905
  02: exit_with_status 42[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711151905$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: write_on_stdout: command not found
  02: exit_with_status: command not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `42`[0m
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/002-do-not-run-second[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the AND operator `&&` makes the right command to not be executed if the left one exits with an error status code.
  The Shell should exit with the status code of the executed command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 && ./write_on_stdout TOKEN201711151905[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex TOKEN201711151905[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[1;33m  WARNING    might exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/003-run-until-failing[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the AND separator `&&` with chained commands results in the execution of all until the first fail.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./exit_with_status 0 && ./exit_with_status 0 && ./exit_with_status 0 && ./write_on_stdout TOKEN201711151905_FIRST && ./exit_with_status 42 && ./write_on_stdout TOKEN201711151905_SECOND[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711151905_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_SECOND`[0m
[38;5;239m  01: TOKEN201711151905_FIRST[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/errors/001-parse-error-at-beginning[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that the AND operator `&&` must be placed after a valid command.
  If not, the Shell should display an error and exit with an error status code.[0m

  STDIN:
[38;5;239m  01: && ./write_on_stdout TOKEN201711151905[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex `TOKEN201711151905`[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `&&'[0m

  MISC:
[31m[1;33m  WARNING    might_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/errors/002-parse-error-too-much-symbol[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that more than two '&' operators are detected as a syntax error.
  It should not execute the two commands `write_on_stdout` but display an error and exit with an error status code.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711151905 &&& ./write_on_stdout TOKEN201711151905[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex `TOKEN201711151905`[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `&'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/001-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 && ./write_on_stderr TOKEN201711151905_ERROR 21 || ./write_on_stdout TOKEN201711151905_SUCCESS[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/002-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./write_on_stderr TOKEN201711151905_ERROR 21 || ./write_on_stdout TOKEN201711151905_SUCCESS[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711151905_ERROR`[0m
[38;5;239m  01: TOKEN201711151905_ERROR[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/004-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stderr TOKEN201711151905_ERROR 21 && ./write_on_stdout TOKEN201711151905_SUCCESS[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_ERROR`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/005-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201711151905_SUCCESS && ./write_on_stderr TOKEN201711151905_ERROR 21[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_ERROR`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/002-run-second-only[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the OR operator `||` makes the right command to be executed if the left one exits with an error status code.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201711151905[0m

  STDOUT:
[31m[1;33m  WARNING    might match_regex `TOKEN201711151905`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    might exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/003-run-until-succeeding[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the OR separator `||` with chained commands results in the execution of all until the first succeed. The remaining commands are not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 1 || ./exit_with_status 2 || ./exit_with_status 3 || ./exit_with_status 4 || ./write_on_stdout TOKEN201711151905_FIRST || ./write_on_stdout TOKEN201711151905_SECOND[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711151905_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/errors/001-parse-error-at-beginning[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that the OR operator `||` must be placed after a valid command.
  If not, the Shell should display an error and exit with an error status code.[0m

  STDIN:
[38;5;239m  01: || ./write_on_stdout TOKEN201711151905[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `||'[0m

  MISC:
[31m[1;33m  WARNING    might_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/errors/002-parse-error-too-much-symbol[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that using more than two pipe symbols `|` is detected as an error.
  The Shell should display an error and exit with a error status code.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711151905 ||| ./write_on_stdout TOKEN201711151905[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `|'[0m

  MISC:
[31m[1;33m  WARNING    might_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/003-expanded-with-PWD-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable PWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~[+]`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711151905[+]`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  01: /TOKEN201711151905+[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/004-expanded-with-PWD-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable PWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+/TOKEN201711151905_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~+/TOKEN201711151905_SUBDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711151905[+]/TOKEN201711151905_SUBDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp/TOKEN201711151905_SUBDIRECTORY$`[0m
[38;5;239m  01: /TOKEN201711151905+/TOKEN201711151905_SUBDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/005-expanded-with-OLDPWD-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable OLDPWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711151905_SUBDIRECTORY"
  02: mkdir "./TOKEN201711151905_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711151905_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~-`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711151905-`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  01: /TOKEN201711151905-[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/006-expanded-with-OLDPWD-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable OLDPWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711151905_SUBDIRECTORY"
  02: mkdir "./TOKEN201711151905_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711151905_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-/TOKEN201711151905_OTHERDIRECTORY[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~-/TOKEN201711151905_OTHERDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711151905-/TOKEN201711151905_OTHERDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp/TOKEN201711151905_OTHERDIRECTORY$`[0m
[38;5;239m  01: /TOKEN201711151905-/TOKEN201711151905_OTHERDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/001-not-expanded-with-HOME-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be not expanded when not followed by an authorized symbol or user name.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~~[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~~$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711151905`[0m
[38;5;239m  01: /TOKEN201711151905/TOKEN201711151905[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/002-not-expanded-with-HOME-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be not expanded when not followed by an authorized symbol or user name.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~TOKEN201711151905_UNKNOWNUSER[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~TOKEN201711151905_UNKNOWNUSER$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711151905TOKEN201711151905_UNKNOWNUSER`[0m
[38;5;239m  01: /TOKEN201711151905TOKEN201711151905_UNKNOWNUSER[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/003-not-expanded-with-PWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` is not expanded with the environment variable PWD when not followed by the symbol `/`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+TOKEN201711151905_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~[+]TOKEN201711151905_SUBDIRECTORY$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711151905[+]TOKEN201711151905_SUBDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmpTOKEN201711151905_SUBDIRECTORY`[0m
[38;5;239m  01: /TOKEN201711151905+TOKEN201711151905_SUBDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/004-not-expanded-with-OLDPWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` is not expanded with the environment variable OLDPWD when not followed by the symbol `/`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711151905_SUBDIRECTORY"
  02: mkdir "./TOKEN201711151905_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711151905"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711151905_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-TOKEN201711151905_OTHERDIRECTORY[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~-TOKEN201711151905_OTHERDIRECTORY$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711151905-/TOKEN201711151905_OTHERDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp/TOKEN201711151905_OTHERDIRECTORY`[0m
[38;5;239m  01: /TOKEN201711151905-TOKEN201711151905_OTHERDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/binary/003-binary-test-exec-order[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell correctly finds binaries by iterating on paths within the environment variable PATH from left to right.[0m

  Before test:
[38;5;239m  01: mkdir -p "./virtual_path_1" "./virtual_path_2"
  02: cp "./write_on_stdout" "./virtual_path_1/fake_echo"
  03: cp "./write_on_stderr" "./virtual_path_2/fake_echo"
  04: export PATH="/Users/vcombey/42ShellTester/tmp/virtual_path_1:/Users/vcombey/42ShellTester/tmp/virtual_path_2"[0m

  STDIN:
[38;5;239m  01: fake_echo TOKEN201711151905[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex TOKEN201711151905[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711151905[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/004-binary-test-empty-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell finds binaries that are located in the current directory when the environment variable PATH is empty.[0m

  Before test:
[38;5;239m  01: export PATH=""[0m

  STDIN:
[38;5;239m  01: write_on_stdout "TOKEN201711151905"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: write_on_stdout: command not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/005-binary-test-wrong-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  This test purpose is to check if your shell is not able to use binary with a wrong PATH
  We are changing the actual PATH by PATH=NULL
  And executing the commande ls[0m

  Before test:
[38;5;239m  01: export PATH="/"[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: ls: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/006-binary-undefined-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell retrieves the default value of the environment variable PATH if not set. This test depends on the presence of the UNIX binary `ls`, located in a path within the default environment variable PATH.[0m

  Before test:
[38;5;239m  01: rm -rf "TOKEN201711151905_006-BINARY-UNDEFINED-PATH"
  02: touch "TOKEN201711151905_006-BINARY-UNDEFINED-PATH"
  03: unset PATH[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711151905_006-BINARY-UNDEFINED-PATH`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ls: command not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/007-binary-permission-denied[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a non-permitted binary results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./permission_denied
  02: touch ./permission_denied
  03: chmod 0 ./permission_denied[0m

  STDIN:
[38;5;239m  01: ./permission_denied[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Pp]ermission denied`[0m
[38;5;239m  01: ./permission_denied: permission denied [0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status 0[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/binary/008-binary-too-many-symbolic-links-encountered[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a path that encounters an infinite loop of symbolic link results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./symbolic_link1 ./symbolic_link2 ./symbolic_link3
  02: ln -s ./symbolic_link1 ./symbolic_link2
  03: ln -s ./symbolic_link2 ./symbolic_link3
  04: ln -s ./symbolic_link3 ./symbolic_link1[0m

  STDIN:
[38;5;239m  01: ./symbolic_link1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: ./symbolic_link1: no such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status 0[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/007-symbolic-link[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving the linked directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/symbolic_link$`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD
  02: ------------------------------
  03: TERM_PROGRAM=iTerm.app
  04: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  05: TERM=xterm-256color
  06: SHELL=42sh
  07: MYVIMRC=/Users/vcombey/.vimrc
  08: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  09: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  10: TERM_PROGRAM_VERSION=3.1.2
  11: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp/sub_directory
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester/tmp
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/008-symbolic-link-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving to the linked directory. In this test, the directory is linked with to chained symbolic links.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link1"
  04: ln -s "./symbolic_link1" "./symbolic_link2"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link2
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/symbolic_link2$`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD
  02: ------------------------------
  03: TERM_PROGRAM=iTerm.app
  04: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  05: TERM=xterm-256color
  06: SHELL=42sh
  07: MYVIMRC=/Users/vcombey/.vimrc
  08: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  09: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  10: TERM_PROGRAM_VERSION=3.1.2
  11: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp/sub_directory
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester/tmp
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/012-dot[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that playing with relative paths to the current directory with the builtin `cd` results in not changing the current directory.[0m

  STDIN:
[38;5;239m  01: cd .
  02: cd ./
  03: cd ./.
  04: cd ././
  05: cd ./././././././././.
  06: /Users/vcombey/42ShellTester/tmp/display_pwd
  07: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester:PWD
  02: ------------------------------
  03: TERM_PROGRAM=iTerm.app
  04: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  05: TERM=xterm-256color
  06: SHELL=42sh
  07: MYVIMRC=/Users/vcombey/.vimrc
  08: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  09: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  10: TERM_PROGRAM_VERSION=3.1.2
  11: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/002-not-a-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file name as first argument with the builtin `cd` results in a Shell termination with a failure exit status.[0m

  Before test:
[38;5;239m  01: touch "./not_a_directory"[0m

  STDIN:
[38;5;239m  01: cd not_a_directory[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: Not a directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/004-permission-denied-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a directory without any permission as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"
  03: mkdir -m 0 "./permission_denied"[0m

  STDIN:
[38;5;239m  01: cd permission_denied[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: Permission denied[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/005-too-many-symbolic-links-encountered[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1
  02: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: cd: Out of streams resources[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/006-too-many-symbolic-links-encountered-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in a Shell termination with a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: Out of streams resources[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/008-no-such-file-or-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-existing path as first argument with the builtin `cd` results in a Shell termination with an error status code.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file_or_directory"[0m

  STDIN:
[38;5;239m  01: cd no_such_file_or_directory[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: No such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/010-no-such-file-or-directory-symlink-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link that targets to a non-existing directory with the builtin `cd`  results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./enoent_symlink" "./enoent_directory"
  02: ln -s "./enoent_directory" "./enoent_symlink"[0m

  STDIN:
[38;5;239m  01: cd ./enoent_symlink[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: cd: No such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/options/001-not-following-links[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using symbolic links twice with the builtin `cd` and the option `-P` results in a correct environment variable PWD. The option `-P` makes the Shell to resolve symbolic links.[0m

  Before test:
[38;5;239m  01: rm -fr "./sub_directory_link" "./sub_directory"
  02: mkdir -p "./sub_directory/sub_sub_directory"
  03: ln -s "./sub_directory" "./sub_directory_link"
  04: ln -s "./sub_sub_directory" "./sub_directory/sub_sub_directory_link"[0m

  STDIN:
[38;5;239m  01: cd -P sub_directory_link
  02: cd -P sub_sub_directory_link
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD=/Users/vcombey/42ShellTester/tmp/sub_directory/sub_sub_directory`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.wDq9zXDz4T/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.DL3OyDBwqN/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:7BA2A6A7-6402-48E1-97BF-683DE2B6CC37
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: cd: No such file or directory
  02: cd: No such file or directory[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/003-ignore-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the option `-i` with the builtin `env` results in an empty environment sent to the given command.[0m

  STDIN:
[38;5;239m  01: env -i ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 0`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/005-set-variables[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `env` can modify or set multiple environment variables before executing the given command.[0m

  Before test:
[38;5;239m  01: export VARTEST1="OLD_VALUE"[0m

  STDIN:
[38;5;239m  01: env VARTEST1=TOKEN201711151905_1 VARTEST2=TOKEN201711151905_2 VARTEST3=TOKEN201711151905_3 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST1=TOKEN201711151905_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST2=TOKEN201711151905_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST3=TOKEN201711151905_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==56413==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000080480 at pc 0x00010a204cfd bp 0x7fff55a106c0 sp 0x7fff55a106b8
  03: READ of size 8 at 0x604000080480 thread T0
  04:     #0 0x10a204cfc in local_get_node local_get.c:11
  05:     #1 0x10a2049e1 in local_add_change_from_key_value local_add.c:42
  06:     #2 0x10a2058f1 in env_change_value env_add.c:50
  07:     #3 0x10a205ab4 in env_add_change env_add.c:61
  08:     #4 0x10a205bb2 in env_add_var_from_string env_add.c:68
  09:     #5 0x10a1f30b0 in build_new_env env.c:59
  10:     #6 0x10a1f2cd0 in builtin_env env.c:91
  11:     #7 0x10a1f3838 in exec_builtin exec_builtin.c:46
  12:     #8 0x10a20ff5a in exec_simple_command exec_simple_command.c:147
  13:     #9 0x10a20bae5 in exec exec.c:39
  14:     #10 0x10a20cb94 in exec_command exec_command.c:20
  15:     #11 0x10a20bae5 in exec exec.c:39
  16:     #12 0x10a20e2a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  17:     #13 0x10a20bae5 in exec exec.c:39
  18:     #14 0x10a20ecfe in exec_pipeline exec_pipeline.c:84
  19:     #15 0x10a20bae5 in exec exec.c:39
  20:     #16 0x10a20bc31 in exec_and_or exec_and_or.c:13
  21:     #17 0x10a20bae5 in exec exec.c:39
  22:     #18 0x10a20cf97 in exec_complete_command exec_complete_command.c:45
  23:     #19 0x10a20bae5 in exec exec.c:39
  24:     #20 0x10a20d251 in exec_complete_commands exec_complete_commands.c:10
  25:     #21 0x10a20bae5 in exec exec.c:39
  26:     #22 0x10a20eec9 in exec_program exec_program.c:10
  27:     #23 0x10a20bae5 in exec exec.c:39
  28:     #24 0x10a209f55 in exec_main_loop lex_and_parse.c:18
  29:     #25 0x10a20a739 in lex_and_parse lex_and_parse.c:75
  30:     #26 0x10a20af5e in main_loop main_loop.c:72
  31:     #27 0x10a1efd6b in main main.c:82
  32:     #28 0x7fffc0cac234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: 0x604000080480 is located 0 bytes to the right of 48-byte region [0x604000080450,0x604000080480)
  35: allocated by thread T0 here:
  36:     #0 0x10a3e3ffc in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64+0x55ffc)
  37:     #1 0x10a25b97f in palloc palloc.c:16
  38:     #2 0x10a2534eb in ft_arrayjoin ft_arrayjoin.c:14
  39:     #3 0x10a2535cf in ft_arrayjoin_free ft_arrayjoin.c:33
  40:     #4 0x10a20fdd6 in exec_simple_command exec_simple_command.c:137
  41:     #5 0x10a20bae5 in exec exec.c:39
  42:     #6 0x10a20cb94 in exec_command exec_command.c:20
  43:     #7 0x10a20bae5 in exec exec.c:39
  44:     #8 0x10a20e2a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  45:     #9 0x10a20bae5 in exec exec.c:39
  46:     #10 0x10a20ecfe in exec_pipeline exec_pipeline.c:84
  47:     #11 0x10a20bae5 in exec exec.c:39
  48:     #12 0x10a20bc31 in exec_and_or exec_and_or.c:13
  49:     #13 0x10a20bae5 in exec exec.c:39
  50:     #14 0x10a20cf97 in exec_complete_command exec_complete_command.c:45
  51:     #15 0x10a20bae5 in exec exec.c:39
  52:     #16 0x10a20d251 in exec_complete_commands exec_complete_commands.c:10
  53:     #17 0x10a20bae5 in exec exec.c:39
  54:     #18 0x10a20eec9 in exec_program exec_program.c:10
  55:     #19 0x10a20bae5 in exec exec.c:39
  56:     #20 0x10a209f55 in exec_main_loop lex_and_parse.c:18
  57:     #21 0x10a20a739 in lex_and_parse lex_and_parse.c:75
  58:     #22 0x10a20af5e in main_loop main_loop.c:72
  59:     #23 0x10a1efd6b in main main.c:82
  60:     #24 0x7fffc0cac234 in start (libdyld.dylib:x86_64+0x5234)
  61: 
  62: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:11 in local_get_node
  63: Shadow bytes around the buggy address:
  64:   0x1c0800010040: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  65:   0x1c0800010050: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  66:   0x1c0800010060: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  67:   0x1c0800010070: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  68:   0x1c0800010080: fa fa fd fd fd fd fd fa fa fa 00 00 00 00 00 00
  69: =>0x1c0800010090:[fa]fa 00 00 00 00 00 01 fa fa 00 00 00 00 04 fa
  70:   0x1c08000100a0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 07 fa
  71:   0x1c08000100b0: fa fa 00 00 00 00 00 04 fa fa 00 00 00 00 02 fa
  72:   0x1c08000100c0: fa fa 00 00 00 00 05 fa fa fa 00 00 00 00 02 fa
  73:   0x1c08000100d0: fa fa 00 00 00 00 06 fa fa fa fa fa fa fa fa fa
  74:   0x1c08000100e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  75: Shadow byte legend (one shadow byte represents 8 application bytes):
  76:   Addressable:           00
  77:   Partially addressable: 01 02 03 04 05 06 07 
  78:   Heap left redzone:       fa
  79:   Freed heap region:       fd
  80:   Stack left redzone:      f1
  81:   Stack mid redzone:       f2
  82:   Stack right redzone:     f3
  83:   Stack after return:      f5
  84:   Stack use after scope:   f8
  85:   Global redzone:          f9
  86:   Global init order:       f6
  87:   Poisoned by user:        f7
  88:   Container overflow:      fc
  89:   Array cookie:            ac
  90:   Intra object redzone:    bb
  91:   ASan internal:           fe
  92:   Left alloca redzone:     ca
  93:   Right alloca redzone:    cb
  94: ==56413==ABORTING
  95: ./lib/main.sh: line 102: 56413 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/001-command-not-found[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid binary as argument results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./invalid_binary"[0m

  STDIN:
[38;5;239m  01: env ./invalid_binary[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/002-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid option results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f -- "-w"[0m

  STDIN:
[38;5;239m  01: env -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/multiple-options/001-ignore-environment-and-set-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that `env -i` works if we use a second argument to set an environment variable, we are also checking if this command unset environments variables for a given binary.[0m

  STDIN:
[38;5;239m  01: env -i TESTVARIABLE=TOKEN201711151905 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVARIABLE=TOKEN201711151905`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 1`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==56800==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60400007e3b8 at pc 0x000108f0ecfd bp 0x7fff56d066c0 sp 0x7fff56d066b8
  03: READ of size 8 at 0x60400007e3b8 thread T0
  04:     #0 0x108f0ecfc in local_get_node local_get.c:11
  05:     #1 0x108f0ebb4 in local_add_change_from_string local_add.c:61
  06:     #2 0x108f0f67b in env_add_var env_add.c:28
  07:     #3 0x108f0fa4c in env_add_change env_add.c:59
  08:     #4 0x108f0fbb2 in env_add_var_from_string env_add.c:68
  09:     #5 0x108efd0b0 in build_new_env env.c:59
  10:     #6 0x108efccd0 in builtin_env env.c:91
  11:     #7 0x108efd838 in exec_builtin exec_builtin.c:46
  12:     #8 0x108f19f5a in exec_simple_command exec_simple_command.c:147
  13:     #9 0x108f15ae5 in exec exec.c:39
  14:     #10 0x108f16b94 in exec_command exec_command.c:20
  15:     #11 0x108f15ae5 in exec exec.c:39
  16:     #12 0x108f182a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  17:     #13 0x108f15ae5 in exec exec.c:39
  18:     #14 0x108f18cfe in exec_pipeline exec_pipeline.c:84
  19:     #15 0x108f15ae5 in exec exec.c:39
  20:     #16 0x108f15c31 in exec_and_or exec_and_or.c:13
  21:     #17 0x108f15ae5 in exec exec.c:39
  22:     #18 0x108f16f97 in exec_complete_command exec_complete_command.c:45
  23:     #19 0x108f15ae5 in exec exec.c:39
  24:     #20 0x108f17251 in exec_complete_commands exec_complete_commands.c:10
  25:     #21 0x108f15ae5 in exec exec.c:39
  26:     #22 0x108f18ec9 in exec_program exec_program.c:10
  27:     #23 0x108f15ae5 in exec exec.c:39
  28:     #24 0x108f13f55 in exec_main_loop lex_and_parse.c:18
  29:     #25 0x108f14739 in lex_and_parse lex_and_parse.c:75
  30:     #26 0x108f14f5e in main_loop main_loop.c:72
  31:     #27 0x108ef9d6b in main main.c:82
  32:     #28 0x7fffc0cac234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: 0x60400007e3b8 is located 0 bytes to the right of 40-byte region [0x60400007e390,0x60400007e3b8)
  35: allocated by thread T0 here:
  36:     #0 0x1090ecffc in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64+0x55ffc)
  37:     #1 0x108f6597f in palloc palloc.c:16
  38:     #2 0x108f5d4eb in ft_arrayjoin ft_arrayjoin.c:14
  39:     #3 0x108f5d5cf in ft_arrayjoin_free ft_arrayjoin.c:33
  40:     #4 0x108f19dd6 in exec_simple_command exec_simple_command.c:137
  41:     #5 0x108f15ae5 in exec exec.c:39
  42:     #6 0x108f16b94 in exec_command exec_command.c:20
  43:     #7 0x108f15ae5 in exec exec.c:39
  44:     #8 0x108f182a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  45:     #9 0x108f15ae5 in exec exec.c:39
  46:     #10 0x108f18cfe in exec_pipeline exec_pipeline.c:84
  47:     #11 0x108f15ae5 in exec exec.c:39
  48:     #12 0x108f15c31 in exec_and_or exec_and_or.c:13
  49:     #13 0x108f15ae5 in exec exec.c:39
  50:     #14 0x108f16f97 in exec_complete_command exec_complete_command.c:45
  51:     #15 0x108f15ae5 in exec exec.c:39
  52:     #16 0x108f17251 in exec_complete_commands exec_complete_commands.c:10
  53:     #17 0x108f15ae5 in exec exec.c:39
  54:     #18 0x108f18ec9 in exec_program exec_program.c:10
  55:     #19 0x108f15ae5 in exec exec.c:39
  56:     #20 0x108f13f55 in exec_main_loop lex_and_parse.c:18
  57:     #21 0x108f14739 in lex_and_parse lex_and_parse.c:75
  58:     #22 0x108f14f5e in main_loop main_loop.c:72
  59:     #23 0x108ef9d6b in main main.c:82
  60:     #24 0x7fffc0cac234 in start (libdyld.dylib:x86_64+0x5234)
  61: 
  62: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:11 in local_get_node
  63: Shadow bytes around the buggy address:
  64:   0x1c080000fc20: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  65:   0x1c080000fc30: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  66:   0x1c080000fc40: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  67:   0x1c080000fc50: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  68:   0x1c080000fc60: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  69: =>0x1c080000fc70: fa fa 00 00 00 00 00[fa]fa fa fd fd fd fd fd fd
  70:   0x1c080000fc80: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  71:   0x1c080000fc90: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fa
  72:   0x1c080000fca0: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  73:   0x1c080000fcb0: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  74:   0x1c080000fcc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  75: Shadow byte legend (one shadow byte represents 8 application bytes):
  76:   Addressable:           00
  77:   Partially addressable: 01 02 03 04 05 06 07 
  78:   Heap left redzone:       fa
  79:   Freed heap region:       fd
  80:   Stack left redzone:      f1
  81:   Stack mid redzone:       f2
  82:   Stack right redzone:     f3
  83:   Stack after return:      f5
  84:   Stack use after scope:   f8
  85:   Global redzone:          f9
  86:   Global init order:       f6
  87:   Poisoned by user:        f7
  88:   Container overflow:      fc
  89:   Array cookie:            ac
  90:   Intra object redzone:    bb
  91:   ASan internal:           fe
  92:   Left alloca redzone:     ca
  93:   Right alloca redzone:    cb
  94: ==56800==ABORTING
  95: ./lib/main.sh: line 102: 56800 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/002-status-passed-as-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a number as first argument with the builtin `exit` results in the Shell termination with given number as exit status.[0m

  STDIN:
[38;5;239m  01: exit 42[0m

  STDOUT:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: tcsetattr error[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/003-status-of-last-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `exit` without any argument results in a Shell termination and the exit status of the previous command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: exit[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/001-too-many-args[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong number of arguments with the builtin `exit` does not result in the Shell termination but an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit 21 42
  02: ./write_on_stdout TOKEN201711151905[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711151905`[0m
[38;5;239m  01: TOKEN201711151905[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Tt]oo many arguments|[Aa]rgument list too long)`[0m
[38;5;239m  01: exit: to many arguments[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/002-non-numeric-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-numeric argument with the builtin `exit` results in the Shell termination and an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit abc
  02: ./write_on_stdout TOKEN201711151905[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711151905`[0m
[38;5;239m  01: TOKEN201711151905[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]umeric argument required`[0m
[38;5;239m  01: exit: numeric argument required[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/004-invalid-identifier[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong variable name with the builtin `setenv` (or `export`) results in error.[0m

  STDIN:
[38;5;239m  01: setenv 42
  02: export 42[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..[0m

Total tests: 281
Total failed tests: 82
Total pending tests: 3
