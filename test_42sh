[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m                                                                                                                                                                                                                                                                              

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/001-close-stdin[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the closing operator `&-` within the STDIN redirection `<` results in a closed standard input, so that `read(2)` results in a read error.[0m

  Before test:
[38;5;239m  01: rm -f ./read_on_stdin
  02: gcc -Wall -Werror -Wextra "/Users/vcombey/42ShellTester/support/read-on-stdin/main.c" -o ./read_on_stdin[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `STDIN READ ERROR$`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/002-filename[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711172014_LINE_1" > simple_text_file
  02: echo "TOKEN201711172014_LINE_2" >> simple_text_file
  03: echo "TOKEN201711172014_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/003-filename-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.
  The file path is specified in a separated field.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711172014_LINE_1" > simple_text_file
  02: echo "TOKEN201711172014_LINE_2" >> simple_text_file
  03: echo "TOKEN201711172014_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin < 	 simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/004-absolute-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using an absolute path to a file within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201711172014_LINE_1" > simple_text_file
  02: echo "TOKEN201711172014_LINE_2" >> simple_text_file
  03: echo "TOKEN201711172014_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin </Users/vcombey/42ShellTester/tmp/simple_text_file[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_LINE_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_LINE_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_LINE_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/002-append-stdout-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the standard output is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711172014_first" >append_file_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_stdout TOKEN201711172014_stderr 1>>append_file_stdout[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_stderr`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711172014_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711172014_stdout`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/003-append-stderr-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the standard error is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711172014_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_stdout TOKEN201711172014_stderr 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_stderr`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711172014_first`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711172014_stderr`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/multiple/001-append-twice-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, each output is appended to different files.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201711172014_stdout_first" >append_file_stdout
  02: ./write_on_stdout "TOKEN201711172014_stderr_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_stdout_second TOKEN201711172014_stderr_second 1>>append_file_stdout 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_stdout_second`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_stderr_second`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711172014_stdout_first$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stdout` matching_regex `TOKEN201711172014_stdout_second$`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711172014_stderr_first$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `append_file_stderr` matching_regex `TOKEN201711172014_stderr_second$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/002-close-stdout[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard output has the same behavior as redirecting to `/dev/null` (e.g. `ls 1>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_stdout TOKEN201711172014_stderr 1>&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_stderr`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/003-close-stderr[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard error has the same behavior as redirecting to `/dev/null` (e.g. `ls 2>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_stdout TOKEN201711172014_stderr 2>&-[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_stderr`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/001-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A different right redirection may be specified for each output.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr"
  02: rm -f "new_file_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_1 TOKEN201711172014_2 1>new_file_stdout 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stdout` matching_regex `TOKEN201711172014_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` matching_regex `TOKEN201711172014_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/002-together-stdout-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard output is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_1 TOKEN201711172014_2 1>new_file_stderr_and_stdout 2>&1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711172014_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711172014_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/003-together-stderr-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard error is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_1 TOKEN201711172014_2 2>new_file_stderr_and_stdout 1>&2[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711172014_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711172014_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/004-together[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr_and_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_1 TOKEN201711172014_2 &>new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  01: TOKEN201711172014_1[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  01: TOKEN201711172014_2[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711172014_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711172014_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/005-together-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.
  In this test, we specify the file name in a separate field.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_1 TOKEN201711172014_2 &>	  	new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  01: TOKEN201711172014_1[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711172014_2`[0m
[38;5;239m  01: TOKEN201711172014_2[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711172014_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201711172014_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/stderr/001-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that redirecting the standard error STDERR to a file `2>` works. In this test, the binary writes a token on each standard and error output, so that only the STDOUT is outputted and STDERR is written in a file `new_file_stderr`.[0m

  Before test:
[38;5;239m  01: rm -f "./new_file_stderr"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201711172014_STDOUT TOKEN201711172014_STDERR 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_STDERR`[0m
[38;5;239m  01: 42sh: parse error near `2'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` matching_regex `TOKEN201711172014_STDERR`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr` with_nb_of_lines 1[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/stdout/001-with-explicit-fd[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if '1>' redirect STDIN to a file.
  We are using echo with one argument. The output should NOT return anything on the standard output.[0m

  Before test:
[38;5;239m  01: rm -f new_file[0m

  STDIN:
[38;5;239m  01: /bin/echo TOKEN1 1>new_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex TOKEN1[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: 42sh: parse error near `1'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file new_file matching_regex TOKEN1[0m
[31m[38;5;160m  FAILURE    expected_to create_file new_file with_nb_of_lines 1[0m

----------------------------------------------------------------

[37;1m21sh/separators/semicolon/003-parse-error-empty-inline-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the simicolon separator `;` with empty commands results in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711172014 ; ; ./exit_with_status 42[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `;'[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `42`[0m
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/005-export-empty-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment, but can be displayed with the builtin `export`.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711172014
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  08: TERM_PROGRAM_VERSION=3.1.5
  09: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  12: USER=vcombey
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  14: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  15: PAGER=less
  16: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  17: DOTFILES=/Users/vcombey/.dotfiles
  18: LSCOLORS=HxBxcxdxbxegedabagacad
  19: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  20: ZSHRC=/Users/vcombey/.zshrc
  21: PWD=/Users/vcombey/42ShellTester/tmp
  22: EDITOR=vim
  23: BASE16_THEME=base16-nord
  24: LANG=en_US.UTF-8
  25: ITERM_PROFILE=Default
  26: XPC_FLAGS=0x0
  27: XPC_SERVICE_NAME=0
  28: INSTALL_ROOT=/Users/vcombey/.sbcl
  29: SHLVL=3
  30: HOME=/Users/vcombey
  31: COLORFGBG=7;0
  32: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  33: LESS=-R
  34: LOGNAME=vcombey
  35: VISUAL=vim
  36: LC_CTYPE=en_US.UTF-8
  37: COLORTERM=truecolor
  38: OLDPWD=/Users/vcombey/42ShellTester
  39: _=/Users/vcombey/42/42sh/42sh
  40: HISTFILE=/Users/vcombey/.42sh_history[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/001-invalid-identifier-1[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export 42=TOKEN201711172014[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: 42: Wrong assignement :: key cannot be fully numeric or contain reserved symbols[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/002-invalid-identifier-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export .=TOKEN201711172014[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/003-illegal-option[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with an illegal option results in an error and a failure exit status.[0m

  STDIN:
[38;5;239m  01: export -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: Wrong option -w[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/001-export-and-tmp-env-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added variable into the exported list.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711172014_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_NAME=TOKEN201711172014_VALUE export TOKEN201711172014_NAME
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_NAME=["]?TOKEN201711172014_VALUE["]?`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: 29265 Segmentation fault: 11  /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/002-export-and-tmp-env-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711172014_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_NAME=TOKEN201711172014_VALUE export TOKEN201711172014_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_NAME=TOKEN201711172014_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: 29379 Segmentation fault: 11  /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/002-export-p-param-and-token-should-add-local-var-only-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if export with -p option + token , add the variable into export list but not in env list. And don't display the export variable on stdout.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711172014_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711172014_NAME
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_NAME`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  08: TERM_PROGRAM_VERSION=3.1.5
  09: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  12: USER=vcombey
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  14: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  15: PAGER=less
  16: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  17: DOTFILES=/Users/vcombey/.dotfiles
  18: LSCOLORS=HxBxcxdxbxegedabagacad
  19: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  20: ZSHRC=/Users/vcombey/.zshrc
  21: PWD=/Users/vcombey/42ShellTester/tmp
  22: EDITOR=vim
  23: BASE16_THEME=base16-nord
  24: LANG=en_US.UTF-8
  25: ITERM_PROFILE=Default
  26: XPC_FLAGS=0x0
  27: XPC_SERVICE_NAME=0
  28: INSTALL_ROOT=/Users/vcombey/.sbcl
  29: SHLVL=3
  30: HOME=/Users/vcombey
  31: COLORFGBG=7;0
  32: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  33: LESS=-R
  34: LOGNAME=vcombey
  35: VISUAL=vim
  36: LC_CTYPE=en_US.UTF-8
  37: COLORTERM=truecolor
  38: OLDPWD=/Users/vcombey/42ShellTester
  39: _=/Users/vcombey/42/42sh/42sh
  40: HISTFILE=/Users/vcombey/.42sh_history
  41: TERM_PROGRAM=iTerm.app
  42: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  43: TERM=xterm-256color
  44: SHELL=42sh
  45: MYVIMRC=/Users/vcombey/.vimrc
  46: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  47: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  48: TERM_PROGRAM_VERSION=3.1.5
  49: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  50: ZSH=/Users/vcombey/.oh-my-zsh
  51: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  52: USER=vcombey
  53: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  54: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  55: PAGER=less
  56: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  57: DOTFILES=/Users/vcombey/.dotfiles
  58: LSCOLORS=HxBxcxdxbxegedabagacad
  59: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  60: ZSHRC=/Users/vcombey/.zshrc
  61: PWD=/Users/vcombey/42ShellTester/tmp
  62: EDITOR=vim
  63: BASE16_THEME=base16-nord
  64: LANG=en_US.UTF-8
  65: ITERM_PROFILE=Default
  66: XPC_FLAGS=0x0
  67: XPC_SERVICE_NAME=0
  68: INSTALL_ROOT=/Users/vcombey/.sbcl
  69: SHLVL=3
  70: HOME=/Users/vcombey
  71: COLORFGBG=7;0
  72: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  73: LESS=-R
  74: LOGNAME=vcombey
  75: VISUAL=vim
  76: LC_CTYPE=en_US.UTF-8
  77: COLORTERM=truecolor
  78: OLDPWD=/Users/vcombey/42ShellTester
  79: _=/Users/vcombey/42/42sh/42sh
  80: HISTFILE=/Users/vcombey/.42sh_history[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/004-export-n-param[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that using the builtin `export` with option `-n` results in a removed environment variable.[0m

  Before test:
[38;5;239m  01: export TOKEN201711172014_NAME=TOKEN201711172014_VALUE[0m

  STDIN:
[38;5;239m  01: export -n TOKEN201711172014_NAME
  02: export
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711172014_NAME`[0m
[38;5;239m  01: TERM_PROGRAM=iTerm.app
  02: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: MYVIMRC=/Users/vcombey/.vimrc
  06: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  07: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  08: TERM_PROGRAM_VERSION=3.1.5
  09: OLDPWD=/Users/vcombey/42ShellTester
  10: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: TOKEN201711172014_NAME=TOKEN201711172014_VALUE
  39: COLORTERM=truecolor
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: ------------------------------
  43: TERM_PROGRAM=iTerm.app
  44: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  45: TERM=xterm-256color
  46: SHELL=42sh
  47: MYVIMRC=/Users/vcombey/.vimrc
  48: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  49: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  50: TERM_PROGRAM_VERSION=3.1.5
  51: OLDPWD=/Users/vcombey/42ShellTester
  52: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  53: ZSH=/Users/vcombey/.oh-my-zsh
  54: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  55: USER=vcombey
  56: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  57: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  58: PAGER=less
  59: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  60: DOTFILES=/Users/vcombey/.dotfiles
  61: LSCOLORS=HxBxcxdxbxegedabagacad
  62: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  63: ZSHRC=/Users/vcombey/.zshrc
  64: PWD=/Users/vcombey/42ShellTester/tmp
  65: EDITOR=vim
  66: BASE16_THEME=base16-nord
  67: LANG=en_US.UTF-8
  68: ITERM_PROFILE=Default
  69: XPC_FLAGS=0x0
  70: XPC_SERVICE_NAME=0
  71: INSTALL_ROOT=/Users/vcombey/.sbcl
  72: SHLVL=3
  73: HOME=/Users/vcombey
  74: COLORFGBG=7;0
  75: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  76: LESS=-R
  77: LOGNAME=vcombey
  78: VISUAL=vim
  79: LC_CTYPE=en_US.UTF-8
  80: TOKEN201711172014_NAME=TOKEN201711172014_VALUE
  81: COLORTERM=truecolor
  82: _=/Users/vcombey/42/42sh/42sh
  83: HISTFILE=/Users/vcombey/.42sh_history
  84: ------------------------------
  85: TOTAL ENVIRONMENT VARIABLES: 41[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: Wrong option -n[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping braces does not result in an expansion process.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \{1..2} {1\..2} {1.\.2} {1..2\}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[{]1..2}@[{]1..2}@[{]1..2}@[{]1..2}@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/001-it-does-not-expand-brackets[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping brackets does not result in an expansion process.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout \[abc] [abc\] \[abc\][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[[]abc]@[[]abc]@[[]abc]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/002-escaped-inversion-mark[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an inversion mark `!` or `^` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '!' '^'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\!abc]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\^abc][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `!@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[\^]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[1;33m  WARNING    might match_regex `^!@a@b@c@$`[0m
[31m[1;33m  WARNING    might match_regex `^[\^]@a@b@c@$`[0m
[38;5;239m  01: [!abc]@
  02: [^abc]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/003-it-takes-escaped-bracket-as-pattern-character[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a closing bracket ']' may be escaped in a backet expansion pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' ']'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\]def]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\]def]
  03: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\]def]
  04: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\\\]def][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@` 4 times[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@b@c@d@e@f@$`[0m
[38;5;239m  01: [abc]def]@
  02: [abc\]def]@
  03: [abc\\]def]@
  04: [abc\\\]def]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/010-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..z}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@.+@.?@.+@.+@_@.+@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@$`[0m
[38;5;239m  01: A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@[@]@^@_@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/001-range-and-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with a range and 2 characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '1' '2' '3' 'a' 'b' 'z' 'C' '-' '[a-z-2]' 'a-z-2'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z-2][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `-@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a-z-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-z-2@`[0m
[31m[1;33m  WARNING    might match_regex `^-@2@a@b@z@$`[0m
[38;5;239m  01: [a-z-2]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/002-reverse-range-and-chars[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with 2 patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a4' 'a3' 'a2' 'a42' 'a[42]' 'z4' 'z3' 'z2' 'z42' 'z[42]' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-y][42]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-y][42][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `42@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z[[]42]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]42]@`[0m
[31m[1;33m  WARNING    might match_regex `^42@z2@z4@$`[0m
[38;5;239m  01: [!a-y][42]@
  02: [^a-y][42]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/003-reverse-multi-hard[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check how the value inside multiple brackets are parsed with bracket as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '][' 'a[' '1['[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!]az][[]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^]az][[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `][[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]@`[0m
[31m[1;33m  WARNING    might match_regex `^1[[]@$`[0m
[38;5;239m  01: [!]az][[]@
  02: [^]az][[]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/004-simple-bracket+char+range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to control if 2 patterns splited by a minus characters can be match.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a-0' 'a-1' 'a-2' 'b-0' 'b-1' 'b-2' 'Z-0' 'Z-1' 'Z-2' 'a1' 'Z9' 'D4'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [aZ]-[1-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a-2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `D4@`[0m
[31m[1;33m  WARNING    might match_regex `^Z-1@Z-2@a-1@a-2@$`[0m
[38;5;239m  01: [aZ]-[1-9]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/001-simple-opposit-match[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' '1' 'Z' 'd' 'e' 'f' 'def'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a1Z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a1Z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def@`[0m
[31m[1;33m  WARNING    might match_regex `^d@e@f@$`[0m
[38;5;239m  01: [!a1Z]@
  02: [^a1Z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/002-simple-opposite-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'z' '1' '2' '3' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `42@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@3@$`[0m
[38;5;239m  01: [!a-z]@
  02: [^a-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/001-alpha-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[a-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'f' 'z' 'A' '1' '[a-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `A@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@f@z@$`[0m
[38;5;239m  01: [a-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/002-numeric-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[0-9]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '4' '2' '1' '9' 'a' 'C' '[0-9]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [0-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]0-9]@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@4@9@$`[0m
[38;5;239m  01: [0-9]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/003-ascii-range-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the bracket expansion works with the following pattern []-z].
  One test use the following range which is the default range for bash:
  < > , ; : ! ' " ( ) [ ] { } @ $ \ # % 1 2 3 4 5 6 7 8 9 a A b B c C d D e E f F g G h H i I j J k K l L m M n N o O p P q Q r R s S t T u U v V w W x X y Y z
  The other use the ascii value, which does make more sense.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' '[' ']' '[]-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@c@$`[0m
[38;5;239m  01: []-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/004-ascii-range-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[1-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' ']' '[' '[1-z]' '1-z' '-'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [1-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `B@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1-z@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]1-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^2@B@Z@[[]@]@a@c@$`[0m
[38;5;239m  01: [1-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/001-simple-list[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a simple list of characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '[bca]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [bca][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]bca]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@b@c@$`[0m
[38;5;239m  01: [bca]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/002-multi-bracket[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with multiple brackets patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch "TOKEN201711172014abcd" "TOKEN201711172014abc" "TOKEN201711172014abdc" "TOKEN201711172014b" "TOKEN201711172014" "TOKEN201711172014\[a]b\[c]\[d]"[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout TOKEN201711172014[a]b[c][d][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014abcd@$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014abc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014abdc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014b@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711172014[[]a]b[[]c][[]d]@`[0m
[38;5;239m  01: TOKEN201711172014[a]b[c][d]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/003-brackets-as-pattern[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` and a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' ']' 'a' 'Z' '[][]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [][][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@]@$`[0m
[38;5;239m  01: [][]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/004-multi-bracket-multi-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to match a file name which contain a bracket as first character.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 21 23 24 25 26 27 28 29 ']' '[' '[12][34]' '1234'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [12][34][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `13@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `14@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `23@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `24@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `0[0-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]12][[]34]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1234@`[0m
[31m[1;33m  WARNING    might match_regex `^13@14@23@24@$`[0m
[38;5;239m  01: [12][34]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/001-single-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a single character as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' '[a]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@$`[0m
[38;5;239m  01: [a]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/002-closing-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch ']' '[]]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@$`[0m
[38;5;239m  01: []]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/003-opening-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' '[[]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@$`[0m
[38;5;239m  01: [[]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/star[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that globing works with star as patern and does not match '.' and '..'.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '1' '2' '3'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout *[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `3@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `.@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `..@`[0m
[38;5;239m  01: 1@2@3@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/004-existing-variable-in-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711172014_NAME=TOKEN201711172014_VALUE_OLD"[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_NAME=TOKEN201711172014_VALUE_NEW
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_NAME=TOKEN201711172014_VALUE_NEW$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `^TOKEN201711172014_NAME=TOKEN201711172014_VALUE_OLD$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: OLDPWD=/Users/vcombey/42ShellTester
  11: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: TOKEN201711172014_NAME=TOKEN201711172014_VALUE_OLD
  40: COLORTERM=truecolor
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: ------------------------------
  44: TOTAL ENVIRONMENT VARIABLES: 41[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/005-existing-variable-in-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711172014_NAME=TOKEN201711172014_VALUE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_NAME=$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `^TOKEN201711172014_NAME=TOKEN201711172014_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: OLDPWD=/Users/vcombey/42ShellTester
  11: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: TOKEN201711172014_NAME=TOKEN201711172014_VALUE
  40: COLORTERM=truecolor
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: ------------------------------
  44: TOTAL ENVIRONMENT VARIABLES: 41[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/008-multiple-declaration-with-same-name[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring the same variable several times in the same command line does work and does not result in error.[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_NAME=TOKEN201711172014_VALUE1 TOKEN201711172014_NAME=TOKEN201711172014_VALUE2 TOKEN201711172014_NAME=TOKEN201711172014_VALUE3
  02: ./write_on_stdout $TOKEN201711172014_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711172014_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711172014_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_VALUE3$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: 39087 Segmentation fault: 11  /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/009-last-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the special variable `$?` may be expanded with the last exit status.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: ./write_on_stderr $?[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42$`[0m
[38;5;239m  01: $?[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/inline-environment-variable/001-local-variable-shouldnt-be-set[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary does not result in local variable declaration but a modified environment for the command.[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_NAME=TOKEN201711172014_VALUE ./display_env
  02: ./write_on_stderr $TOKEN201711172014[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_NAME=TOKEN201711172014_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_VALUE`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/001-truncating[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711172014_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_NAME=TOKEN201711172014_FILENAME
  02: ./write_on_stdout TOKEN201711172014_VALUE > $TOKEN201711172014_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711172014_FILENAME` matching_regex `^TOKEN201711172014_VALUE$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/002-appending[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711172014_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_NAME=TOKEN201711172014_FILENAME
  02: ./write_on_stdout TOKEN201711172014_VALUE1 >> $TOKEN201711172014_NAME
  03: ./write_on_stdout TOKEN201711172014_VALUE2 >> $TOKEN201711172014_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711172014_FILENAME` matching_regex `^TOKEN201711172014_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711172014_FILENAME` matching_regex `^TOKEN201711172014_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/003-reading[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711172014_FILENAME"
  02: echo "TOKEN201711172014_VALUE" > "TOKEN201711172014_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_NAME=TOKEN201711172014_FILENAME
  02: ./read_on_stdin < $TOKEN201711172014_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_VALUE@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/004-multiline-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "
  02: TOKEN201711172014_FIRST
  03: TOKEN201711172014_SECOND
  04: TOKEN201711172014_THIRD
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_SECOND$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_THIRD$`[0m
[38;5;239m  01: TOKEN201711172014_FIRSTTOKEN201711172014_SECONDTOKEN201711172014_THIRD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "
  02: "TOKEN201711172014"_FIRST
  03: TOKEN201711172014_SECOND" "TOKEN201711172014_THIRD
  04: TOKEN201711172014_FOU"RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_SECOND$`[0m
[38;5;239m  01: TOKEN201711172014_FIRSTTOKEN201711172014_SECOND[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_FOURTH$`[0m
[38;5;239m  01: TOKEN201711172014_THIRDTOKEN201711172014_FOURTH[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/001-escape-double-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711172014\"TOKEN201711172014[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014"TOKEN201711172014`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/002-escape-double-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711172014 \" TOKEN201711172014"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014 ` TOKEN201711172014$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/003-escape-double-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "\""[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^"$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/004-it-results-in-error[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using backslash `\\` before the closing double-quote `"` does result in syntax error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711172014\"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711172014$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/005-it-does-not-escape-double-quote[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol double-quote `"` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\"TOKEN201711172014\\"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\TOKEN201711172014\$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}"{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}"{1..2}"{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}" {1..2} "{1..2}" "{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc"def"gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `bc`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `gh`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/variable-expansion/001-expansion-enabled[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion is processed within double quotes.[0m

  Before test:
[38;5;239m  01: export "TOKEN=TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/001-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "ABCD'EFG"HI'J"KL"'MNO'P"' Q"RS'T'U''"VW'X"Y'Z[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCD'EFGHIJ"KL"MNOP`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `QRS'T'U''VWX"YZ`[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/002-multiline[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony in multiline mode.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711172014"_FIR'ST
  03: TOKEN201711172014_SECOND" 'TOKEN201711172014_TH"IRD
  04: TOKEN201711172014_FOU'RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_FIR'ST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_SECOND$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_TH"IRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_FOURTH$`[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}'{1..2}'{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [""'a'""][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `bc`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `gh`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/variable-expansion/001-it-does-not-expand-in-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check if a local variable is display correctly inside simple and double quote.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711172014_NAME=TOKEN201711172014_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN201711172014_NAME"$TOKEN201711172014_NAME'$TOKEN201711172014_NAME'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_VALUETOKEN201711172014_VALUE[$]TOKEN201711172014_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/001-it-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the symbol simple quote `'` does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout 'SIMPLE TEXT WITH SPACES'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `SIMPLE TEXT WITH SPACES`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A'B'CDEF'GHIJ''KLMNO' 'P'QRS'T''U''V'WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: ./lib/main.sh: line 102: /Users/vcombey/42/42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/004-multiline-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '
  02: TOKEN201711172014_FIRST
  03: TOKEN201711172014_SECOND
  04: TOKEN201711172014_THIRD
  05: '[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_SECOND$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_THIRD$`[0m
[38;5;239m  01: TOKEN201711172014_FIRSTTOKEN201711172014_SECONDTOKEN201711172014_THIRD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711172014'_FIRST
  03: TOKEN201711172014_SECOND' 'TOKEN201711172014_THIRD
  04: TOKEN201711172014_FOU'RT'H
  05: '[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_SECOND$`[0m
[38;5;239m  01: TOKEN201711172014_FIRSTTOKEN201711172014_SECOND[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_FOURTH$`[0m
[38;5;239m  01: TOKEN201711172014_THIRDTOKEN201711172014_FOURTH[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/002-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr \'TOKEN201711172014_STDOUT TOKEN201711172014_STDERR\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^'TOKEN201711172014_STDOUT$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_STDERR'$`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: [a]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: [abcdefgh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/004-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a subshell command that is executed at the end of a script is correctly returned at termination by the parent shell.[0m

  STDIN:
[38;5;239m  01: (./exit_with_status 42)[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status 42[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/exit/001-exiting-subshell[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that prematurely exiting a subshell does work and does not result in parent shell termination.[0m

  STDIN:
[38;5;239m  01: (exit ; ./write_on_stdout TOKEN201711172014_NOT_DISPLAYED)
  02: ./write_on_stdout TOKEN201711172014_DISPLAYED[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_NOT_DISPLAYED`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711172014_DISPLAYED`[0m
[38;5;239m  01: TOKEN201711172014_DISPLAYED[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==47434==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000106285bec bp 0x7fff599e8d90 sp 0x7fff599e8ce0 T0)
  04: ==47434==The signal is caused by a READ memory access.
  05: ==47434==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7ffe66600000
  07:     #0 0x106285beb in ft_atoi ft_atoi.c:11
  08:     #1 0x10621a8a3 in builtin_exit exit.c:14
  09:     #2 0x10621a648 in exec_builtin exec_builtin.c:46
  10:     #3 0x106238504 in exec_simple_command exec_simple_command.c:147
  11:     #4 0x106233af5 in exec exec.c:39
  12:     #5 0x106234ba4 in exec_command exec_command.c:20
  13:     #6 0x106233af5 in exec exec.c:39
  14:     #7 0x1062362a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  15:     #8 0x106233af5 in exec exec.c:39
  16:     #9 0x106236c84 in exec_pipeline exec_pipeline.c:83
  17:     #10 0x106233af5 in exec exec.c:39
  18:     #11 0x106233c41 in exec_and_or exec_and_or.c:13
  19:     #12 0x106233af5 in exec exec.c:39
  20:     #13 0x106238881 in exec_term exec_term.c:10
  21:     #14 0x106233af5 in exec exec.c:39
  22:     #15 0x1062388c3 in exec_term exec_term.c:11
  23:     #16 0x106233af5 in exec exec.c:39
  24:     #17 0x1062353b9 in exec_compound_list exec_compound_list.c:9
  25:     #18 0x106233af5 in exec exec.c:39
  26:     #19 0x10625119f in launch_process job_launch.c:58
  27:     #20 0x10625181d in launch_job job_launch.c:95
  28:     #21 0x106238747 in exec_subshell exec_subshell.c:16
  29:     #22 0x106233af5 in exec exec.c:39
  30:     #23 0x106235355 in exec_compound_command exec_compound_command.c:14
  31:     #24 0x106233af5 in exec exec.c:39
  32:     #25 0x106234ba4 in exec_command exec_command.c:20
  33:     #26 0x106233af5 in exec exec.c:39
  34:     #27 0x1062362a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  35:     #28 0x106233af5 in exec exec.c:39
  36:     #29 0x106236c84 in exec_pipeline exec_pipeline.c:83
  37:     #30 0x106233af5 in exec exec.c:39
  38:     #31 0x106233c41 in exec_and_or exec_and_or.c:13
  39:     #32 0x106233af5 in exec exec.c:39
  40:     #33 0x106234fa7 in exec_complete_command exec_complete_command.c:45
  41:     #34 0x106233af5 in exec exec.c:39
  42:     #35 0x106235261 in exec_complete_commands exec_complete_commands.c:10
  43:     #36 0x106233af5 in exec exec.c:39
  44:     #37 0x106236e49 in exec_program exec_program.c:10
  45:     #38 0x106233af5 in exec exec.c:39
  46:     #39 0x106230fda in exec_main_loop lex_and_parse.c:24
  47:     #40 0x10623194f in lex_and_parse lex_and_parse.c:94
  48:     #41 0x10623210c in main_loop main_loop.c:52
  49:     #42 0x106216aaa in main main.c:97
  50:     #43 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  51: 
  52: ==47434==Register values:
  53: rax = 0x0000000000000000  rbx = 0x00007fff599e8de0  rcx = 0x0000000000000000  rdx = 0x0000100000000000  
  54: rdi = 0x0000000000000000  rsi = 0x0000602000018600  rbp = 0x00007fff599e8d90  rsp = 0x00007fff599e8ce0  
  55:  r8 = 0x00007fff599e8d02   r9 = 0x0000000000000001  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  56: r12 = 0x00007fff599ea450  r13 = 0x00007fff599ea470  r14 = 0x00007fff599ea300  r15 = 0x00007fff599ea430  
  57: AddressSanitizer can not provide additional info.
  58: SUMMARY: AddressSanitizer: SEGV ft_atoi.c:11 in ft_atoi
  59: ==47434==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/escaping/001-escaped-subshell-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a subshell with parentheses `(` and `)` may be escaped with backslash `\\`.[0m

  STDIN:
[38;5;239m  01: \(./write_on_stdout TOKEN201711172014_STDOUT\)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Cc]ommand not found|[Nn]o such file or directory)`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/escaping/002-escaped-subshell-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tokens parentheses `(` and `)` for subshell generation may be escaped with backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\\(TOKEN201711172014_STDOUT\\\)[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `\(TOKEN201711172014_STDOUT\)`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/001-modifies-the-child-environment-only-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: (TOKEN201711172014_NAME=TOKEN201711172014_VALUE ./display_env)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_NAME=TOKEN201711172014_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: ------------------------------
  43: TOTAL ENVIRONMENT VARIABLES: 40[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==47954==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010d4d23cc bp 0x7fff5279f890 sp 0x7fff5279f870 T0)
  04: ==47954==The signal is caused by a READ memory access.
  05: ==47954==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7f9513d00830
  07:     #0 0x10d4d23cb in ft_strlen ft_strlen.c:10
  08:     #1 0x10d4c63e5 in ft_arraydel ft_arraydel.c:10
  09:     #2 0x10d4ba6f7 in word_expansion wordexp_posix.c:183
  10:     #3 0x10d480425 in exec_assignment_word exec_simple_command.c:55
  11:     #4 0x10d4809cb in exec_cmd_prefix exec_simple_command.c:85
  12:     #5 0x10d480fec in exec_simple_command exec_simple_command.c:125
  13:     #6 0x10d47caf5 in exec exec.c:39
  14:     #7 0x10d47dba4 in exec_command exec_command.c:20
  15:     #8 0x10d47caf5 in exec exec.c:39
  16:     #9 0x10d49a19f in launch_process job_launch.c:58
  17:     #10 0x10d49a81d in launch_job job_launch.c:95
  18:     #11 0x10d47fc70 in exec_pipeline exec_pipeline.c:80
  19:     #12 0x10d47caf5 in exec exec.c:39
  20:     #13 0x10d47cc41 in exec_and_or exec_and_or.c:13
  21:     #14 0x10d47caf5 in exec exec.c:39
  22:     #15 0x10d481881 in exec_term exec_term.c:10
  23:     #16 0x10d47caf5 in exec exec.c:39
  24:     #17 0x10d47e3b9 in exec_compound_list exec_compound_list.c:9
  25:     #18 0x10d47caf5 in exec exec.c:39
  26:     #19 0x10d49a19f in launch_process job_launch.c:58
  27:     #20 0x10d49a81d in launch_job job_launch.c:95
  28:     #21 0x10d481747 in exec_subshell exec_subshell.c:16
  29:     #22 0x10d47caf5 in exec exec.c:39
  30:     #23 0x10d47e355 in exec_compound_command exec_compound_command.c:14
  31:     #24 0x10d47caf5 in exec exec.c:39
  32:     #25 0x10d47dba4 in exec_command exec_command.c:20
  33:     #26 0x10d47caf5 in exec exec.c:39
  34:     #27 0x10d47f2a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  35:     #28 0x10d47caf5 in exec exec.c:39
  36:     #29 0x10d47fc84 in exec_pipeline exec_pipeline.c:83
  37:     #30 0x10d47caf5 in exec exec.c:39
  38:     #31 0x10d47cc41 in exec_and_or exec_and_or.c:13
  39:     #32 0x10d47caf5 in exec exec.c:39
  40:     #33 0x10d47dfa7 in exec_complete_command exec_complete_command.c:45
  41:     #34 0x10d47caf5 in exec exec.c:39
  42:     #35 0x10d47e261 in exec_complete_commands exec_complete_commands.c:10
  43:     #36 0x10d47caf5 in exec exec.c:39
  44:     #37 0x10d47fe49 in exec_program exec_program.c:10
  45:     #38 0x10d47caf5 in exec exec.c:39
  46:     #39 0x10d479fda in exec_main_loop lex_and_parse.c:24
  47:     #40 0x10d47a94f in lex_and_parse lex_and_parse.c:94
  48:     #41 0x10d47b10c in main_loop main_loop.c:52
  49:     #42 0x10d45faaa in main main.c:97
  50:     #43 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  51: 
  52: ==47954==Register values:
  53: rax = 0x0000100000000000  rbx = 0x00007fff5279f9e0  rcx = 0xbebebebebebebebe  rdx = 0x17d7d7d7d7d7d7d7  
  54: rdi = 0xbebebebebebebebe  rsi = 0x00001c1000000755  rbp = 0x00007fff5279f890  rsp = 0x00007fff5279f870  
  55:  r8 = 0x000000000000001f   r9 = 0x0000200000000000  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  56: r12 = 0x00007fff527a1450  r13 = 0x00007fff527a1470  r14 = 0x0000000000000003  r15 = 0x00007fff527a1400  
  57: AddressSanitizer can not provide additional info.
  58: SUMMARY: AddressSanitizer: SEGV ft_strlen.c:10 in ft_strlen
  59: ==47954==ABORTING[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/002-modifies-the-child-environment-only-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: ( (TOKEN201711172014_NAME=TOKEN201711172014_VALUE ./display_env) ; ./display_env) ; ./display_env
  02: [0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_NAME=TOKEN201711172014_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: ------------------------------
  43: TOTAL ENVIRONMENT VARIABLES: 40
  44: ------------------------------
  45: TERM_PROGRAM=iTerm.app
  46: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  47: TERM=xterm-256color
  48: SHELL=42sh
  49: MYVIMRC=/Users/vcombey/.vimrc
  50: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  51: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  52: TERM_PROGRAM_VERSION=3.1.5
  53: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  54: ZSH=/Users/vcombey/.oh-my-zsh
  55: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  56: USER=vcombey
  57: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  58: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  59: PAGER=less
  60: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  61: DOTFILES=/Users/vcombey/.dotfiles
  62: LSCOLORS=HxBxcxdxbxegedabagacad
  63: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  64: ZSHRC=/Users/vcombey/.zshrc
  65: PWD=/Users/vcombey/42ShellTester/tmp
  66: EDITOR=vim
  67: BASE16_THEME=base16-nord
  68: LANG=en_US.UTF-8
  69: ITERM_PROFILE=Default
  70: XPC_FLAGS=0x0
  71: XPC_SERVICE_NAME=0
  72: INSTALL_ROOT=/Users/vcombey/.sbcl
  73: SHLVL=3
  74: HOME=/Users/vcombey
  75: COLORFGBG=7;0
  76: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  77: LESS=-R
  78: LOGNAME=vcombey
  79: VISUAL=vim
  80: LC_CTYPE=en_US.UTF-8
  81: COLORTERM=truecolor
  82: OLDPWD=/Users/vcombey/42ShellTester
  83: _=/Users/vcombey/42/42sh/42sh
  84: HISTFILE=/Users/vcombey/.42sh_history
  85: ------------------------------
  86: TOTAL ENVIRONMENT VARIABLES: 40[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==48069==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0001049e33cc bp 0x7fff5b28dd30 sp 0x7fff5b28dd10 T0)
  04: ==48069==The signal is caused by a READ memory access.
  05: ==48069==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7fe4b7d00830
  07:     #0 0x1049e33cb in ft_strlen ft_strlen.c:10
  08:     #1 0x1049d73e5 in ft_arraydel ft_arraydel.c:10
  09:     #2 0x1049cb6f7 in word_expansion wordexp_posix.c:183
  10:     #3 0x104991425 in exec_assignment_word exec_simple_command.c:55
  11:     #4 0x1049919cb in exec_cmd_prefix exec_simple_command.c:85
  12:     #5 0x104991fec in exec_simple_command exec_simple_command.c:125
  13:     #6 0x10498daf5 in exec exec.c:39
  14:     #7 0x10498eba4 in exec_command exec_command.c:20
  15:     #8 0x10498daf5 in exec exec.c:39
  16:     #9 0x1049ab19f in launch_process job_launch.c:58
  17:     #10 0x1049ab81d in launch_job job_launch.c:95
  18:     #11 0x104990c70 in exec_pipeline exec_pipeline.c:80
  19:     #12 0x10498daf5 in exec exec.c:39
  20:     #13 0x10498dc41 in exec_and_or exec_and_or.c:13
  21:     #14 0x10498daf5 in exec exec.c:39
  22:     #15 0x104992881 in exec_term exec_term.c:10
  23:     #16 0x10498daf5 in exec exec.c:39
  24:     #17 0x10498f3b9 in exec_compound_list exec_compound_list.c:9
  25:     #18 0x10498daf5 in exec exec.c:39
  26:     #19 0x1049ab19f in launch_process job_launch.c:58
  27:     #20 0x1049ab81d in launch_job job_launch.c:95
  28:     #21 0x104992747 in exec_subshell exec_subshell.c:16
  29:     #22 0x10498daf5 in exec exec.c:39
  30:     #23 0x10498f355 in exec_compound_command exec_compound_command.c:14
  31:     #24 0x10498daf5 in exec exec.c:39
  32:     #25 0x10498eba4 in exec_command exec_command.c:20
  33:     #26 0x10498daf5 in exec exec.c:39
  34:     #27 0x1049902a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  35:     #28 0x10498daf5 in exec exec.c:39
  36:     #29 0x104990c84 in exec_pipeline exec_pipeline.c:83
  37:     #30 0x10498daf5 in exec exec.c:39
  38:     #31 0x10498dc41 in exec_and_or exec_and_or.c:13
  39:     #32 0x10498daf5 in exec exec.c:39
  40:     #33 0x104992881 in exec_term exec_term.c:10
  41:     #34 0x10498daf5 in exec exec.c:39
  42:     #35 0x1049928c3 in exec_term exec_term.c:11
  43:     #36 0x10498daf5 in exec exec.c:39
  44:     #37 0x10498f3b9 in exec_compound_list exec_compound_list.c:9
  45:     #38 0x10498daf5 in exec exec.c:39
  46:     #39 0x1049ab19f in launch_process job_launch.c:58
  47:     #40 0x1049ab81d in launch_job job_launch.c:95
  48:     #41 0x104992747 in exec_subshell exec_subshell.c:16
  49:     #42 0x10498daf5 in exec exec.c:39
  50:     #43 0x10498f355 in exec_compound_command exec_compound_command.c:14
  51:     #44 0x10498daf5 in exec exec.c:39
  52:     #45 0x10498eba4 in exec_command exec_command.c:20
  53:     #46 0x10498daf5 in exec exec.c:39
  54:     #47 0x1049902a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  55:     #48 0x10498daf5 in exec exec.c:39
  56:     #49 0x104990c84 in exec_pipeline exec_pipeline.c:83
  57:     #50 0x10498daf5 in exec exec.c:39
  58:     #51 0x10498dc41 in exec_and_or exec_and_or.c:13
  59:     #52 0x10498daf5 in exec exec.c:39
  60:     #53 0x10498f17a in exec_list exec_complete_command.c:67
  61:     #54 0x10498eec3 in exec_complete_command exec_complete_command.c:39
  62:     #55 0x10498daf5 in exec exec.c:39
  63:     #56 0x10498f261 in exec_complete_commands exec_complete_commands.c:10
  64:     #57 0x10498daf5 in exec exec.c:39
  65:     #58 0x104990e49 in exec_program exec_program.c:10
  66:     #59 0x10498daf5 in exec exec.c:39
  67:     #60 0x10498afda in exec_main_loop lex_and_parse.c:24
  68:     #61 0x10498b94f in lex_and_parse lex_and_parse.c:94
  69:     #62 0x10498c10c in main_loop main_loop.c:52
  70:     #63 0x104970aaa in main main.c:97
  71:     #64 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  72: 
  73: ==48069==Register values:
  74: rax = 0x0000100000000000  rbx = 0x00007fff5b28de80  rcx = 0xbebebebebebebebe  rdx = 0x17d7d7d7d7d7d7d7  
  75: rdi = 0xbebebebebebebebe  rsi = 0x00001c1000000855  rbp = 0x00007fff5b28dd30  rsp = 0x00007fff5b28dd10  
  76:  r8 = 0x000000000000001f   r9 = 0x0000200000000000  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  77: r12 = 0x00007fff5b290450  r13 = 0x00007fff5b290470  r14 = 0x0000000000000003  r15 = 0x00007fff5b290400  
  78: AddressSanitizer can not provide additional info.
  79: SUMMARY: AddressSanitizer: SEGV ft_strlen.c:10 in ft_strlen
  80: ==48069==ABORTING
  81: ASAN:DEADLYSIGNAL
  82: =================================================================
  83: ==48066==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0001049ae9ef bp 0x7fff5b290390 sp 0x7fff5b290220 T0)
  84: ==48066==The signal is caused by a READ memory access.
  85: ==48066==Hint: address points to the zero page.
  86: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7fe9c0500830
  87:     #0 0x1049ae9ee in get_token_list get_token_list.c:227
  88:     #1 0x10498b5af in lex_and_parse lex_and_parse.c:70
  89:     #2 0x10498c10c in main_loop main_loop.c:52
  90:     #3 0x104970aaa in main main.c:97
  91:     #4 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  92: 
  93: ==48066==Register values:
  94: rax = 0x0000000000000000  rbx = 0x00007fff5b290260  rcx = 0x0000000000000000  rdx = 0x0000000000000000  
  95: rdi = 0x00001fffeb652000  rsi = 0x0000100000000000  rbp = 0x00007fff5b290390  rsp = 0x00007fff5b290220  
  96:  r8 = 0x00007fff5b290240   r9 = 0x4e10b144557f007f  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  97: r12 = 0x00007fff5b290450  r13 = 0x00007fff5b290470  r14 = 0x00007fff5b2903e0  r15 = 0x00007fff5b290430  
  98: AddressSanitizer can not provide additional info.
  99: SUMMARY: AddressSanitizer: SEGV get_token_list.c:227 in get_token_list
  100: ==48066==ABORTING
  101: ./lib/main.sh: line 102: 48066 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mbonuses/cmd_substitution[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that nested cmd substitution works[0m

  Before test:
[38;5;239m[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout echo $(echo $(echo lala))[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `lala`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/001-modifies-child-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711172014_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_VARIABLE=TOKEN201711172014_VALUE ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_VARIABLE=TOKEN201711172014_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: ------------------------------
  43: TOTAL ENVIRONMENT VARIABLES: 40[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==48972==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000109f313cc bp 0x7fff55d412b0 sp 0x7fff55d41290 T0)
  04: ==48972==The signal is caused by a READ memory access.
  05: ==48972==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7f962e40dec0
  07:     #0 0x109f313cb in ft_strlen ft_strlen.c:10
  08:     #1 0x109f253e5 in ft_arraydel ft_arraydel.c:10
  09:     #2 0x109f196f7 in word_expansion wordexp_posix.c:183
  10:     #3 0x109edf425 in exec_assignment_word exec_simple_command.c:55
  11:     #4 0x109edf9cb in exec_cmd_prefix exec_simple_command.c:85
  12:     #5 0x109edffec in exec_simple_command exec_simple_command.c:125
  13:     #6 0x109edbaf5 in exec exec.c:39
  14:     #7 0x109edcba4 in exec_command exec_command.c:20
  15:     #8 0x109edbaf5 in exec exec.c:39
  16:     #9 0x109ef919f in launch_process job_launch.c:58
  17:     #10 0x109ef981d in launch_job job_launch.c:95
  18:     #11 0x109edec70 in exec_pipeline exec_pipeline.c:80
  19:     #12 0x109edbaf5 in exec exec.c:39
  20:     #13 0x109edbc41 in exec_and_or exec_and_or.c:13
  21:     #14 0x109edbaf5 in exec exec.c:39
  22:     #15 0x109edcfa7 in exec_complete_command exec_complete_command.c:45
  23:     #16 0x109edbaf5 in exec exec.c:39
  24:     #17 0x109edd261 in exec_complete_commands exec_complete_commands.c:10
  25:     #18 0x109edbaf5 in exec exec.c:39
  26:     #19 0x109edee49 in exec_program exec_program.c:10
  27:     #20 0x109edbaf5 in exec exec.c:39
  28:     #21 0x109ed8fda in exec_main_loop lex_and_parse.c:24
  29:     #22 0x109ed994f in lex_and_parse lex_and_parse.c:94
  30:     #23 0x109eda10c in main_loop main_loop.c:52
  31:     #24 0x109ebeaaa in main main.c:97
  32:     #25 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: ==48972==Register values:
  35: rax = 0x0000100000000000  rbx = 0x00007fff55d41400  rcx = 0xbebebebebebebebe  rdx = 0x17d7d7d7d7d7d7d7  
  36: rdi = 0xbebebebebebebebe  rsi = 0x00001c1000000755  rbp = 0x00007fff55d412b0  rsp = 0x00007fff55d41290  
  37:  r8 = 0x000000000000001f   r9 = 0x0000200000000000  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  38: r12 = 0x00007fff55d42450  r13 = 0x00007fff55d42470  r14 = 0x0000000000000003  r15 = 0x00007fff55d42400  
  39: AddressSanitizer can not provide additional info.
  40: SUMMARY: AddressSanitizer: SEGV ft_strlen.c:10 in ft_strlen
  41: ==48972==ABORTING[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/002-modifies-child-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711172014_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711172014_VARIABLE1=TOKEN201711172014_VALUE1 TOKEN201711172014_VARIABLE2=TOKEN201711172014_VALUE2 TOKEN201711172014_VARIABLE3=TOKEN201711172014_VALUE3 ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_VARIABLE1=TOKEN201711172014_VALUE1$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_VARIABLE2=TOKEN201711172014_VALUE2$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014_VARIABLE3=TOKEN201711172014_VALUE3$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: ------------------------------
  43: TOTAL ENVIRONMENT VARIABLES: 40[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==49092==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010a2fd3cc bp 0x7fff559752b0 sp 0x7fff55975290 T0)
  04: ==49092==The signal is caused by a READ memory access.
  05: ==49092==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7ff796d00830
  07:     #0 0x10a2fd3cb in ft_strlen ft_strlen.c:10
  08:     #1 0x10a2f13e5 in ft_arraydel ft_arraydel.c:10
  09:     #2 0x10a2e56f7 in word_expansion wordexp_posix.c:183
  10:     #3 0x10a2ab425 in exec_assignment_word exec_simple_command.c:55
  11:     #4 0x10a2ab9cb in exec_cmd_prefix exec_simple_command.c:85
  12:     #5 0x10a2abfec in exec_simple_command exec_simple_command.c:125
  13:     #6 0x10a2a7af5 in exec exec.c:39
  14:     #7 0x10a2a8ba4 in exec_command exec_command.c:20
  15:     #8 0x10a2a7af5 in exec exec.c:39
  16:     #9 0x10a2c519f in launch_process job_launch.c:58
  17:     #10 0x10a2c581d in launch_job job_launch.c:95
  18:     #11 0x10a2aac70 in exec_pipeline exec_pipeline.c:80
  19:     #12 0x10a2a7af5 in exec exec.c:39
  20:     #13 0x10a2a7c41 in exec_and_or exec_and_or.c:13
  21:     #14 0x10a2a7af5 in exec exec.c:39
  22:     #15 0x10a2a8fa7 in exec_complete_command exec_complete_command.c:45
  23:     #16 0x10a2a7af5 in exec exec.c:39
  24:     #17 0x10a2a9261 in exec_complete_commands exec_complete_commands.c:10
  25:     #18 0x10a2a7af5 in exec exec.c:39
  26:     #19 0x10a2aae49 in exec_program exec_program.c:10
  27:     #20 0x10a2a7af5 in exec exec.c:39
  28:     #21 0x10a2a4fda in exec_main_loop lex_and_parse.c:24
  29:     #22 0x10a2a594f in lex_and_parse lex_and_parse.c:94
  30:     #23 0x10a2a610c in main_loop main_loop.c:52
  31:     #24 0x10a28aaaa in main main.c:97
  32:     #25 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: ==49092==Register values:
  35: rax = 0x0000100000000000  rbx = 0x00007fff55975400  rcx = 0xbebebebebebebebe  rdx = 0x17d7d7d7d7d7d7d7  
  36: rdi = 0xbebebebebebebebe  rsi = 0x00001c1000000855  rbp = 0x00007fff559752b0  rsp = 0x00007fff55975290  
  37:  r8 = 0x000000000000001f   r9 = 0x0000200000000000  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  38: r12 = 0x00007fff55976450  r13 = 0x00007fff55976470  r14 = 0x0000000000000003  r15 = 0x00007fff55976400  
  39: AddressSanitizer can not provide additional info.
  40: SUMMARY: AddressSanitizer: SEGV ft_strlen.c:10 in ft_strlen
  41: ==49092==ABORTING[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/003-modifies-PATH-only[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: rm -rf "temporary_directory"
  02: mkdir -p "temporary_directory"
  03: cd "temporary_directory"[0m

  STDIN:
[38;5;239m  01: PATH=.. write_on_stdout TOKEN201711172014
  02: exit_with_status 42[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711172014$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==49235==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010919e3cc bp 0x7fff56ad42b0 sp 0x7fff56ad4290 T0)
  04: ==49235==The signal is caused by a READ memory access.
  05: ==49235==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7fbb35500830
  07:     #0 0x10919e3cb in ft_strlen ft_strlen.c:10
  08:     #1 0x1091923e5 in ft_arraydel ft_arraydel.c:10
  09:     #2 0x1091866f7 in word_expansion wordexp_posix.c:183
  10:     #3 0x10914c425 in exec_assignment_word exec_simple_command.c:55
  11:     #4 0x10914c9cb in exec_cmd_prefix exec_simple_command.c:85
  12:     #5 0x10914cfec in exec_simple_command exec_simple_command.c:125
  13:     #6 0x109148af5 in exec exec.c:39
  14:     #7 0x109149ba4 in exec_command exec_command.c:20
  15:     #8 0x109148af5 in exec exec.c:39
  16:     #9 0x10916619f in launch_process job_launch.c:58
  17:     #10 0x10916681d in launch_job job_launch.c:95
  18:     #11 0x10914bc70 in exec_pipeline exec_pipeline.c:80
  19:     #12 0x109148af5 in exec exec.c:39
  20:     #13 0x109148c41 in exec_and_or exec_and_or.c:13
  21:     #14 0x109148af5 in exec exec.c:39
  22:     #15 0x109149fa7 in exec_complete_command exec_complete_command.c:45
  23:     #16 0x109148af5 in exec exec.c:39
  24:     #17 0x10914a261 in exec_complete_commands exec_complete_commands.c:10
  25:     #18 0x109148af5 in exec exec.c:39
  26:     #19 0x10914be49 in exec_program exec_program.c:10
  27:     #20 0x109148af5 in exec exec.c:39
  28:     #21 0x109145fda in exec_main_loop lex_and_parse.c:24
  29:     #22 0x10914694f in lex_and_parse lex_and_parse.c:94
  30:     #23 0x10914710c in main_loop main_loop.c:52
  31:     #24 0x10912baaa in main main.c:97
  32:     #25 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  33: 
  34: ==49235==Register values:
  35: rax = 0x0000100000000000  rbx = 0x00007fff56ad4400  rcx = 0xbebebebebebebebe  rdx = 0x17d7d7d7d7d7d7d7  
  36: rdi = 0xbebebebebebebebe  rsi = 0x00001c1000000055  rbp = 0x00007fff56ad42b0  rsp = 0x00007fff56ad4290  
  37:  r8 = 0x000000000000001f   r9 = 0x0000200000000000  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  38: r12 = 0x00007fff56ad5450  r13 = 0x00007fff56ad5470  r14 = 0x0000000000000003  r15 = 0x00007fff56ad5400  
  39: AddressSanitizer can not provide additional info.
  40: SUMMARY: AddressSanitizer: SEGV ft_strlen.c:10 in ft_strlen
  41: ==49235==ABORTING
  42: exit_with_status: command not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `42`[0m
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/errors/001-parse-error-at-beginning[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that the AND operator `&&` must be placed after a valid command.
  If not, the Shell should display an error and exit with an error status code.[0m

  STDIN:
[38;5;239m  01: && ./write_on_stdout TOKEN201711172014[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex `TOKEN201711172014`[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `&&'[0m

  MISC:
[31m[1;33m  WARNING    might_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/errors/002-parse-error-too-much-symbol[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that more than two '&' operators are detected as a syntax error.
  It should not execute the two commands `write_on_stdout` but display an error and exit with an error status code.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711172014 &&& ./write_on_stdout TOKEN201711172014[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex `TOKEN201711172014`[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `&'[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/001-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 && ./write_on_stderr TOKEN201711172014_ERROR 21 || ./write_on_stdout TOKEN201711172014_SUCCESS[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/002-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./write_on_stderr TOKEN201711172014_ERROR 21 || ./write_on_stdout TOKEN201711172014_SUCCESS[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711172014_ERROR`[0m
[38;5;239m  01: TOKEN201711172014_ERROR[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/004-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stderr TOKEN201711172014_ERROR 21 && ./write_on_stdout TOKEN201711172014_SUCCESS[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_ERROR`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/005-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201711172014_SUCCESS && ./write_on_stderr TOKEN201711172014_ERROR 21[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_SUCCESS`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_ERROR`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/002-run-second-only[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the OR operator `||` makes the right command to be executed if the left one exits with an error status code.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201711172014[0m

  STDOUT:
[31m[1;33m  WARNING    might match_regex `TOKEN201711172014`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[1;33m  WARNING    might exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/003-run-until-succeeding[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the OR separator `||` with chained commands results in the execution of all until the first succeed. The remaining commands are not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 1 || ./exit_with_status 2 || ./exit_with_status 3 || ./exit_with_status 4 || ./write_on_stdout TOKEN201711172014_FIRST || ./write_on_stdout TOKEN201711172014_SECOND[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/errors/001-parse-error-at-beginning[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that the OR operator `||` must be placed after a valid command.
  If not, the Shell should display an error and exit with an error status code.[0m

  STDIN:
[38;5;239m  01: || ./write_on_stdout TOKEN201711172014[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `||'[0m

  MISC:
[31m[1;33m  WARNING    might_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/errors/002-parse-error-too-much-symbol[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  Parsing test.
  The purpose of this test is to check that using more than two pipe symbols `|` is detected as an error.
  The Shell should display an error and exit with a error status code.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711172014 ||| ./write_on_stdout TOKEN201711172014[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: 42sh: parse error near `|'[0m

  MISC:
[31m[1;33m  WARNING    might_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/003-expanded-with-PWD-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable PWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~[+]`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711172014[+]`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  01: /TOKEN201711172014+[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/004-expanded-with-PWD-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable PWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+/TOKEN201711172014_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~+/TOKEN201711172014_SUBDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711172014[+]/TOKEN201711172014_SUBDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp/TOKEN201711172014_SUBDIRECTORY$`[0m
[38;5;239m  01: /TOKEN201711172014+/TOKEN201711172014_SUBDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/005-expanded-with-OLDPWD-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable OLDPWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711172014_SUBDIRECTORY"
  02: mkdir "./TOKEN201711172014_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711172014_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~-`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711172014-`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  01: /TOKEN201711172014-[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/006-expanded-with-OLDPWD-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable OLDPWD when followed by the symbol `+`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711172014_SUBDIRECTORY"
  02: mkdir "./TOKEN201711172014_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711172014_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-/TOKEN201711172014_OTHERDIRECTORY[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `~-/TOKEN201711172014_OTHERDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711172014-/TOKEN201711172014_OTHERDIRECTORY`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/Users/vcombey/42ShellTester/tmp/TOKEN201711172014_OTHERDIRECTORY$`[0m
[38;5;239m  01: /TOKEN201711172014-/TOKEN201711172014_OTHERDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/001-not-expanded-with-HOME-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be not expanded when not followed by an authorized symbol or user name.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~~[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~~$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711172014`[0m
[38;5;239m  01: /TOKEN201711172014/TOKEN201711172014[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/002-not-expanded-with-HOME-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be not expanded when not followed by an authorized symbol or user name.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~TOKEN201711172014_UNKNOWNUSER[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~TOKEN201711172014_UNKNOWNUSER$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711172014TOKEN201711172014_UNKNOWNUSER`[0m
[38;5;239m  01: /TOKEN201711172014TOKEN201711172014_UNKNOWNUSER[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/003-not-expanded-with-PWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` is not expanded with the environment variable PWD when not followed by the symbol `/`.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~+TOKEN201711172014_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~[+]TOKEN201711172014_SUBDIRECTORY$`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/TOKEN201711172014[+]TOKEN201711172014_SUBDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmpTOKEN201711172014_SUBDIRECTORY`[0m
[38;5;239m  01: /TOKEN201711172014+TOKEN201711172014_SUBDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/not-expanded/004-not-expanded-with-OLDPWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` is not expanded with the environment variable OLDPWD when not followed by the symbol `/`.[0m

  Before test:
[38;5;239m  01: rm -rf "./TOKEN201711172014_SUBDIRECTORY"
  02: mkdir "./TOKEN201711172014_SUBDIRECTORY"
  03: export "HOME=/TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: cd ./TOKEN201711172014_SUBDIRECTORY
  02: /Users/vcombey/42ShellTester/tmp/write_on_stdout ~-TOKEN201711172014_OTHERDIRECTORY[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^~-TOKEN201711172014_OTHERDIRECTORY$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/TOKEN201711172014-/TOKEN201711172014_OTHERDIRECTORY`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp/TOKEN201711172014_OTHERDIRECTORY`[0m
[38;5;239m  01: /TOKEN201711172014-TOKEN201711172014_OTHERDIRECTORY[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/binary/003-binary-test-exec-order[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell correctly finds binaries by iterating on paths within the environment variable PATH from left to right.[0m

  Before test:
[38;5;239m  01: mkdir -p "./virtual_path_1" "./virtual_path_2"
  02: cp "./write_on_stdout" "./virtual_path_1/fake_echo"
  03: cp "./write_on_stderr" "./virtual_path_2/fake_echo"
  04: export PATH="/Users/vcombey/42ShellTester/tmp/virtual_path_1:/Users/vcombey/42ShellTester/tmp/virtual_path_2"[0m

  STDIN:
[38;5;239m  01: fake_echo TOKEN201711172014[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex TOKEN201711172014[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711172014[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/004-binary-test-empty-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell finds binaries that are located in the current directory when the environment variable PATH is empty.[0m

  Before test:
[38;5;239m  01: export PATH=""[0m

  STDIN:
[38;5;239m  01: write_on_stdout "TOKEN201711172014"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: write_on_stdout: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/006-binary-undefined-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell retrieves the default value of the environment variable PATH if not set. This test depends on the presence of the UNIX binary `ls`, located in a path within the default environment variable PATH.[0m

  Before test:
[38;5;239m  01: rm -rf "TOKEN201711172014_006-BINARY-UNDEFINED-PATH"
  02: touch "TOKEN201711172014_006-BINARY-UNDEFINED-PATH"
  03: unset PATH[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014_006-BINARY-UNDEFINED-PATH`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ls: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/008-binary-too-many-symbolic-links-encountered[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a path that encounters an infinite loop of symbolic link results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./symbolic_link1 ./symbolic_link2 ./symbolic_link3
  02: ln -s ./symbolic_link1 ./symbolic_link2
  03: ln -s ./symbolic_link2 ./symbolic_link3
  04: ln -s ./symbolic_link3 ./symbolic_link1[0m

  STDIN:
[38;5;239m  01: ./symbolic_link1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: ./symbolic_link1: no such file or directory[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status 0[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/007-symbolic-link[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving the linked directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/symbolic_link$`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD
  02: ------------------------------
  03: TERM_PROGRAM=iTerm.app
  04: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  05: TERM=xterm-256color
  06: SHELL=42sh
  07: MYVIMRC=/Users/vcombey/.vimrc
  08: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  09: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  10: TERM_PROGRAM_VERSION=3.1.5
  11: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp/sub_directory
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester/tmp
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: ------------------------------
  44: TOTAL ENVIRONMENT VARIABLES: 40[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/008-symbolic-link-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving to the linked directory. In this test, the directory is linked with to chained symbolic links.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link1"
  04: ln -s "./symbolic_link1" "./symbolic_link2"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link2
  02: /Users/vcombey/42ShellTester/tmp/display_pwd
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp/symbolic_link2$`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp/sub_directory:PWD
  02: ------------------------------
  03: TERM_PROGRAM=iTerm.app
  04: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  05: TERM=xterm-256color
  06: SHELL=42sh
  07: MYVIMRC=/Users/vcombey/.vimrc
  08: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  09: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  10: TERM_PROGRAM_VERSION=3.1.5
  11: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp/sub_directory
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester/tmp
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: ------------------------------
  44: TOTAL ENVIRONMENT VARIABLES: 40[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/012-dot[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that playing with relative paths to the current directory with the builtin `cd` results in not changing the current directory.[0m

  STDIN:
[38;5;239m  01: cd .
  02: cd ./
  03: cd ./.
  04: cd ././
  05: cd ./././././././././.
  06: /Users/vcombey/42ShellTester/tmp/display_pwd
  07: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/vcombey/42ShellTester/tmp$`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester:PWD
  02: ------------------------------
  03: TERM_PROGRAM=iTerm.app
  04: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  05: TERM=xterm-256color
  06: SHELL=42sh
  07: MYVIMRC=/Users/vcombey/.vimrc
  08: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  09: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  10: TERM_PROGRAM_VERSION=3.1.5
  11: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=3
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: ------------------------------
  44: TOTAL ENVIRONMENT VARIABLES: 40[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/005-too-many-symbolic-links-encountered[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1
  02: /Users/vcombey/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/vcombey/42ShellTester/tmp:PWD`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: cd: Out of streams resources[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/options/001-not-following-links[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using symbolic links twice with the builtin `cd` and the option `-P` results in a correct environment variable PWD. The option `-P` makes the Shell to resolve symbolic links.[0m

  Before test:
[38;5;239m  01: rm -fr "./sub_directory_link" "./sub_directory"
  02: mkdir -p "./sub_directory/sub_sub_directory"
  03: ln -s "./sub_directory" "./sub_directory_link"
  04: ln -s "./sub_sub_directory" "./sub_directory/sub_sub_directory_link"[0m

  STDIN:
[38;5;239m  01: cd -P sub_directory_link
  02: cd -P sub_sub_directory_link
  03: /Users/vcombey/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD=/Users/vcombey/42ShellTester/tmp/sub_directory/sub_sub_directory`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: ------------------------------
  43: TOTAL ENVIRONMENT VARIABLES: 40[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: cd: No such file or directory
  02: cd: No such file or directory[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/003-ignore-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the option `-i` with the builtin `env` results in an empty environment sent to the given command.[0m

  STDIN:
[38;5;239m  01: env -i ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 0`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/005-set-variables[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `env` can modify or set multiple environment variables before executing the given command.[0m

  Before test:
[38;5;239m  01: export VARTEST1="OLD_VALUE"[0m

  STDIN:
[38;5;239m  01: env VARTEST1=TOKEN201711172014_1 VARTEST2=TOKEN201711172014_2 VARTEST3=TOKEN201711172014_3 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST1=TOKEN201711172014_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST2=TOKEN201711172014_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST3=TOKEN201711172014_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==56567==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60400000ff00 at pc 0x00010ebb6bfd bp 0x7fff5105e4b0 sp 0x7fff5105e4a8
  03: READ of size 8 at 0x60400000ff00 thread T0
  04: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7ff8edc0dec0
  05:     #0 0x10ebb6bfc in local_get_node local_get.c:11
  06:     #1 0x10ebb68d5 in local_add_change_from_key_value local_add.c:40
  07:     #2 0x10ebb7882 in env_change_value env_add.c:55
  08:     #3 0x10ebb7a2f in env_add_change env_add.c:67
  09:     #4 0x10ebb7b32 in env_add_var_from_string env_add.c:74
  10:     #5 0x10eba4ec0 in build_new_env env.c:59
  11:     #6 0x10eba4ae0 in builtin_env env.c:91
  12:     #7 0x10eba5648 in exec_builtin exec_builtin.c:46
  13:     #8 0x10ebc3504 in exec_simple_command exec_simple_command.c:147
  14:     #9 0x10ebbeaf5 in exec exec.c:39
  15:     #10 0x10ebbfba4 in exec_command exec_command.c:20
  16:     #11 0x10ebbeaf5 in exec exec.c:39
  17:     #12 0x10ebc12a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  18:     #13 0x10ebbeaf5 in exec exec.c:39
  19:     #14 0x10ebc1c84 in exec_pipeline exec_pipeline.c:83
  20:     #15 0x10ebbeaf5 in exec exec.c:39
  21:     #16 0x10ebbec41 in exec_and_or exec_and_or.c:13
  22:     #17 0x10ebbeaf5 in exec exec.c:39
  23:     #18 0x10ebbffa7 in exec_complete_command exec_complete_command.c:45
  24:     #19 0x10ebbeaf5 in exec exec.c:39
  25:     #20 0x10ebc0261 in exec_complete_commands exec_complete_commands.c:10
  26:     #21 0x10ebbeaf5 in exec exec.c:39
  27:     #22 0x10ebc1e49 in exec_program exec_program.c:10
  28:     #23 0x10ebbeaf5 in exec exec.c:39
  29:     #24 0x10ebbbfda in exec_main_loop lex_and_parse.c:24
  30:     #25 0x10ebbc94f in lex_and_parse lex_and_parse.c:94
  31:     #26 0x10ebbd10c in main_loop main_loop.c:52
  32:     #27 0x10eba1aaa in main main.c:97
  33:     #28 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  34: 
  35: 0x60400000ff00 is located 0 bytes to the right of 48-byte region [0x60400000fed0,0x60400000ff00)
  36: allocated by thread T0 here:
  37:     #0 0x10ed9effc in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64+0x55ffc)
  38:     #1 0x10ec1074f in palloc palloc.c:16
  39:     #2 0x10ec0816b in ft_arrayjoin ft_arrayjoin.c:14
  40:     #3 0x10ec0824f in ft_arrayjoin_free ft_arrayjoin.c:33
  41:     #4 0x10ebc3212 in exec_simple_command exec_simple_command.c:137
  42:     #5 0x10ebbeaf5 in exec exec.c:39
  43:     #6 0x10ebbfba4 in exec_command exec_command.c:20
  44:     #7 0x10ebbeaf5 in exec exec.c:39
  45:     #8 0x10ebc12a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  46:     #9 0x10ebbeaf5 in exec exec.c:39
  47:     #10 0x10ebc1c84 in exec_pipeline exec_pipeline.c:83
  48:     #11 0x10ebbeaf5 in exec exec.c:39
  49:     #12 0x10ebbec41 in exec_and_or exec_and_or.c:13
  50:     #13 0x10ebbeaf5 in exec exec.c:39
  51:     #14 0x10ebbffa7 in exec_complete_command exec_complete_command.c:45
  52:     #15 0x10ebbeaf5 in exec exec.c:39
  53:     #16 0x10ebc0261 in exec_complete_commands exec_complete_commands.c:10
  54:     #17 0x10ebbeaf5 in exec exec.c:39
  55:     #18 0x10ebc1e49 in exec_program exec_program.c:10
  56:     #19 0x10ebbeaf5 in exec exec.c:39
  57:     #20 0x10ebbbfda in exec_main_loop lex_and_parse.c:24
  58:     #21 0x10ebbc94f in lex_and_parse lex_and_parse.c:94
  59:     #22 0x10ebbd10c in main_loop main_loop.c:52
  60:     #23 0x10eba1aaa in main main.c:97
  61:     #24 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  62: 
  63: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:11 in local_get_node
  64: Shadow bytes around the buggy address:
  65:   0x1c0800001f90: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  66:   0x1c0800001fa0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  67:   0x1c0800001fb0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  68:   0x1c0800001fc0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  69:   0x1c0800001fd0: fa fa fd fd fd fd fd fa fa fa 00 00 00 00 00 00
  70: =>0x1c0800001fe0:[fa]fa 00 00 00 00 00 01 fa fa 00 00 00 00 04 fa
  71:   0x1c0800001ff0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 07 fa
  72:   0x1c0800002000: fa fa 00 00 00 00 00 04 fa fa 00 00 00 00 02 fa
  73:   0x1c0800002010: fa fa 00 00 00 00 05 fa fa fa 00 00 00 00 02 fa
  74:   0x1c0800002020: fa fa 00 00 00 00 06 fa fa fa fa fa fa fa fa fa
  75:   0x1c0800002030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  76: Shadow byte legend (one shadow byte represents 8 application bytes):
  77:   Addressable:           00
  78:   Partially addressable: 01 02 03 04 05 06 07 
  79:   Heap left redzone:       fa
  80:   Freed heap region:       fd
  81:   Stack left redzone:      f1
  82:   Stack mid redzone:       f2
  83:   Stack right redzone:     f3
  84:   Stack after return:      f5
  85:   Stack use after scope:   f8
  86:   Global redzone:          f9
  87:   Global init order:       f6
  88:   Poisoned by user:        f7
  89:   Container overflow:      fc
  90:   Array cookie:            ac
  91:   Intra object redzone:    bb
  92:   ASan internal:           fe
  93:   Left alloca redzone:     ca
  94:   Right alloca redzone:    cb
  95: ==56567==ABORTING
  96: ./lib/main.sh: line 102: 56567 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/001-command-not-found[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid binary as argument results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./invalid_binary"[0m

  STDIN:
[38;5;239m  01: env ./invalid_binary[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/002-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid option results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f -- "-w"[0m

  STDIN:
[38;5;239m  01: env -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/multiple-options/001-ignore-environment-and-set-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that `env -i` works if we use a second argument to set an environment variable, we are also checking if this command unset environments variables for a given binary.[0m

  STDIN:
[38;5;239m  01: env -i TESTVARIABLE=TOKEN201711172014 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVARIABLE=TOKEN201711172014`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 1`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==56948==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60400000dcb8 at pc 0x00010c17ebfd bp 0x7fff53a96480 sp 0x7fff53a96478
  03: READ of size 8 at 0x60400000dcb8 thread T0
  04: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7fa1b4c0dec0
  05:     #0 0x10c17ebfc in local_get_node local_get.c:11
  06:     #1 0x10c17ecec in local_get_value local_get.c:24
  07:     #2 0x10c17f5db in env_add_var env_add.c:31
  08:     #3 0x10c17f9dd in env_add_change env_add.c:65
  09:     #4 0x10c17fb32 in env_add_var_from_string env_add.c:74
  10:     #5 0x10c16cec0 in build_new_env env.c:59
  11:     #6 0x10c16cae0 in builtin_env env.c:91
  12:     #7 0x10c16d648 in exec_builtin exec_builtin.c:46
  13:     #8 0x10c18b504 in exec_simple_command exec_simple_command.c:147
  14:     #9 0x10c186af5 in exec exec.c:39
  15:     #10 0x10c187ba4 in exec_command exec_command.c:20
  16:     #11 0x10c186af5 in exec exec.c:39
  17:     #12 0x10c1892a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  18:     #13 0x10c186af5 in exec exec.c:39
  19:     #14 0x10c189c84 in exec_pipeline exec_pipeline.c:83
  20:     #15 0x10c186af5 in exec exec.c:39
  21:     #16 0x10c186c41 in exec_and_or exec_and_or.c:13
  22:     #17 0x10c186af5 in exec exec.c:39
  23:     #18 0x10c187fa7 in exec_complete_command exec_complete_command.c:45
  24:     #19 0x10c186af5 in exec exec.c:39
  25:     #20 0x10c188261 in exec_complete_commands exec_complete_commands.c:10
  26:     #21 0x10c186af5 in exec exec.c:39
  27:     #22 0x10c189e49 in exec_program exec_program.c:10
  28:     #23 0x10c186af5 in exec exec.c:39
  29:     #24 0x10c183fda in exec_main_loop lex_and_parse.c:24
  30:     #25 0x10c18494f in lex_and_parse lex_and_parse.c:94
  31:     #26 0x10c18510c in main_loop main_loop.c:52
  32:     #27 0x10c169aaa in main main.c:97
  33:     #28 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  34: 
  35: 0x60400000dcb8 is located 0 bytes to the right of 40-byte region [0x60400000dc90,0x60400000dcb8)
  36: allocated by thread T0 here:
  37:     #0 0x10c360ffc in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64+0x55ffc)
  38:     #1 0x10c1d874f in palloc palloc.c:16
  39:     #2 0x10c1d016b in ft_arrayjoin ft_arrayjoin.c:14
  40:     #3 0x10c1d024f in ft_arrayjoin_free ft_arrayjoin.c:33
  41:     #4 0x10c18b212 in exec_simple_command exec_simple_command.c:137
  42:     #5 0x10c186af5 in exec exec.c:39
  43:     #6 0x10c187ba4 in exec_command exec_command.c:20
  44:     #7 0x10c186af5 in exec exec.c:39
  45:     #8 0x10c1892a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  46:     #9 0x10c186af5 in exec exec.c:39
  47:     #10 0x10c189c84 in exec_pipeline exec_pipeline.c:83
  48:     #11 0x10c186af5 in exec exec.c:39
  49:     #12 0x10c186c41 in exec_and_or exec_and_or.c:13
  50:     #13 0x10c186af5 in exec exec.c:39
  51:     #14 0x10c187fa7 in exec_complete_command exec_complete_command.c:45
  52:     #15 0x10c186af5 in exec exec.c:39
  53:     #16 0x10c188261 in exec_complete_commands exec_complete_commands.c:10
  54:     #17 0x10c186af5 in exec exec.c:39
  55:     #18 0x10c189e49 in exec_program exec_program.c:10
  56:     #19 0x10c186af5 in exec exec.c:39
  57:     #20 0x10c183fda in exec_main_loop lex_and_parse.c:24
  58:     #21 0x10c18494f in lex_and_parse lex_and_parse.c:94
  59:     #22 0x10c18510c in main_loop main_loop.c:52
  60:     #23 0x10c169aaa in main main.c:97
  61:     #24 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  62: 
  63: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:11 in local_get_node
  64: Shadow bytes around the buggy address:
  65:   0x1c0800001b40: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  66:   0x1c0800001b50: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  67:   0x1c0800001b60: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  68:   0x1c0800001b70: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  69:   0x1c0800001b80: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  70: =>0x1c0800001b90: fa fa 00 00 00 00 00[fa]fa fa fd fd fd fd fd fd
  71:   0x1c0800001ba0: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  72:   0x1c0800001bb0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fa
  73:   0x1c0800001bc0: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  74:   0x1c0800001bd0: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  75:   0x1c0800001be0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  76: Shadow byte legend (one shadow byte represents 8 application bytes):
  77:   Addressable:           00
  78:   Partially addressable: 01 02 03 04 05 06 07 
  79:   Heap left redzone:       fa
  80:   Freed heap region:       fd
  81:   Stack left redzone:      f1
  82:   Stack mid redzone:       f2
  83:   Stack right redzone:     f3
  84:   Stack after return:      f5
  85:   Stack use after scope:   f8
  86:   Global redzone:          f9
  87:   Global init order:       f6
  88:   Poisoned by user:        f7
  89:   Container overflow:      fc
  90:   Array cookie:            ac
  91:   Intra object redzone:    bb
  92:   ASan internal:           fe
  93:   Left alloca redzone:     ca
  94:   Right alloca redzone:    cb
  95: ==56948==ABORTING
  96: ./lib/main.sh: line 102: 56948 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/001-without-any-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `exit` works and exit the Shell.[0m

  STDIN:
[38;5;239m  01: exit
  02: ./write_on_stdout "TOKEN201711172014"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==57070==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010c359bec bp 0x7fff53915870 sp 0x7fff539157c0 T0)
  04: ==57070==The signal is caused by a READ memory access.
  05: ==57070==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7f955a500830
  07:     #0 0x10c359beb in ft_atoi ft_atoi.c:11
  08:     #1 0x10c2ee8a3 in builtin_exit exit.c:14
  09:     #2 0x10c2ee648 in exec_builtin exec_builtin.c:46
  10:     #3 0x10c30c504 in exec_simple_command exec_simple_command.c:147
  11:     #4 0x10c307af5 in exec exec.c:39
  12:     #5 0x10c308ba4 in exec_command exec_command.c:20
  13:     #6 0x10c307af5 in exec exec.c:39
  14:     #7 0x10c30a2a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  15:     #8 0x10c307af5 in exec exec.c:39
  16:     #9 0x10c30ac84 in exec_pipeline exec_pipeline.c:83
  17:     #10 0x10c307af5 in exec exec.c:39
  18:     #11 0x10c307c41 in exec_and_or exec_and_or.c:13
  19:     #12 0x10c307af5 in exec exec.c:39
  20:     #13 0x10c308fa7 in exec_complete_command exec_complete_command.c:45
  21:     #14 0x10c307af5 in exec exec.c:39
  22:     #15 0x10c309261 in exec_complete_commands exec_complete_commands.c:10
  23:     #16 0x10c307af5 in exec exec.c:39
  24:     #17 0x10c30ae49 in exec_program exec_program.c:10
  25:     #18 0x10c307af5 in exec exec.c:39
  26:     #19 0x10c304fda in exec_main_loop lex_and_parse.c:24
  27:     #20 0x10c30594f in lex_and_parse lex_and_parse.c:94
  28:     #21 0x10c30610c in main_loop main_loop.c:52
  29:     #22 0x10c2eaaaa in main main.c:97
  30:     #23 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  31: 
  32: ==57070==Register values:
  33: rax = 0x0000000000000000  rbx = 0x00007fff539158c0  rcx = 0x0000000000000000  rdx = 0x0000100000000000  
  34: rdi = 0x0000000000000000  rsi = 0x0000602000018600  rbp = 0x00007fff53915870  rsp = 0x00007fff539157c0  
  35:  r8 = 0x00007fff53915802   r9 = 0x0000000000000001  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  36: r12 = 0x00007fff53916450  r13 = 0x00007fff53916470  r14 = 0x00007fff539163e0  r15 = 0x00007fff53916430  
  37: AddressSanitizer can not provide additional info.
  38: SUMMARY: AddressSanitizer: SEGV ft_atoi.c:11 in ft_atoi
  39: ==57070==ABORTING
  40: ./lib/main.sh: line 102: 57070 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/002-status-passed-as-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a number as first argument with the builtin `exit` results in the Shell termination with given number as exit status.[0m

  STDIN:
[38;5;239m  01: exit 42[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==57180==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010107dbec bp 0x7fff5ebf1870 sp 0x7fff5ebf17c0 T0)
  04: ==57180==The signal is caused by a READ memory access.
  05: ==57180==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7fab89d00830
  07:     #0 0x10107dbeb in ft_atoi ft_atoi.c:11
  08:     #1 0x1010128a3 in builtin_exit exit.c:14
  09:     #2 0x101012648 in exec_builtin exec_builtin.c:46
  10:     #3 0x101030504 in exec_simple_command exec_simple_command.c:147
  11:     #4 0x10102baf5 in exec exec.c:39
  12:     #5 0x10102cba4 in exec_command exec_command.c:20
  13:     #6 0x10102baf5 in exec exec.c:39
  14:     #7 0x10102e2a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  15:     #8 0x10102baf5 in exec exec.c:39
  16:     #9 0x10102ec84 in exec_pipeline exec_pipeline.c:83
  17:     #10 0x10102baf5 in exec exec.c:39
  18:     #11 0x10102bc41 in exec_and_or exec_and_or.c:13
  19:     #12 0x10102baf5 in exec exec.c:39
  20:     #13 0x10102cfa7 in exec_complete_command exec_complete_command.c:45
  21:     #14 0x10102baf5 in exec exec.c:39
  22:     #15 0x10102d261 in exec_complete_commands exec_complete_commands.c:10
  23:     #16 0x10102baf5 in exec exec.c:39
  24:     #17 0x10102ee49 in exec_program exec_program.c:10
  25:     #18 0x10102baf5 in exec exec.c:39
  26:     #19 0x101028fda in exec_main_loop lex_and_parse.c:24
  27:     #20 0x10102994f in lex_and_parse lex_and_parse.c:94
  28:     #21 0x10102a10c in main_loop main_loop.c:52
  29:     #22 0x10100eaaa in main main.c:97
  30:     #23 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  31: 
  32: ==57180==Register values:
  33: rax = 0x0000000000000000  rbx = 0x00007fff5ebf18c0  rcx = 0x0000000000000000  rdx = 0x0000100000000000  
  34: rdi = 0x0000000000000000  rsi = 0x0000602000018600  rbp = 0x00007fff5ebf1870  rsp = 0x00007fff5ebf17c0  
  35:  r8 = 0x00007fff5ebf1802   r9 = 0x0000000000000002  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  36: r12 = 0x00007fff5ebf2450  r13 = 0x00007fff5ebf2470  r14 = 0x00007fff5ebf23e0  r15 = 0x00007fff5ebf2430  
  37: AddressSanitizer can not provide additional info.
  38: SUMMARY: AddressSanitizer: SEGV ft_atoi.c:11 in ft_atoi
  39: ==57180==ABORTING
  40: ./lib/main.sh: line 102: 57180 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/003-status-of-last-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `exit` without any argument results in a Shell termination and the exit status of the previous command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: exit[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==57290==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0001010c2bec bp 0x7fff5ebac870 sp 0x7fff5ebac7c0 T0)
  04: ==57290==The signal is caused by a READ memory access.
  05: ==57290==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7fc6bc40dec0
  07:     #0 0x1010c2beb in ft_atoi ft_atoi.c:11
  08:     #1 0x1010578a3 in builtin_exit exit.c:14
  09:     #2 0x101057648 in exec_builtin exec_builtin.c:46
  10:     #3 0x101075504 in exec_simple_command exec_simple_command.c:147
  11:     #4 0x101070af5 in exec exec.c:39
  12:     #5 0x101071ba4 in exec_command exec_command.c:20
  13:     #6 0x101070af5 in exec exec.c:39
  14:     #7 0x1010732a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  15:     #8 0x101070af5 in exec exec.c:39
  16:     #9 0x101073c84 in exec_pipeline exec_pipeline.c:83
  17:     #10 0x101070af5 in exec exec.c:39
  18:     #11 0x101070c41 in exec_and_or exec_and_or.c:13
  19:     #12 0x101070af5 in exec exec.c:39
  20:     #13 0x101071fa7 in exec_complete_command exec_complete_command.c:45
  21:     #14 0x101070af5 in exec exec.c:39
  22:     #15 0x101072261 in exec_complete_commands exec_complete_commands.c:10
  23:     #16 0x101070af5 in exec exec.c:39
  24:     #17 0x101073e49 in exec_program exec_program.c:10
  25:     #18 0x101070af5 in exec exec.c:39
  26:     #19 0x10106dfda in exec_main_loop lex_and_parse.c:24
  27:     #20 0x10106e94f in lex_and_parse lex_and_parse.c:94
  28:     #21 0x10106f10c in main_loop main_loop.c:52
  29:     #22 0x101053aaa in main main.c:97
  30:     #23 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  31: 
  32: ==57290==Register values:
  33: rax = 0x0000000000000000  rbx = 0x00007fff5ebac8c0  rcx = 0x0000000000000000  rdx = 0x0000100000000000  
  34: rdi = 0x0000000000000000  rsi = 0x0000602000018600  rbp = 0x00007fff5ebac870  rsp = 0x00007fff5ebac7c0  
  35:  r8 = 0x00007fff5ebac802   r9 = 0x0000000000000001  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  36: r12 = 0x00007fff5ebad450  r13 = 0x00007fff5ebad470  r14 = 0x00007fff5ebad3e0  r15 = 0x00007fff5ebad430  
  37: AddressSanitizer can not provide additional info.
  38: SUMMARY: AddressSanitizer: SEGV ft_atoi.c:11 in ft_atoi
  39: ==57290==ABORTING
  40: ./lib/main.sh: line 102: 57290 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/001-too-many-args[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong number of arguments with the builtin `exit` does not result in the Shell termination but an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit 21 42
  02: ./write_on_stdout TOKEN201711172014[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711172014`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Tt]oo many arguments|[Aa]rgument list too long)`[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==57402==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000104109bec bp 0x7fff5bb65870 sp 0x7fff5bb657c0 T0)
  04: ==57402==The signal is caused by a READ memory access.
  05: ==57402==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7feeee500830
  07:     #0 0x104109beb in ft_atoi ft_atoi.c:11
  08:     #1 0x10409e8a3 in builtin_exit exit.c:14
  09:     #2 0x10409e648 in exec_builtin exec_builtin.c:46
  10:     #3 0x1040bc504 in exec_simple_command exec_simple_command.c:147
  11:     #4 0x1040b7af5 in exec exec.c:39
  12:     #5 0x1040b8ba4 in exec_command exec_command.c:20
  13:     #6 0x1040b7af5 in exec exec.c:39
  14:     #7 0x1040ba2a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  15:     #8 0x1040b7af5 in exec exec.c:39
  16:     #9 0x1040bac84 in exec_pipeline exec_pipeline.c:83
  17:     #10 0x1040b7af5 in exec exec.c:39
  18:     #11 0x1040b7c41 in exec_and_or exec_and_or.c:13
  19:     #12 0x1040b7af5 in exec exec.c:39
  20:     #13 0x1040b8fa7 in exec_complete_command exec_complete_command.c:45
  21:     #14 0x1040b7af5 in exec exec.c:39
  22:     #15 0x1040b9261 in exec_complete_commands exec_complete_commands.c:10
  23:     #16 0x1040b7af5 in exec exec.c:39
  24:     #17 0x1040bae49 in exec_program exec_program.c:10
  25:     #18 0x1040b7af5 in exec exec.c:39
  26:     #19 0x1040b4fda in exec_main_loop lex_and_parse.c:24
  27:     #20 0x1040b594f in lex_and_parse lex_and_parse.c:94
  28:     #21 0x1040b610c in main_loop main_loop.c:52
  29:     #22 0x10409aaaa in main main.c:97
  30:     #23 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  31: 
  32: ==57402==Register values:
  33: rax = 0x0000000000000000  rbx = 0x00007fff5bb658c0  rcx = 0x0000000000000000  rdx = 0x0000100000000000  
  34: rdi = 0x0000000000000000  rsi = 0x0000602000018600  rbp = 0x00007fff5bb65870  rsp = 0x00007fff5bb657c0  
  35:  r8 = 0x00007fff5bb65802   r9 = 0x0000000000000003  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  36: r12 = 0x00007fff5bb66450  r13 = 0x00007fff5bb66470  r14 = 0x00007fff5bb663e0  r15 = 0x00007fff5bb66430  
  37: AddressSanitizer can not provide additional info.
  38: SUMMARY: AddressSanitizer: SEGV ft_atoi.c:11 in ft_atoi
  39: ==57402==ABORTING
  40: ./lib/main.sh: line 102: 57402 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/002-non-numeric-argument[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-numeric argument with the builtin `exit` results in the Shell termination and an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit abc
  02: ./write_on_stdout TOKEN201711172014[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711172014`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Nn]umeric argument required`[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==57535==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010331abec bp 0x7fff5c954870 sp 0x7fff5c9547c0 T0)
  04: ==57535==The signal is caused by a READ memory access.
  05: ==57535==Hint: address points to the zero page.
  06: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7f8e6e500830
  07:     #0 0x10331abeb in ft_atoi ft_atoi.c:11
  08:     #1 0x1032af8a3 in builtin_exit exit.c:14
  09:     #2 0x1032af648 in exec_builtin exec_builtin.c:46
  10:     #3 0x1032cd504 in exec_simple_command exec_simple_command.c:147
  11:     #4 0x1032c8af5 in exec exec.c:39
  12:     #5 0x1032c9ba4 in exec_command exec_command.c:20
  13:     #6 0x1032c8af5 in exec exec.c:39
  14:     #7 0x1032cb2a5 in exec_pipe_sequence exec_pipe_sequence.c:9
  15:     #8 0x1032c8af5 in exec exec.c:39
  16:     #9 0x1032cbc84 in exec_pipeline exec_pipeline.c:83
  17:     #10 0x1032c8af5 in exec exec.c:39
  18:     #11 0x1032c8c41 in exec_and_or exec_and_or.c:13
  19:     #12 0x1032c8af5 in exec exec.c:39
  20:     #13 0x1032c9fa7 in exec_complete_command exec_complete_command.c:45
  21:     #14 0x1032c8af5 in exec exec.c:39
  22:     #15 0x1032ca261 in exec_complete_commands exec_complete_commands.c:10
  23:     #16 0x1032c8af5 in exec exec.c:39
  24:     #17 0x1032cbe49 in exec_program exec_program.c:10
  25:     #18 0x1032c8af5 in exec exec.c:39
  26:     #19 0x1032c5fda in exec_main_loop lex_and_parse.c:24
  27:     #20 0x1032c694f in lex_and_parse lex_and_parse.c:94
  28:     #21 0x1032c710c in main_loop main_loop.c:52
  29:     #22 0x1032abaaa in main main.c:97
  30:     #23 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  31: 
  32: ==57535==Register values:
  33: rax = 0x0000000000000000  rbx = 0x00007fff5c9548c0  rcx = 0x0000000000000000  rdx = 0x0000100000000000  
  34: rdi = 0x0000000000000000  rsi = 0x0000602000018600  rbp = 0x00007fff5c954870  rsp = 0x00007fff5c9547c0  
  35:  r8 = 0x00007fff5c954802   r9 = 0x0000000000000002  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  36: r12 = 0x00007fff5c955450  r13 = 0x00007fff5c955470  r14 = 0x00007fff5c9553e0  r15 = 0x00007fff5c955430  
  37: AddressSanitizer can not provide additional info.
  38: SUMMARY: AddressSanitizer: SEGV ft_atoi.c:11 in ft_atoi
  39: ==57535==ABORTING
  40: ./lib/main.sh: line 102: 57535 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/002-add-new-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `setenv` (or `export`) can add a new variable to the environment, either with the syntax `setenv KEY VALUE` or with `setenv KEY=VALUE`.[0m

  Before test:
[38;5;239m  01: unset "TESTVAR1"[0m

  STDIN:
[38;5;239m  01: setenv TESTVAR1 VALUE_TOKEN201711172014
  02: ./display_env
  03: 
  04: setenv TESTVAR1=VALUE_TOKEN201711172014
  05: ./display_env
  06: 
  07: export TESTVAR1=VALUE_TOKEN201711172014
  08: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR1=VALUE_TOKEN201711172014`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=/Users/vcombey/.42sh_history
  42: ------------------------------
  43: TOTAL ENVIRONMENT VARIABLES: 40[0m

  STDERR:
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..
  02: ASAN:DEADLYSIGNAL
  03: =================================================================
  04: ==58027==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000101a609ef bp 0x7fff5e1de390 sp 0x7fff5e1de220 T0)
  05: ==58027==The signal is caused by a READ memory access.
  06: ==58027==Hint: address points to the zero page.
  07: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7fd810600300
  08:     #0 0x101a609ee in get_token_list get_token_list.c:227
  09:     #1 0x101a3d5af in lex_and_parse lex_and_parse.c:70
  10:     #2 0x101a3e10c in main_loop main_loop.c:52
  11:     #3 0x101a22aaa in main main.c:97
  12:     #4 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  13: 
  14: ==58027==Register values:
  15: rax = 0x0000000000000000  rbx = 0x00007fff5e1de260  rcx = 0x0000000000000000  rdx = 0x0000000000000000  
  16: rdi = 0x00001fffebc3bc00  rsi = 0x0000100000000000  rbp = 0x00007fff5e1de390  rsp = 0x00007fff5e1de220  
  17:  r8 = 0x00007fff5e1de240   r9 = 0x182add7e947c00c4  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  18: r12 = 0x00007fff5e1de450  r13 = 0x00007fff5e1de470  r14 = 0x00007fff5e1de3e0  r15 = 0x00007fff5e1de430  
  19: AddressSanitizer can not provide additional info.
  20: SUMMARY: AddressSanitizer: SEGV get_token_list.c:227 in get_token_list
  21: ==58027==ABORTING
  22: ./lib/main.sh: line 102: 58027 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/003-set-existing-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `setenv` (or `export`) can add a new variable to the environment, either with the syntax `setenv KEY VALUE` or with `setenv KEY=VALUE`.[0m

  Before test:
[38;5;239m  01: export "TESTVAR1=OLD_TOKEN201711172014"[0m

  STDIN:
[38;5;239m  01: setenv TESTVAR1 NEW_TOKEN201711172014
  02: ./display_env
  03: 
  04: setenv TESTVAR1=NEW_TOKEN201711172014
  05: ./display_env
  06: 
  07: export TESTVAR1=NEW_TOKEN201711172014
  08: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR1=NEW_TOKEN201711172014`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: OLDPWD=/Users/vcombey/42ShellTester
  11: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: TESTVAR1=OLD_TOKEN201711172014
  16: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  17: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  18: PAGER=less
  19: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  20: DOTFILES=/Users/vcombey/.dotfiles
  21: LSCOLORS=HxBxcxdxbxegedabagacad
  22: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  23: ZSHRC=/Users/vcombey/.zshrc
  24: PWD=/Users/vcombey/42ShellTester/tmp
  25: EDITOR=vim
  26: BASE16_THEME=base16-nord
  27: LANG=en_US.UTF-8
  28: ITERM_PROFILE=Default
  29: XPC_FLAGS=0x0
  30: XPC_SERVICE_NAME=0
  31: INSTALL_ROOT=/Users/vcombey/.sbcl
  32: SHLVL=3
  33: HOME=/Users/vcombey
  34: COLORFGBG=7;0
  35: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  36: LESS=-R
  37: LOGNAME=vcombey
  38: VISUAL=vim
  39: LC_CTYPE=en_US.UTF-8
  40: COLORTERM=truecolor
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=/Users/vcombey/.42sh_history
  43: ------------------------------
  44: TOTAL ENVIRONMENT VARIABLES: 41[0m

  STDERR:
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..
  02: ASAN:DEADLYSIGNAL
  03: =================================================================
  04: ==58164==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010fed99ef bp 0x7fff4fd65370 sp 0x7fff4fd65200 T0)
  05: ==58164==The signal is caused by a READ memory access.
  06: ==58164==Hint: address points to the zero page.
  07: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7fddca500830
  08:     #0 0x10fed99ee in get_token_list get_token_list.c:227
  09:     #1 0x10feb65af in lex_and_parse lex_and_parse.c:70
  10:     #2 0x10feb710c in main_loop main_loop.c:52
  11:     #3 0x10fe9baaa in main main.c:97
  12:     #4 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  13: 
  14: ==58164==Register values:
  15: rax = 0x0000000000000000  rbx = 0x00007fff4fd65240  rcx = 0x0000000000000000  rdx = 0x0000000000000000  
  16: rdi = 0x00001fffe9faca00  rsi = 0x0000100000000000  rbp = 0x00007fff4fd65370  rsp = 0x00007fff4fd65200  
  17:  r8 = 0x00007fff4fd65220   r9 = 0x7c389210460e007e  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  18: r12 = 0x00007fff4fd65430  r13 = 0x00007fff4fd65450  r14 = 0x00007fff4fd653c0  r15 = 0x00007fff4fd65410  
  19: AddressSanitizer can not provide additional info.
  20: SUMMARY: AddressSanitizer: SEGV get_token_list.c:227 in get_token_list
  21: ==58164==ABORTING
  22: ./lib/main.sh: line 102: 58164 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/004-invalid-identifier[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong variable name with the builtin `setenv` (or `export`) results in error.[0m

  STDIN:
[38;5;239m  01: setenv 42
  02: export 42[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/005-add-and-set-multiple-variables[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `setenv` (or `export`) can add multiples variables into the environment, either with the syntax `setenv KEY VALUE` or with `setenv KEY=VALUE`.[0m

  Before test:
[38;5;239m  01: unset "TESTVAR1"
  02: unset "TESTVAR2"
  03: unset "TESTVAR3"
  04: unset "TESTVAR4"
  05: unset "TESTVAR5"
  06: unset "TESTVAR6"
  07: unset "TESTVAR7"
  08: unset "TESTVAR8"
  09: unset "TESTVAR9"
  10: unset "TESTVAR10"
  11: 
  12: export "TEST2VAR1=OLD_TOKEN201711172014_1"
  13: export "TEST2VAR2=OLD_TOKEN201711172014_2"
  14: export "TEST2VAR3=OLD_TOKEN201711172014_3"
  15: export "TEST2VAR4=OLD_TOKEN201711172014_4"
  16: export "TEST2VAR5=OLD_TOKEN201711172014_5"
  17: export "TEST2VAR6=OLD_TOKEN201711172014_6"
  18: export "TEST2VAR7=OLD_TOKEN201711172014_7"
  19: export "TEST2VAR8=OLD_TOKEN201711172014_8"
  20: export "TEST2VAR9=OLD_TOKEN201711172014_9"
  21: export "TEST2VAR10=OLD_TOKEN201711172014_10"[0m

  STDIN:
[38;5;239m  01: setenv TESTVAR1 VALUE_TOKEN201711172014_1
  02: setenv TEST2VAR1 VALUE_TOKEN201711172014_1
  03: setenv TESTVAR2 VALUE_TOKEN201711172014_2
  04: setenv TEST2VAR2 VALUE_TOKEN201711172014_2
  05: setenv TESTVAR3 VALUE_TOKEN201711172014_3
  06: setenv TEST2VAR3 VALUE_TOKEN201711172014_3
  07: setenv TESTVAR4 VALUE_TOKEN201711172014_4
  08: setenv TEST2VAR4 VALUE_TOKEN201711172014_4
  09: setenv TESTVAR5 VALUE_TOKEN201711172014_5
  10: setenv TEST2VAR5 VALUE_TOKEN201711172014_5
  11: setenv TESTVAR6 VALUE_TOKEN201711172014_6
  12: setenv TEST2VAR6 VALUE_TOKEN201711172014_6
  13: setenv TESTVAR7 VALUE_TOKEN201711172014_7
  14: setenv TEST2VAR7 VALUE_TOKEN201711172014_7
  15: setenv TESTVAR8 VALUE_TOKEN201711172014_8
  16: setenv TEST2VAR8 VALUE_TOKEN201711172014_8
  17: setenv TESTVAR9 VALUE_TOKEN201711172014_9
  18: setenv TEST2VAR9 VALUE_TOKEN201711172014_9
  19: setenv TESTVAR10 VALUE_TOKEN201711172014_10
  20: setenv TEST2VAR10 VALUE_TOKEN201711172014_10
  21: ./display_env
  22: 
  23: setenv TESTVAR1=VALUE_TOKEN201711172014_1
  24: setenv TEST2VAR1=VALUE_TOKEN201711172014_1
  25: setenv TESTVAR2=VALUE_TOKEN201711172014_2
  26: setenv TEST2VAR2=VALUE_TOKEN201711172014_2
  27: setenv TESTVAR3=VALUE_TOKEN201711172014_3
  28: setenv TEST2VAR3=VALUE_TOKEN201711172014_3
  29: setenv TESTVAR4=VALUE_TOKEN201711172014_4
  30: setenv TEST2VAR4=VALUE_TOKEN201711172014_4
  31: setenv TESTVAR5=VALUE_TOKEN201711172014_5
  32: setenv TEST2VAR5=VALUE_TOKEN201711172014_5
  33: setenv TESTVAR6=VALUE_TOKEN201711172014_6
  34: setenv TEST2VAR6=VALUE_TOKEN201711172014_6
  35: setenv TESTVAR7=VALUE_TOKEN201711172014_7
  36: setenv TEST2VAR7=VALUE_TOKEN201711172014_7
  37: setenv TESTVAR8=VALUE_TOKEN201711172014_8
  38: setenv TEST2VAR8=VALUE_TOKEN201711172014_8
  39: setenv TESTVAR9=VALUE_TOKEN201711172014_9
  40: setenv TEST2VAR9=VALUE_TOKEN201711172014_9
  41: setenv TESTVAR10=VALUE_TOKEN201711172014_10
  42: setenv TEST2VAR10=VALUE_TOKEN201711172014_10
  43: ./display_env
  44: 
  45: export TESTVAR1=VALUE_TOKEN201711172014_1
  46: export TEST2VAR1=VALUE_TOKEN201711172014_1
  47: export TESTVAR2=VALUE_TOKEN201711172014_2
  48: export TEST2VAR2=VALUE_TOKEN201711172014_2
  49: export TESTVAR3=VALUE_TOKEN201711172014_3
  50: export TEST2VAR3=VALUE_TOKEN201711172014_3
  51: export TESTVAR4=VALUE_TOKEN201711172014_4
  52: export TEST2VAR4=VALUE_TOKEN201711172014_4
  53: export TESTVAR5=VALUE_TOKEN201711172014_5
  54: export TEST2VAR5=VALUE_TOKEN201711172014_5
  55: export TESTVAR6=VALUE_TOKEN201711172014_6
  56: export TEST2VAR6=VALUE_TOKEN201711172014_6
  57: export TESTVAR7=VALUE_TOKEN201711172014_7
  58: export TEST2VAR7=VALUE_TOKEN201711172014_7
  59: export TESTVAR8=VALUE_TOKEN201711172014_8
  60: export TEST2VAR8=VALUE_TOKEN201711172014_8
  61: export TESTVAR9=VALUE_TOKEN201711172014_9
  62: export TEST2VAR9=VALUE_TOKEN201711172014_9
  63: export TESTVAR10=VALUE_TOKEN201711172014_10
  64: export TEST2VAR10=VALUE_TOKEN201711172014_10
  65: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR1=VALUE_TOKEN201711172014_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR2=VALUE_TOKEN201711172014_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR3=VALUE_TOKEN201711172014_3`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR4=VALUE_TOKEN201711172014_4`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR5=VALUE_TOKEN201711172014_5`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR6=VALUE_TOKEN201711172014_6`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR7=VALUE_TOKEN201711172014_7`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR8=VALUE_TOKEN201711172014_8`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR9=VALUE_TOKEN201711172014_9`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVAR10=VALUE_TOKEN201711172014_10`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR1=VALUE_TOKEN201711172014_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR2=VALUE_TOKEN201711172014_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR3=VALUE_TOKEN201711172014_3`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR4=VALUE_TOKEN201711172014_4`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR5=VALUE_TOKEN201711172014_5`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR6=VALUE_TOKEN201711172014_6`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR7=VALUE_TOKEN201711172014_7`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR8=VALUE_TOKEN201711172014_8`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR9=VALUE_TOKEN201711172014_9`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST2VAR10=VALUE_TOKEN201711172014_10`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.QhYciHFxBs/Render
  09: TERM_PROGRAM_VERSION=3.1.5
  10: OLDPWD=/Users/vcombey/42ShellTester
  11: TERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.KDrDGwfdIj/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: TEST2VAR10=OLD_TOKEN201711172014_10
  30: XPC_SERVICE_NAME=0
  31: INSTALL_ROOT=/Users/vcombey/.sbcl
  32: SHLVL=3
  33: HOME=/Users/vcombey
  34: COLORFGBG=7;0
  35: ITERM_SESSION_ID=w0t0p2:70C352C2-C53C-4523-9204-98B69C117F3D
  36: LESS=-R
  37: LOGNAME=vcombey
  38: VISUAL=vim
  39: LC_CTYPE=en_US.UTF-8
  40: TEST2VAR9=OLD_TOKEN201711172014_9
  41: TEST2VAR8=OLD_TOKEN201711172014_8
  42: TEST2VAR7=OLD_TOKEN201711172014_7
  43: TEST2VAR6=OLD_TOKEN201711172014_6
  44: TEST2VAR5=OLD_TOKEN201711172014_5
  45: TEST2VAR4=OLD_TOKEN201711172014_4
  46: TEST2VAR3=OLD_TOKEN201711172014_3
  47: TEST2VAR2=OLD_TOKEN201711172014_2
  48: TEST2VAR1=OLD_TOKEN201711172014_1
  49: COLORTERM=truecolor
  50: _=/Users/vcombey/42/42sh/42sh
  51: HISTFILE=/Users/vcombey/.42sh_history
  52: ------------------------------
  53: TOTAL ENVIRONMENT VARIABLES: 50[0m

  STDERR:
[38;5;239m  01: usage: setenv key1=value1 key2=value2 ..
  02: usage: setenv key1=value1 key2=value2 ..
  03: usage: setenv key1=value1 key2=value2 ..
  04: usage: setenv key1=value1 key2=value2 ..
  05: usage: setenv key1=value1 key2=value2 ..
  06: usage: setenv key1=value1 key2=value2 ..
  07: usage: setenv key1=value1 key2=value2 ..
  08: usage: setenv key1=value1 key2=value2 ..
  09: usage: setenv key1=value1 key2=value2 ..
  10: usage: setenv key1=value1 key2=value2 ..
  11: usage: setenv key1=value1 key2=value2 ..
  12: usage: setenv key1=value1 key2=value2 ..
  13: usage: setenv key1=value1 key2=value2 ..
  14: usage: setenv key1=value1 key2=value2 ..
  15: usage: setenv key1=value1 key2=value2 ..
  16: usage: setenv key1=value1 key2=value2 ..
  17: usage: setenv key1=value1 key2=value2 ..
  18: usage: setenv key1=value1 key2=value2 ..
  19: usage: setenv key1=value1 key2=value2 ..
  20: usage: setenv key1=value1 key2=value2 ..
  21: ASAN:DEADLYSIGNAL
  22: =================================================================
  23: ==58471==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0001053f99ef bp 0x7fff5a8451f0 sp 0x7fff5a845080 T0)
  24: ==58471==The signal is caused by a READ memory access.
  25: ==58471==Hint: address points to the zero page.
  26: Provided dSYM: [/Users/vcombey/42/42sh/42sh.dSYM/Contents/Resources/DWARF/42sh] does not match symbol owner 0x7fd174c0dec0
  27:     #0 0x1053f99ee in get_token_list get_token_list.c:227
  28:     #1 0x1053d65af in lex_and_parse lex_and_parse.c:70
  29:     #2 0x1053d710c in main_loop main_loop.c:52
  30:     #3 0x1053bbaaa in main main.c:97
  31:     #4 0x7fffdf675234 in start (libdyld.dylib:x86_64+0x5234)
  32: 
  33: ==58471==Register values:
  34: rax = 0x0000000000000000  rbx = 0x00007fff5a8450c0  rcx = 0x0000000000000000  rdx = 0x0000000000000000  
  35: rdi = 0x00001fffeb508a00  rsi = 0x0000100000000000  rbp = 0x00007fff5a8451f0  rsp = 0x00007fff5a845080  
  36:  r8 = 0x00007fff5a8450a0   r9 = 0x3b7c74380b0100ff  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  37: r12 = 0x00007fff5a8452b0  r13 = 0x00007fff5a8452d0  r14 = 0x00007fff5a845240  r15 = 0x00007fff5a845290  
  38: AddressSanitizer can not provide additional info.
  39: SUMMARY: AddressSanitizer: SEGV get_token_list.c:227 in get_token_list
  40: ==58471==ABORTING
  41: ./lib/main.sh: line 102: 58471 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

Total tests: 283
Total failed tests: 124
Total pending tests: 2
