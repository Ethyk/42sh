[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m                                                                                                                                                                                                                                                                  

----------------------------------------------------------------

[37;1m42sh/builtins/export/001-display-env[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` without parameters results at least in a display of the environment variables.[0m

  Before test:
[38;5;239m  01: rm -rf "./stored_env"
  02: env | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/002-export-basic-key-value-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` may declare a new environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711082109_NAME=TOKEN201711082109_VALUE
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_NAME=TOKEN201711082109_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: test=Well well well
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=7
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/003-export-basic-key-value-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` may declare a new environment variable and is able to display it later.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711082109_NAME=TOKEN201711082109_VALUE
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_NAME=["]?TOKEN201711082109_VALUE["]?$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/004-export-empty-variable-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711082109
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: test=Well well well
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=7
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/005-export-empty-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment, but can be displayed with the builtin `export`.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711082109
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/006-export-update-env-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting the same variable twice in a row does result in an updated variable, but not in a duplicated variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711082109_NAME=TOKEN201711082109_VALUE1
  02: export TOKEN201711082109_NAME=TOKEN201711082109_VALUE2
  03: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109_NAME=TOKEN201711082109_VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_NAME=TOKEN201711082109_VALUE2`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: test=Well well well
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=7
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/007-existing-environment-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an existing variable results in an updated variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711082109_NAME=TOKEN201711082109_VALUE1"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711082109_NAME=TOKEN201711082109_VALUE2
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711082109_NAME=TOKEN201711082109_VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_NAME=TOKEN201711082109_VALUE2`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: OLDPWD=/Users/vcombey/42ShellTester
  11: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: test=Well well well
  31: INSTALL_ROOT=/Users/vcombey/.sbcl
  32: SHLVL=7
  33: HOME=/Users/vcombey
  34: COLORFGBG=7;0
  35: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  36: LESS=-R
  37: LOGNAME=vcombey
  38: VISUAL=vim
  39: LC_CTYPE=en_US.UTF-8
  40: TOKEN201711082109_NAME=TOKEN201711082109_VALUE1
  41: COLORTERM=truecolor
  42: _=/Users/vcombey/42/42sh/42sh
  43: HISTFILE=.42sh_history
  44: PS1=$> 
  45: PS2=dquote> 
  46: PS3=quote> 
  47: ------------------------------
  48: TOTAL ENVIRONMENT VARIABLES: 45[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/008-local-to-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a declared local variable may be exported to the environment with the builtin `export`.[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_VALUE
  02: export TOKEN201711082109_NAME
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_NAME=TOKEN201711082109_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==52005==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000101306700 bp 0x7fff5e949d80 sp 0x7fff5e949d00 T0)
  04: ==52005==The signal is caused by a READ memory access.
  05: ==52005==Hint: address points to the zero page.
  06:     #0 0x1013066ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x101306c6c in ft_strequ ft_strequ.c:6
  08:     #2 0x1012b87cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x1012f4e49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x1012f53bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x1012f2705 in exec exec.c:39
  12:     #6 0x1012f2841 in exec_and_or exec_and_or.c:13
  13:     #7 0x1012f2705 in exec exec.c:39
  14:     #8 0x1012f3b40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x1012f2705 in exec exec.c:39
  16:     #10 0x1012f3de1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x1012f2705 in exec exec.c:39
  18:     #12 0x1012f3e23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x1012f2705 in exec exec.c:39
  20:     #14 0x1012f3e23 in exec_complete_commands exec_complete_commands.c:11
  21:     #15 0x1012f2705 in exec exec.c:39
  22:     #16 0x1012f56a9 in exec_program exec_program.c:10
  23:     #17 0x1012f2705 in exec exec.c:39
  24:     #18 0x1012efd75 in exec_main_loop lex_and_parse.c:18
  25:     #19 0x1012f0532 in lex_and_parse lex_and_parse.c:79
  26:     #20 0x1012f0d29 in main_loop main_loop.c:71
  27:     #21 0x1012fb571 in main main.c:78
  28:     #22 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: ==52005==Register values:
  31: rax = 0x0000000000000000  rbx = 0x00007fff5e949e80  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  32: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5e949d80  rsp = 0x00007fff5e949d00  
  33:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x000000000006a02f  r11 = 0x00000001047dccf0  
  34: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5e94a510  r15 = 0x00007fff5e94a530  
  35: AddressSanitizer can not provide additional info.
  36: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  37: ==52005==ABORTING
  38: ./lib/main.sh: line 102: 52005 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/009-export-with-equal-but-no-value-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the builtin export works fine with equal sign but no value. This test is based on the environment variables return.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711082109_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_NAME=`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: test=Well well well
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=7
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/010-export-with-equal-but-no-value-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the builtin export works fine with equal sign but no value. This test is based on the local variables return.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711082109_NAME=
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_NAME=`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/001-invalid-identifier-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export 42=TOKEN201711082109[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: export: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/002-invalid-identifier-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export .=TOKEN201711082109[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: export: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/003-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with an illegal option results in an error and a failure exit status.[0m

  STDIN:
[38;5;239m  01: export -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: export: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/001-export-and-tmp-env-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added variable into the exported list.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_VALUE export TOKEN201711082109_NAME
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_NAME=["]?TOKEN201711082109_VALUE["]?`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/002-export-and-tmp-env-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_VALUE export TOKEN201711082109_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_NAME=TOKEN201711082109_VALUE`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: test=Well well well
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=7
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/001-export-with-only-p-parameter[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with the option `-p` results at least in a display of the environment variables.[0m

  Before test:
[38;5;239m  01: rm -rf "./stored_env"
  02: env | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/002-export-p-param-and-token-should-add-local-var-only-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if export with -p option + token , add the variable into export list but not in env list. And don't display the export variable on stdout.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711082109_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711082109_NAME
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/003-export-p-param-and-token-should-add-local-var-only-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` with option `-p` results in an added variable into the export list but not from the environment.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711082109_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711082109_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109_NAME`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: test=Well well well
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=7
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/004-export-n-param[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that using the builtin `export` with option `-n` results in a removed environment variable.[0m

  Before test:
[38;5;239m  01: export TOKEN201711082109_NAME=TOKEN201711082109_VALUE[0m

  STDIN:
[38;5;239m  01: export -n TOKEN201711082109_NAME
  02: export
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711082109_NAME`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: OLDPWD=/Users/vcombey/42ShellTester
  11: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  12: ZSH=/Users/vcombey/.oh-my-zsh
  13: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  14: USER=vcombey
  15: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  16: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  17: PAGER=less
  18: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  19: DOTFILES=/Users/vcombey/.dotfiles
  20: LSCOLORS=HxBxcxdxbxegedabagacad
  21: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  22: ZSHRC=/Users/vcombey/.zshrc
  23: PWD=/Users/vcombey/42ShellTester/tmp
  24: EDITOR=vim
  25: BASE16_THEME=base16-nord
  26: LANG=en_US.UTF-8
  27: ITERM_PROFILE=Default
  28: XPC_FLAGS=0x0
  29: XPC_SERVICE_NAME=0
  30: test=Well well well
  31: INSTALL_ROOT=/Users/vcombey/.sbcl
  32: SHLVL=7
  33: HOME=/Users/vcombey
  34: COLORFGBG=7;0
  35: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  36: LESS=-R
  37: LOGNAME=vcombey
  38: VISUAL=vim
  39: LC_CTYPE=en_US.UTF-8
  40: TOKEN201711082109_NAME=TOKEN201711082109_VALUE
  41: COLORTERM=truecolor
  42: _=/Users/vcombey/42/42sh/42sh
  43: HISTFILE=.42sh_history
  44: PS1=$> 
  45: PS2=dquote> 
  46: PS3=quote> 
  47: ------------------------------
  48: TOTAL ENVIRONMENT VARIABLES: 45[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/001-escape-single-character-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711082109\TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109TOKEN201711082109$`[0m
[38;5;239m  01: TOKEN201711082109\TOKEN201711082109[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/002-escape-single-character-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711082109\\TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109\TOKEN201711082109$`[0m
[38;5;239m  01: TOKEN201711082109\\TOKEN201711082109[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/003-escape-single-character-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711082109\\\TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109\TOKEN201711082109$`[0m
[38;5;239m  01: TOKEN201711082109\\\TOKEN201711082109[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/004-escape-single-character-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711082109\\\\TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109\\TOKEN201711082109$`[0m
[38;5;239m  01: TOKEN201711082109\\\\TOKEN201711082109[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/005-escape-single-character-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TEST4\041TEST[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TEST4041TEST$`[0m
[38;5;239m  01: TEST4\041TEST[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping braces does not result in an expansion process.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \{1..2} {1\..2} {1.\.2} {1..2\}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[{]1..2}@[{]1..2}@[{]1..2}@[{]1..2}@$`[0m
[38;5;239m  01: \{1..2}@{1\..2}@{1.\.2}@{1..2\}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/002-it-expands-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\1@\2@$`[0m
[38;5;239m  01: \\{1..2}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/003-it-expands-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\\{1..2} \\\\{1..2} \\\\\{1..2} \\\\\\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\[{]1..2}@\\1@\\2@\\[{]1..2}@\\\1@\\\2@$`[0m
[38;5;239m  01: \\\{1..2}@\\\\{1..2}@\\\\\{1..2}@\\\\\\{1..2}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/001-it-does-not-expand-brackets[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping brackets does not result in an expansion process.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout \[abc] [abc\] \[abc\][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[[]abc]@[[]abc]@[[]abc]@$`[0m
[38;5;239m  01: \[abc]@[abc\]@\[abc\]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/002-escaped-inversion-mark[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an inversion mark `!` or `^` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '!' '^'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\!abc]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\^abc][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `!@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[\^]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[1;33m  WARNING    might match_regex `^!@a@b@c@$`[0m
[31m[1;33m  WARNING    might match_regex `^[\^]@a@b@c@$`[0m
[38;5;239m  01: [\!abc]@
  02: [\^abc]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/003-it-takes-escaped-bracket-as-pattern-character[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a closing bracket ']' may be escaped in a backet expansion pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' ']'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\]def]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\]def]
  03: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\]def]
  04: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\\\]def][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@` 4 times[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@b@c@d@e@f@$`[0m
[38;5;239m  01: [abc\]def]@
  02: [abc\\\]def]@
  03: [abc\\\\\]def]@
  04: [abc\\\\\\\]def]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/002-it-does-not-escape-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol of variable expansion `$` does result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711082109_NAME=TOKEN201711082109_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\$TOKEN201711082109_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711082109_NAME`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_VALUE`[0m
[38;5;239m  01: \\$TOKEN201711082109_NAME[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..e}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@b@c@d@e@$`[0m
[38;5;239m  01: {a..e}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711082109{a..e}TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109aTOKEN201711082109@TOKEN201711082109bTOKEN201711082109@TOKEN201711082109cTOKEN201711082109@TOKEN201711082109dTOKEN201711082109@TOKEN201711082109eTOKEN201711082109@$`[0m
[38;5;239m  01: TOKEN201711082109{a..e}TOKEN201711082109@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..E}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@$`[0m
[38;5;239m  01: {A..E}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/004-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {E..A}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^E@D@C@B@A@$`[0m
[38;5;239m  01: {E..A}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/005-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711082109{E..A}TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109ETOKEN201711082109@TOKEN201711082109DTOKEN201711082109@TOKEN201711082109CTOKEN201711082109@TOKEN201711082109BTOKEN201711082109@TOKEN201711082109ATOKEN201711082109@$`[0m
[38;5;239m  01: TOKEN201711082109{E..A}TOKEN201711082109@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/006-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711082109{e..a}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109e@TOKEN201711082109d@TOKEN201711082109c@TOKEN201711082109b@TOKEN201711082109a@$`[0m
[38;5;239m  01: TOKEN201711082109{e..a}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/007-identical-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single ASCII value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {f..f}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^f@$`[0m
[38;5;239m  01: {f..f}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/008-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..b}{c..d}{e..f}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^ace@acf@ade@adf@bce@bcf@bde@bdf@$`[0m
[38;5;239m  01: {a..b}{c..d}{e..f}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/009-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711082109{a..b}abc{Z..X}def{s..s}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109aabcZdefs@TOKEN201711082109aabcYdefs@TOKEN201711082109aabcXdefs@TOKEN201711082109babcZdefs@TOKEN201711082109babcYdefs@TOKEN201711082109babcXdefs@$`[0m
[38;5;239m  01: TOKEN201711082109{a..b}abc{Z..X}def{s..s}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/010-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..z}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@.+@.?@.+@.+@_@.+@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@$`[0m
[38;5;239m  01: {A..z}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/002-simple-test-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed when at least one comma `,` is encountered.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711082109_A,TOKEN201711082109_B}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_A@TOKEN201711082109_B@$`[0m
[38;5;239m  01: {TOKEN201711082109_A,TOKEN201711082109_B}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/003-simple-test-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed with a list of three patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711082109_A,TOKEN201711082109_B,TOKEN201711082109_C}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_A@TOKEN201711082109_B@TOKEN201711082109_C@$`[0m
[38;5;239m  01: {TOKEN201711082109_A,TOKEN201711082109_B,TOKEN201711082109_C}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^1@2@3@4@5@$`[0m
[38;5;239m  01: {1..5}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711082109{1..5}TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110821091TOKEN201711082109@TOKEN2017110821092TOKEN201711082109@TOKEN2017110821093TOKEN201711082109@TOKEN2017110821094TOKEN201711082109@TOKEN2017110821095TOKEN201711082109@$`[0m
[38;5;239m  01: TOKEN201711082109{1..5}TOKEN201711082109@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711082109{1..+5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110821091@TOKEN2017110821092@TOKEN2017110821093@TOKEN2017110821094@TOKEN2017110821095@$`[0m
[38;5;239m  01: TOKEN201711082109{1..+5}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/004-simple-ascending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-5..0}TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-5TOKEN201711082109@-4TOKEN201711082109@-3TOKEN201711082109@-2TOKEN201711082109@-1TOKEN201711082109@0TOKEN201711082109@$`[0m
[38;5;239m  01: {-5..0}TOKEN201711082109@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/005-simple-ascending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..-98}TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100TOKEN201711082109@-99TOKEN201711082109@-98TOKEN201711082109@$`[0m
[38;5;239m  01: {-100..-98}TOKEN201711082109@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/006-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {5..1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^5@4@3@2@1@$`[0m
[38;5;239m  01: {5..1}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/007-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711082109{5..1}TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110821095TOKEN201711082109@TOKEN2017110821094TOKEN201711082109@TOKEN2017110821093TOKEN201711082109@TOKEN2017110821092TOKEN201711082109@TOKEN2017110821091TOKEN201711082109@$`[0m
[38;5;239m  01: TOKEN201711082109{5..1}TOKEN201711082109@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/008-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711082109{5..+1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110821095@TOKEN2017110821094@TOKEN2017110821093@TOKEN2017110821092@TOKEN2017110821091@$`[0m
[38;5;239m  01: TOKEN201711082109{5..+1}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/009-simple-descending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {0..-5}TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^0TOKEN201711082109@-1TOKEN201711082109@-2TOKEN201711082109@-3TOKEN201711082109@-4TOKEN201711082109@-5TOKEN201711082109@$`[0m
[38;5;239m  01: {0..-5}TOKEN201711082109@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/010-simple-descending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-98..-100}TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-98TOKEN201711082109@-99TOKEN201711082109@-100TOKEN201711082109@$`[0m
[38;5;239m  01: {-98..-100}TOKEN201711082109@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/011-identical-positive-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {42..42}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42@$`[0m
[38;5;239m  01: {42..42}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/012-identical-negative-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-42..-42}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-42@$`[0m
[38;5;239m  01: {-42..-42}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/013-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}{3..4}{5..6}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^135@136@145@146@235@236@245@246@$`[0m
[38;5;239m  01: {1..2}{3..4}{5..6}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/014-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711082109{1..2}abc{-50..-53}def{0..0}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110821091abc-50def0@TOKEN2017110821091abc-51def0@TOKEN2017110821091abc-52def0@TOKEN2017110821091abc-53def0@TOKEN2017110821092abc-50def0@TOKEN2017110821092abc-51def0@TOKEN2017110821092abc-52def0@TOKEN2017110821092abc-53def0@$`[0m
[38;5;239m  01: TOKEN201711082109{1..2}abc{-50..-53}def{0..0}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/015-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..100}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100@-99@-98@-97@-96@-95@-94@-93@-92@-91@-90@-89@-88@-87@-86@-85@-84@-83@-82@-81@-80@-79@-78@-77@-76@-75@-74@-73@-72@-71@-70@-69@-68@-67@-66@-65@-64@-63@-62@-61@-60@-59@-58@-57@-56@-55@-54@-53@-52@-51@-50@-49@-48@-47@-46@-45@-44@-43@-42@-41@-40@-39@-38@-37@-36@-35@-34@-33@-32@-31@-30@-29@-28@-27@-26@-25@-24@-23@-22@-21@-20@-19@-18@-17@-16@-15@-14@-13@-12@-11@-10@-9@-8@-7@-6@-5@-4@-3@-2@-1@0@1@2@3@4@5@6@7@8@9@10@11@12@13@14@15@16@17@18@19@20@21@22@23@24@25@26@27@28@29@30@31@32@33@34@35@36@37@38@39@40@41@42@43@44@45@46@47@48@49@50@51@52@53@54@55@56@57@58@59@60@61@62@63@64@65@66@67@68@69@70@71@72@73@74@75@76@77@78@79@80@81@82@83@84@85@86@87@88@89@90@91@92@93@94@95@96@97@98@99@100@$`[0m
[38;5;239m  01: {-100..100}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/001-range-and-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with a range and 2 characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '1' '2' '3' 'a' 'b' 'z' 'C' '-' '[a-z-2]' 'a-z-2'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z-2][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `-@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a-z-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-z-2@`[0m
[31m[1;33m  WARNING    might match_regex `^-@2@a@b@z@$`[0m
[38;5;239m  01: [a-z-2]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/002-reverse-range-and-chars[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with 2 patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a4' 'a3' 'a2' 'a42' 'a[42]' 'z4' 'z3' 'z2' 'z42' 'z[42]' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-y][42]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-y][42][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `42@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z[[]42]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]42]@`[0m
[31m[1;33m  WARNING    might match_regex `^42@z2@z4@$`[0m
[38;5;239m  01: [!a-y][42]@
  02: [^a-y][42]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/003-reverse-multi-hard[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check how the value inside multiple brackets are parsed with bracket as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '][' 'a[' '1['[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!]az][[]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^]az][[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `][[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]@`[0m
[31m[1;33m  WARNING    might match_regex `^1[[]@$`[0m
[38;5;239m  01: [!]az][[]@
  02: [^]az][[]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/004-simple-bracket+char+range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to control if 2 patterns splited by a minus characters can be match.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a-0' 'a-1' 'a-2' 'b-0' 'b-1' 'b-2' 'Z-0' 'Z-1' 'Z-2' 'a1' 'Z9' 'D4'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [aZ]-[1-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a-2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `D4@`[0m
[31m[1;33m  WARNING    might match_regex `^Z-1@Z-2@a-1@a-2@$`[0m
[38;5;239m  01: [aZ]-[1-9]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/001-simple-opposit-match[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' '1' 'Z' 'd' 'e' 'f' 'def'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a1Z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a1Z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def@`[0m
[31m[1;33m  WARNING    might match_regex `^d@e@f@$`[0m
[38;5;239m  01: [!a1Z]@
  02: [^a1Z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/002-simple-opposite-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'z' '1' '2' '3' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `42@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@3@$`[0m
[38;5;239m  01: [!a-z]@
  02: [^a-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/001-alpha-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[a-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'f' 'z' 'A' '1' '[a-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `A@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@f@z@$`[0m
[38;5;239m  01: [a-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/002-numeric-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[0-9]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '4' '2' '1' '9' 'a' 'C' '[0-9]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [0-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]0-9]@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@4@9@$`[0m
[38;5;239m  01: [0-9]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/003-ascii-range-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the bracket expansion works with the following pattern []-z].
  One test use the following range which is the default range for bash:
  < > , ; : ! ' " ( ) [ ] { } @ $ \ # % 1 2 3 4 5 6 7 8 9 a A b B c C d D e E f F g G h H i I j J k K l L m M n N o O p P q Q r R s S t T u U v V w W x X y Y z
  The other use the ascii value, which does make more sense.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' '[' ']' '[]-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@c@$`[0m
[38;5;239m  01: []-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/004-ascii-range-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[1-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' ']' '[' '[1-z]' '1-z' '-'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [1-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `B@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1-z@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]1-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^2@B@Z@[[]@]@a@c@$`[0m
[38;5;239m  01: [1-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/001-simple-list[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a simple list of characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '[bca]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [bca][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]bca]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@b@c@$`[0m
[38;5;239m  01: [bca]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/002-multi-bracket[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with multiple brackets patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch "TOKEN201711082109abcd" "TOKEN201711082109abc" "TOKEN201711082109abdc" "TOKEN201711082109b" "TOKEN201711082109" "TOKEN201711082109\[a]b\[c]\[d]"[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout TOKEN201711082109[a]b[c][d][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109abcd@$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109abc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109abdc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109b@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711082109[[]a]b[[]c][[]d]@`[0m
[38;5;239m  01: TOKEN201711082109[a]b[c][d]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/003-brackets-as-pattern[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` and a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' ']' 'a' 'Z' '[][]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [][][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@]@$`[0m
[38;5;239m  01: [][]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/004-multi-bracket-multi-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to match a file name which contain a bracket as first character.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 21 23 24 25 26 27 28 29 ']' '[' '[12][34]' '1234'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [12][34][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `13@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `14@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `23@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `24@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `0[0-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]12][[]34]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1234@`[0m
[31m[1;33m  WARNING    might match_regex `^13@14@23@24@$`[0m
[38;5;239m  01: [12][34]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/001-single-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a single character as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' '[a]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@$`[0m
[38;5;239m  01: [a]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/002-closing-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch ']' '[]]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@$`[0m
[38;5;239m  01: []]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/003-opening-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' '[[]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@$`[0m
[38;5;239m  01: [[]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/001-declare-and-expand-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring and expanding a local variable does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_VALUE
  02: ./write_on_stdout_and_stderr $TOKEN201711082109_NAME $TOKEN201711082109_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_VALUE$`[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==63810==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000104694700 bp 0x7fff5b5bbe20 sp 0x7fff5b5bbda0 T0)
  04: ==63810==The signal is caused by a READ memory access.
  05: ==63810==Hint: address points to the zero page.
  06:     #0 0x1046946ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x104694c6c in ft_strequ ft_strequ.c:6
  08:     #2 0x1046467cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x104682e49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x1046833bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x104680705 in exec exec.c:39
  12:     #6 0x104680841 in exec_and_or exec_and_or.c:13
  13:     #7 0x104680705 in exec exec.c:39
  14:     #8 0x104681b40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x104680705 in exec exec.c:39
  16:     #10 0x104681de1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x104680705 in exec exec.c:39
  18:     #12 0x104681e23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x104680705 in exec exec.c:39
  20:     #14 0x1046836a9 in exec_program exec_program.c:10
  21:     #15 0x104680705 in exec exec.c:39
  22:     #16 0x10467dd75 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x10467e532 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x10467ed29 in main_loop main_loop.c:71
  25:     #19 0x104689571 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==63810==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff5b5bbf20  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5b5bbe20  rsp = 0x00007fff5b5bbda0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000af7fc  r11 = 0x0000000107d90060  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5b5bc510  r15 = 0x00007fff5b5bc530  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==63810==ABORTING
  36: ./lib/main.sh: line 102: 63810 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/002-declare-and-expand-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an empty variable is not expanded as an empty string and results in any new argument in the command line.[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=
  02: ./write_on_stdout_and_stderr $TOKEN201711082109_NAME $TOKEN201711082109_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==63924==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010a699700 bp 0x7fff555b6e20 sp 0x7fff555b6da0 T0)
  04: ==63924==The signal is caused by a READ memory access.
  05: ==63924==Hint: address points to the zero page.
  06:     #0 0x10a6996ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10a699c6c in ft_strequ ft_strequ.c:6
  08:     #2 0x10a64b7cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10a687e49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10a6883bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10a685705 in exec exec.c:39
  12:     #6 0x10a685841 in exec_and_or exec_and_or.c:13
  13:     #7 0x10a685705 in exec exec.c:39
  14:     #8 0x10a686b40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10a685705 in exec exec.c:39
  16:     #10 0x10a686de1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10a685705 in exec exec.c:39
  18:     #12 0x10a686e23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10a685705 in exec exec.c:39
  20:     #14 0x10a6886a9 in exec_program exec_program.c:10
  21:     #15 0x10a685705 in exec exec.c:39
  22:     #16 0x10a682d75 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x10a683532 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x10a683d29 in main_loop main_loop.c:71
  25:     #19 0x10a68e571 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==63924==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff555b6f20  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff555b6e20  rsp = 0x00007fff555b6da0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x0000000000079e4a  r11 = 0x000000010dd90060  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff555b7510  r15 = 0x00007fff555b7530  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==63924==ABORTING
  36: ./lib/main.sh: line 102: 63924 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/003-unknown-variable-does-not-result-in-new-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an unknown variable is not expanded as an empty string and results in any new argument in the command line.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711082109_UNKNOWN"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201711082109_UNKNOWN TOKEN201711082109_DISPLAYED[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_DISPLAYED`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/004-existing-variable-in-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711082109_NAME=TOKEN201711082109_VALUE_OLD"[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_VALUE_NEW
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_NAME=TOKEN201711082109_VALUE_NEW$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711082109_NAME=TOKEN201711082109_VALUE_OLD$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==64158==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000103536700 bp 0x7fff5c719e00 sp 0x7fff5c719d80 T0)
  04: ==64158==The signal is caused by a READ memory access.
  05: ==64158==Hint: address points to the zero page.
  06:     #0 0x1035366ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x103536c6c in ft_strequ ft_strequ.c:6
  08:     #2 0x1034e87cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x103524e49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x1035253bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x103522705 in exec exec.c:39
  12:     #6 0x103522841 in exec_and_or exec_and_or.c:13
  13:     #7 0x103522705 in exec exec.c:39
  14:     #8 0x103523b40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x103522705 in exec exec.c:39
  16:     #10 0x103523de1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x103522705 in exec exec.c:39
  18:     #12 0x103523e23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x103522705 in exec exec.c:39
  20:     #14 0x1035256a9 in exec_program exec_program.c:10
  21:     #15 0x103522705 in exec exec.c:39
  22:     #16 0x10351fd75 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x103520532 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x103520d29 in main_loop main_loop.c:71
  25:     #19 0x10352b571 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==64158==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff5c719f00  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5c719e00  rsp = 0x00007fff5c719d80  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000b520c  r11 = 0x0000000106c2f970  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5c71a4f0  r15 = 0x00007fff5c71a510  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==64158==ABORTING
  36: ./lib/main.sh: line 102: 64158 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/005-existing-variable-in-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711082109_NAME=TOKEN201711082109_VALUE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_NAME=$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711082109_NAME=TOKEN201711082109_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==64292==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010bff6700 bp 0x7fff53c59e00 sp 0x7fff53c59d80 T0)
  04: ==64292==The signal is caused by a READ memory access.
  05: ==64292==Hint: address points to the zero page.
  06:     #0 0x10bff66ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10bff6c6c in ft_strequ ft_strequ.c:6
  08:     #2 0x10bfa87cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10bfe4e49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10bfe53bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10bfe2705 in exec exec.c:39
  12:     #6 0x10bfe2841 in exec_and_or exec_and_or.c:13
  13:     #7 0x10bfe2705 in exec exec.c:39
  14:     #8 0x10bfe3b40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10bfe2705 in exec exec.c:39
  16:     #10 0x10bfe3de1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10bfe2705 in exec exec.c:39
  18:     #12 0x10bfe3e23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10bfe2705 in exec exec.c:39
  20:     #14 0x10bfe56a9 in exec_program exec_program.c:10
  21:     #15 0x10bfe2705 in exec exec.c:39
  22:     #16 0x10bfdfd75 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x10bfe0532 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x10bfe0d29 in main_loop main_loop.c:71
  25:     #19 0x10bfeb571 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==64292==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff53c59f00  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff53c59e00  rsp = 0x00007fff53c59d80  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000011fb  r11 = 0x000000010f6ef970  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff53c5a4f0  r15 = 0x00007fff53c5a510  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==64292==ABORTING
  36: ./lib/main.sh: line 102: 64292 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/006-existing-variable-in-environment-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion takes the environment variables into account.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711082109_NAME=TOKEN201711082109_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201711082109_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_VALUE$`[0m
[38;5;239m  01: $TOKEN201711082109_NAME[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/007-multiple-declaration-at-a-time[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring multiple variables in the same command line does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME1=TOKEN201711082109_VALUE1 TOKEN201711082109_NAME2=TOKEN201711082109_VALUE2 TOKEN201711082109_NAME3=TOKEN201711082109_VALUE3
  02: ./write_on_stdout_and_stderr $TOKEN201711082109_NAME1 $TOKEN201711082109_NAME1
  03: ./write_on_stdout $TOKEN201711082109_NAME2
  04: ./write_on_stderr $TOKEN201711082109_NAME3[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711082109_VALUE3$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711082109_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_VALUE3$`[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==64561==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000102ef2700 bp 0x7fff5cd5dcc0 sp 0x7fff5cd5dc40 T0)
  04: ==64561==The signal is caused by a READ memory access.
  05: ==64561==Hint: address points to the zero page.
  06:     #0 0x102ef26ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x102ef2c6c in ft_strequ ft_strequ.c:6
  08:     #2 0x102ea47cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x102ee0e49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x102ee13bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x102ede705 in exec exec.c:39
  12:     #6 0x102ede841 in exec_and_or exec_and_or.c:13
  13:     #7 0x102ede705 in exec exec.c:39
  14:     #8 0x102edfb40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x102ede705 in exec exec.c:39
  16:     #10 0x102edfde1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x102ede705 in exec exec.c:39
  18:     #12 0x102edfe23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x102ede705 in exec exec.c:39
  20:     #14 0x102edfe23 in exec_complete_commands exec_complete_commands.c:11
  21:     #15 0x102ede705 in exec exec.c:39
  22:     #16 0x102edfe23 in exec_complete_commands exec_complete_commands.c:11
  23:     #17 0x102ede705 in exec exec.c:39
  24:     #18 0x102ee16a9 in exec_program exec_program.c:10
  25:     #19 0x102ede705 in exec exec.c:39
  26:     #20 0x102edbd75 in exec_main_loop lex_and_parse.c:18
  27:     #21 0x102edc532 in lex_and_parse lex_and_parse.c:79
  28:     #22 0x102edcd29 in main_loop main_loop.c:71
  29:     #23 0x102ee7571 in main main.c:78
  30:     #24 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  31: 
  32: ==64561==Register values:
  33: rax = 0x0000000000000000  rbx = 0x00007fff5cd5ddc0  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  34: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5cd5dcc0  rsp = 0x00007fff5cd5dc40  
  35:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x000000000008ad5a  r11 = 0x0000000106680060  
  36: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5cd5e510  r15 = 0x00007fff5cd5e530  
  37: AddressSanitizer can not provide additional info.
  38: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  39: ==64561==ABORTING
  40: ./lib/main.sh: line 102: 64561 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/008-multiple-declaration-with-same-name[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring the same variable several times in the same command line does work and does not result in error.[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_VALUE1 TOKEN201711082109_NAME=TOKEN201711082109_VALUE2 TOKEN201711082109_NAME=TOKEN201711082109_VALUE3
  02: ./write_on_stdout $TOKEN201711082109_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711082109_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711082109_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_VALUE3$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==64707==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000101b58700 bp 0x7fff5e0f7e20 sp 0x7fff5e0f7da0 T0)
  04: ==64707==The signal is caused by a READ memory access.
  05: ==64707==Hint: address points to the zero page.
  06:     #0 0x101b586ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x101b58c6c in ft_strequ ft_strequ.c:6
  08:     #2 0x101b0a7cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x101b46e49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x101b473bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x101b44705 in exec exec.c:39
  12:     #6 0x101b44841 in exec_and_or exec_and_or.c:13
  13:     #7 0x101b44705 in exec exec.c:39
  14:     #8 0x101b45b40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x101b44705 in exec exec.c:39
  16:     #10 0x101b45de1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x101b44705 in exec exec.c:39
  18:     #12 0x101b45e23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x101b44705 in exec exec.c:39
  20:     #14 0x101b476a9 in exec_program exec_program.c:10
  21:     #15 0x101b44705 in exec exec.c:39
  22:     #16 0x101b41d75 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x101b42532 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x101b42d29 in main_loop main_loop.c:71
  25:     #19 0x101b4d571 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==64707==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff5e0f7f20  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5e0f7e20  rsp = 0x00007fff5e0f7da0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x0000000000022eb5  r11 = 0x000000010524ff08  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5e0f8510  r15 = 0x00007fff5e0f8530  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==64707==ABORTING
  36: ./lib/main.sh: line 102: 64707 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/009-last-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the special variable `$?` may be expanded with the last exit status.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: ./write_on_stderr $?[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42$`[0m
[38;5;239m  01: $?[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/inline-environment-variable/001-local-variable-shouldnt-be-set[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary does not result in local variable declaration but a modified environment for the command.[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_VALUE ./display_env
  02: ./write_on_stderr $TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_NAME=TOKEN201711082109_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: test=Well well well
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=7
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711082109_VALUE`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: $TOKEN201711082109[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/001-truncating[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711082109_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_FILENAME
  02: ./write_on_stdout TOKEN201711082109_VALUE > $TOKEN201711082109_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==65072==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010f17f700 bp 0x7fff50ad0e20 sp 0x7fff50ad0da0 T0)
  04: ==65072==The signal is caused by a READ memory access.
  05: ==65072==Hint: address points to the zero page.
  06:     #0 0x10f17f6ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10f17fc6c in ft_strequ ft_strequ.c:6
  08:     #2 0x10f1317cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10f16de49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10f16e3bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10f16b705 in exec exec.c:39
  12:     #6 0x10f16b841 in exec_and_or exec_and_or.c:13
  13:     #7 0x10f16b705 in exec exec.c:39
  14:     #8 0x10f16cb40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10f16b705 in exec exec.c:39
  16:     #10 0x10f16cde1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10f16b705 in exec exec.c:39
  18:     #12 0x10f16ce23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10f16b705 in exec exec.c:39
  20:     #14 0x10f16e6a9 in exec_program exec_program.c:10
  21:     #15 0x10f16b705 in exec exec.c:39
  22:     #16 0x10f168d75 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x10f169532 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x10f169d29 in main_loop main_loop.c:71
  25:     #19 0x10f174571 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==65072==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff50ad0f20  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff50ad0e20  rsp = 0x00007fff50ad0da0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x000000000000ce67  r11 = 0x0000000112880170  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff50ad1510  r15 = 0x00007fff50ad1530  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==65072==ABORTING
  36: ./lib/main.sh: line 102: 65072 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711082109_FILENAME` matching_regex `^TOKEN201711082109_VALUE$`[0m
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/002-appending[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711082109_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_FILENAME
  02: ./write_on_stdout TOKEN201711082109_VALUE1 >> $TOKEN201711082109_NAME
  03: ./write_on_stdout TOKEN201711082109_VALUE2 >> $TOKEN201711082109_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==65220==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010b3af700 bp 0x7fff548a0d80 sp 0x7fff548a0d00 T0)
  04: ==65220==The signal is caused by a READ memory access.
  05: ==65220==Hint: address points to the zero page.
  06:     #0 0x10b3af6ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10b3afc6c in ft_strequ ft_strequ.c:6
  08:     #2 0x10b3617cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10b39de49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10b39e3bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10b39b705 in exec exec.c:39
  12:     #6 0x10b39b841 in exec_and_or exec_and_or.c:13
  13:     #7 0x10b39b705 in exec exec.c:39
  14:     #8 0x10b39cb40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10b39b705 in exec exec.c:39
  16:     #10 0x10b39cde1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10b39b705 in exec exec.c:39
  18:     #12 0x10b39ce23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10b39b705 in exec exec.c:39
  20:     #14 0x10b39ce23 in exec_complete_commands exec_complete_commands.c:11
  21:     #15 0x10b39b705 in exec exec.c:39
  22:     #16 0x10b39e6a9 in exec_program exec_program.c:10
  23:     #17 0x10b39b705 in exec exec.c:39
  24:     #18 0x10b398d75 in exec_main_loop lex_and_parse.c:18
  25:     #19 0x10b399532 in lex_and_parse lex_and_parse.c:79
  26:     #20 0x10b399d29 in main_loop main_loop.c:71
  27:     #21 0x10b3a4571 in main main.c:78
  28:     #22 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: ==65220==Register values:
  31: rax = 0x0000000000000000  rbx = 0x00007fff548a0e80  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  32: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff548a0d80  rsp = 0x00007fff548a0d00  
  33:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000fe14d  r11 = 0x000000010cab0170  
  34: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff548a1510  r15 = 0x00007fff548a1530  
  35: AddressSanitizer can not provide additional info.
  36: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  37: ==65220==ABORTING
  38: ./lib/main.sh: line 102: 65220 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711082109_FILENAME` matching_regex `^TOKEN201711082109_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711082109_FILENAME` matching_regex `^TOKEN201711082109_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/003-reading[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711082109_FILENAME"
  02: echo "TOKEN201711082109_VALUE" > "TOKEN201711082109_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_FILENAME
  02: ./read_on_stdin < $TOKEN201711082109_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_VALUE@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==65367==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010bb06700 bp 0x7fff54149e20 sp 0x7fff54149da0 T0)
  04: ==65367==The signal is caused by a READ memory access.
  05: ==65367==Hint: address points to the zero page.
  06:     #0 0x10bb066ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10bb06c6c in ft_strequ ft_strequ.c:6
  08:     #2 0x10bab87cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10baf4e49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10baf53bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10baf2705 in exec exec.c:39
  12:     #6 0x10baf2841 in exec_and_or exec_and_or.c:13
  13:     #7 0x10baf2705 in exec exec.c:39
  14:     #8 0x10baf3b40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10baf2705 in exec exec.c:39
  16:     #10 0x10baf3de1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10baf2705 in exec exec.c:39
  18:     #12 0x10baf3e23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10baf2705 in exec exec.c:39
  20:     #14 0x10baf56a9 in exec_program exec_program.c:10
  21:     #15 0x10baf2705 in exec exec.c:39
  22:     #16 0x10baefd75 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x10baf0532 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x10baf0d29 in main_loop main_loop.c:71
  25:     #19 0x10bafb571 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==65367==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff54149f20  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff54149e20  rsp = 0x00007fff54149da0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000467df  r11 = 0x000000010efdd170  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5414a510  r15 = 0x00007fff5414a530  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==65367==ABORTING
  36: ./lib/main.sh: line 102: 65367 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/tilde-expansion/001-process-tilde-expansion[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tilde expansion `~` in variable declaration.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711082109"[0m

  STDIN:
[38;5;239m  01: TOKEN201711082109=~
  02: ./write_on_stdout TILDE:$TOKEN201711082109[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TILDE:~`[0m
[31m[1;33m  WARNING    might match_regex `TILDE:/TOKEN201711082109`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==65511==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000108c70700 bp 0x7fff56fdfe20 sp 0x7fff56fdfda0 T0)
  04: ==65511==The signal is caused by a READ memory access.
  05: ==65511==Hint: address points to the zero page.
  06:     #0 0x108c706ff in ft_strcmp ft_strcmp.c:11
  07:     #1 0x108c70c6c in ft_strequ ft_strequ.c:6
  08:     #2 0x108c227cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x108c5ee49 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x108c5f3bb in exec_pipeline exec_pipeline.c:64
  11:     #5 0x108c5c705 in exec exec.c:39
  12:     #6 0x108c5c841 in exec_and_or exec_and_or.c:13
  13:     #7 0x108c5c705 in exec exec.c:39
  14:     #8 0x108c5db40 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x108c5c705 in exec exec.c:39
  16:     #10 0x108c5dde1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x108c5c705 in exec exec.c:39
  18:     #12 0x108c5de23 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x108c5c705 in exec exec.c:39
  20:     #14 0x108c5f6a9 in exec_program exec_program.c:10
  21:     #15 0x108c5c705 in exec exec.c:39
  22:     #16 0x108c59d75 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x108c5a532 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x108c5ad29 in main_loop main_loop.c:71
  25:     #19 0x108c65571 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==65511==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff56fdff20  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff56fdfe20  rsp = 0x00007fff56fdfda0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x000000000003dbac  r11 = 0x000000010947ff08  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff56fe0510  r15 = 0x00007fff56fe0530  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==65511==ABORTING
  36: ./lib/main.sh: line 102: 65511 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A"B"CDEF"GHIJ""KLMNO" "P"QRS"T""U""V"WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  01: A"B"CDEF"GHIJ""KLMNO"[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: "P"QRS"T""U""V"WXYZ[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/003-first-argument-inhibited[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the shell implementation has no special case for the first argument.[0m

  STDIN:
[38;5;239m  01: "./write_on_stdout_and_stderr" TOKEN201711082109_STDOUT TOKEN201711082109_STDERR[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_STDERR`[0m
[38;5;239m  01: "./write_on_stdout_and_stderr": no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "
  02: "TOKEN201711082109"_FIRST
  03: TOKEN201711082109_SECOND" "TOKEN201711082109_THIRD
  04: TOKEN201711082109_FOU"RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_SECOND$`[0m
[38;5;239m  01: "
  02: "TOKEN201711082109"_FIRST
  03: TOKEN201711082109_SECOND"[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_FOURTH$`[0m
[38;5;239m  01: "TOKEN201711082109_THIRD
  02: TOKEN201711082109_FOU"RT"H
  03: "[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/001-escape-double-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711082109\"TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109"TOKEN201711082109`[0m
[38;5;239m  01: TOKEN201711082109\"TOKEN201711082109[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/002-escape-double-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711082109 \" TOKEN201711082109"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109 ` TOKEN201711082109$`[0m
[38;5;239m  01: "TOKEN201711082109 \" TOKEN201711082109"[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/003-escape-double-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "\""[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^"$`[0m
[38;5;239m  01: "\""[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/004-it-results-in-error[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using backslash `\\` before the closing double-quote `"` does result in syntax error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711082109\"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711082109$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: dquote> ./lib/main.sh: line 102: 66588 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/005-it-does-not-escape-double-quote[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol double-quote `"` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\"TOKEN201711082109\\"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\TOKEN201711082109\$`[0m
[38;5;239m  01: \\"TOKEN201711082109\\"[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}"{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  01: {1..2}"{1..2}"@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  01: "{1..2}"{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}"{1..2}"{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: "{1..2}"{1..2}"{1..2}"{1..2}"{1..2}"{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}" {1..2} "{1..2}" "{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  01: "{1..2}"@{1..2}@"{1..2}"@"{1..2}"@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: ["a"]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc"def"gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: ["a"bc"def"gh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/variable-expansion/001-expansion-enabled[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion is processed within double quotes.[0m

  Before test:
[38;5;239m  01: export "TOKEN=TOKEN201711082109"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: dquote> ./lib/main.sh: line 102: 67652 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/001-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "ABCD'EFG"HI'J"KL"'MNO'P"' Q"RS'T'U''"VW'X"Y'Z[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCD'EFGHIJ"KL"MNOP`[0m
[38;5;239m  01: "ABCD'EFG"HI'J"KL"'MNO'P"'[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `QRS'T'U''VWX"YZ`[0m
[38;5;239m  01: Q"RS'T'U''"VW'X"Y'Z[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/002-multiline[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony in multiline mode.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711082109"_FIR'ST
  03: TOKEN201711082109_SECOND" 'TOKEN201711082109_TH"IRD
  04: TOKEN201711082109_FOU'RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_FIR'ST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_SECOND$`[0m
[38;5;239m  01: '
  02: 'TOKEN201711082109"_FIR'ST
  03: TOKEN201711082109_SECOND"[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_TH"IRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_FOURTH$`[0m
[38;5;239m  01: 'TOKEN201711082109_TH"IRD
  02: TOKEN201711082109_FOU'RT"H
  03: "[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}'{1..2}'{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: "{1..2}"{1..2}'{1..2}'{1..2}"{1..2}"{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [""'a'""][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: [""'a'""]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: ["a"bc'def'gh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/variable-expansion/001-it-does-not-expand-in-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check if a local variable is display correctly inside simple and double quote.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711082109_NAME=TOKEN201711082109_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN201711082109_NAME"$TOKEN201711082109_NAME'$TOKEN201711082109_NAME'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_VALUETOKEN201711082109_VALUE[$]TOKEN201711082109_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: dquote> ./lib/main.sh: line 102: 68486 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A'B'CDEF'GHIJ''KLMNO' 'P'QRS'T''U''V'WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  01: A'B'CDEF'GHIJ''KLMNO'[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: 'P'QRS'T''U''V'WXYZ[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/003-first-argument-inhibited[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the shell implementation has no special case for the first argument.[0m

  STDIN:
[38;5;239m  01: './write_on_stdout_and_stderr' TOKEN201711082109_STDOUT TOKEN201711082109_STDERR[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_STDERR`[0m
[38;5;239m  01: './write_on_stdout_and_stderr': no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711082109'_FIRST
  03: TOKEN201711082109_SECOND' 'TOKEN201711082109_THIRD
  04: TOKEN201711082109_FOU'RT'H
  05: '[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_SECOND$`[0m
[38;5;239m  01: '
  02: 'TOKEN201711082109'_FIRST
  03: TOKEN201711082109_SECOND'[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_FOURTH$`[0m
[38;5;239m  01: 'TOKEN201711082109_THIRD
  02: TOKEN201711082109_FOU'RT'H
  03: '[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/001-escape-simple-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711082109\'TOKEN201711082109[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109'TOKEN201711082109`[0m
[38;5;239m  01: TOKEN201711082109\'TOKEN201711082109[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/002-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr \'TOKEN201711082109_STDOUT TOKEN201711082109_STDERR\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^'TOKEN201711082109_STDOUT$`[0m
[38;5;239m  01: \'TOKEN201711082109_STDOUT[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_STDERR'$`[0m
[38;5;239m  01: TOKEN201711082109_STDERR\'[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/003-escape-simple-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: quote> ./lib/main.sh: line 102: 69586 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/005-it-does-not-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol simple-quote `'` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\'TOKEN201711082109\\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\TOKEN201711082109\\$`[0m
[38;5;239m  01: \\'TOKEN201711082109\\'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}'{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  01: {1..2}'{1..2}'@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  01: '{1..2}'{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}'{1..2}'{1..2}'{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: '{1..2}'{1..2}'{1..2}'{1..2}'{1..2}'{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}' {1..2} '{1..2}' '{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  01: '{1..2}'@{1..2}@'{1..2}'@'{1..2}'@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: ['a']@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: ['a'bc'def'gh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/004-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a subshell command that is executed at the end of a script is correctly returned at termination by the parent shell.[0m

  STDIN:
[38;5;239m  01: (./exit_with_status 42)[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status 42[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/001-modifies-the-child-environment-only-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: (TOKEN201711082109_NAME=TOKEN201711082109_VALUE ./display_env)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_NAME=TOKEN201711082109_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: test=Well well well
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=7
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_VALUE: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/002-modifies-the-child-environment-only-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: ( (TOKEN201711082109_NAME=TOKEN201711082109_VALUE ./display_env) ; ./display_env) ; ./display_env
  02: [0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711082109_NAME=TOKEN201711082109_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: test=Well well well
  30: INSTALL_ROOT=/Users/vcombey/.sbcl
  31: SHLVL=7
  32: HOME=/Users/vcombey
  33: COLORFGBG=7;0
  34: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  35: LESS=-R
  36: LOGNAME=vcombey
  37: VISUAL=vim
  38: LC_CTYPE=en_US.UTF-8
  39: COLORTERM=truecolor
  40: OLDPWD=/Users/vcombey/42ShellTester
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44
  48: ------------------------------
  49: TERM_PROGRAM=iTerm.app
  50: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  51: TERM=xterm-256color
  52: SHELL=42sh
  53: MYVIMRC=/Users/vcombey/.vimrc
  54: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  55: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  56: TERM_PROGRAM_VERSION=3.1.2
  57: TERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  58: ZSH=/Users/vcombey/.oh-my-zsh
  59: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  60: USER=vcombey
  61: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  62: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  63: PAGER=less
  64: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  65: DOTFILES=/Users/vcombey/.dotfiles
  66: LSCOLORS=HxBxcxdxbxegedabagacad
  67: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  68: ZSHRC=/Users/vcombey/.zshrc
  69: PWD=/Users/vcombey/42ShellTester/tmp
  70: EDITOR=vim
  71: BASE16_THEME=base16-nord
  72: LANG=en_US.UTF-8
  73: ITERM_PROFILE=Default
  74: XPC_FLAGS=0x0
  75: XPC_SERVICE_NAME=0
  76: test=Well well well
  77: INSTALL_ROOT=/Users/vcombey/.sbcl
  78: SHLVL=7
  79: HOME=/Users/vcombey
  80: COLORFGBG=7;0
  81: ITERM_SESSION_ID=w0t0p2:5D6CAB93-0099-4CFA-BC99-2D5BA8936EB4
  82: LESS=-R
  83: LOGNAME=vcombey
  84: VISUAL=vim
  85: LC_CTYPE=en_US.UTF-8
  86: COLORTERM=truecolor
  87: OLDPWD=/Users/vcombey/42ShellTester
  88: _=/Users/vcombey/42/42sh/42sh
  89: HISTFILE=.42sh_history
  90: PS1=$> 
  91: PS2=dquote> 
  92: PS3=quote> 
  93: ------------------------------
  94: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711082109_NAME=TOKEN201711082109_VALUE: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/001-with-simple-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `'`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout 'TOKEN201711082109_FIRST)' ; (./write_on_stdout '(TOKEN201711082109_SECOND') )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: subsh> ./lib/main.sh: line 102: 73721 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/002-with-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201711082109_FIRST)" ; (./write_on_stdout "(TOKEN201711082109_SECOND") )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: subsh> ./lib/main.sh: line 102: 73837 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/003-with-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbols `'` and `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201711082109_FIRST)" ; (./write_on_stdout '(TOKEN201711082109_SECOND') )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711082109_SECOND`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: subsh> ./lib/main.sh: line 102: 73953 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

Total tests: 162
Total failed tests: 128
Total pending tests: 0
