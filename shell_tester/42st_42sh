[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m                                                                                                                                                                                                                                                                                                                                    

----------------------------------------------------------------

[37;1m42sh/builtins/export/001-display-env[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` without parameters results at least in a display of the environment variables.[0m

  Before test:
[38;5;239m  01: rm -rf "./stored_env"
  02: env | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/002-export-basic-key-value-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` may declare a new environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711040226_NAME=TOKEN201711040226_VALUE
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_NAME=TOKEN201711040226_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-ocean
  18: ITERM_PROFILE=vcombey
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=15;0
  24: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: COLORTERM=truecolor
  30: OLDPWD=/Users/vcombey/42ShellTester
  31: _=/Users/vcombey/42/42sh/42sh
  32: HISTFILE=.42sh_history
  33: PS1=$> 
  34: PS2=dquote> 
  35: PS3=quote> 
  36: ------------------------------
  37: TOTAL ENVIRONMENT VARIABLES: 34[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/003-export-basic-key-value-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` may declare a new environment variable and is able to display it later.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711040226_NAME=TOKEN201711040226_VALUE
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_NAME=["]?TOKEN201711040226_VALUE["]?$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/004-export-empty-variable-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711040226
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-ocean
  18: ITERM_PROFILE=vcombey
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=15;0
  24: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: COLORTERM=truecolor
  30: OLDPWD=/Users/vcombey/42ShellTester
  31: _=/Users/vcombey/42/42sh/42sh
  32: HISTFILE=.42sh_history
  33: PS1=$> 
  34: PS2=dquote> 
  35: PS3=quote> 
  36: ------------------------------
  37: TOTAL ENVIRONMENT VARIABLES: 34[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/005-export-empty-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment, but can be displayed with the builtin `export`.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711040226
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/006-export-update-env-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting the same variable twice in a row does result in an updated variable, but not in a duplicated variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711040226_NAME=TOKEN201711040226_VALUE1
  02: export TOKEN201711040226_NAME=TOKEN201711040226_VALUE2
  03: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226_NAME=TOKEN201711040226_VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_NAME=TOKEN201711040226_VALUE2`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-ocean
  18: ITERM_PROFILE=vcombey
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=15;0
  24: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: COLORTERM=truecolor
  30: OLDPWD=/Users/vcombey/42ShellTester
  31: _=/Users/vcombey/42/42sh/42sh
  32: HISTFILE=.42sh_history
  33: PS1=$> 
  34: PS2=dquote> 
  35: PS3=quote> 
  36: ------------------------------
  37: TOTAL ENVIRONMENT VARIABLES: 34[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/007-existing-environment-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an existing variable results in an updated variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE1"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711040226_NAME=TOKEN201711040226_VALUE2
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711040226_NAME=TOKEN201711040226_VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_NAME=TOKEN201711040226_VALUE2`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: OLDPWD=/Users/vcombey/42ShellTester
  09: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: USER=vcombey
  12: TOKEN201711040226_NAME=TOKEN201711040226_VALUE1
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  14: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  15: PAGER=less
  16: LSCOLORS=Gxfxcxdxbxegedabagacad
  17: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  18: PWD=/Users/vcombey/42ShellTester/tmp
  19: BASE16_THEME=base16-ocean
  20: ITERM_PROFILE=vcombey
  21: XPC_FLAGS=0x0
  22: XPC_SERVICE_NAME=0
  23: SHLVL=3
  24: HOME=/Users/vcombey
  25: COLORFGBG=15;0
  26: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  27: LESS=-R
  28: LOGNAME=vcombey
  29: LC_CTYPE=UTF-8
  30: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  31: COLORTERM=truecolor
  32: _=/Users/vcombey/42/42sh/42sh
  33: HISTFILE=.42sh_history
  34: PS1=$> 
  35: PS2=dquote> 
  36: PS3=quote> 
  37: ------------------------------
  38: TOTAL ENVIRONMENT VARIABLES: 35[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/008-local-to-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a declared local variable may be exported to the environment with the builtin `export`.[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_VALUE
  02: export TOKEN201711040226_NAME
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_NAME=TOKEN201711040226_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==24360==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000108b11870 bp 0x7fff5713edd0 sp 0x7fff5713ed50 T0)
  04: ==24360==The signal is caused by a READ memory access.
  05: ==24360==Hint: address points to the zero page.
  06:     #0 0x108b1186f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x108b11e1c in ft_strequ ft_strequ.c:6
  08:     #2 0x108ac45cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x108b00c80 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x108b01442 in exec_pipeline exec_pipeline.c:82
  11:     #5 0x108afedf5 in exec exec.c:37
  12:     #6 0x108afef31 in exec_and_or exec_and_or.c:13
  13:     #7 0x108afedf5 in exec exec.c:37
  14:     #8 0x108b00a81 in exec_list exec_list.c:10
  15:     #9 0x108afedf5 in exec exec.c:37
  16:     #10 0x108affce5 in exec_complete_command exec_complete_command.c:9
  17:     #11 0x108afedf5 in exec exec.c:37
  18:     #12 0x108affdc1 in exec_complete_commands exec_complete_commands.c:10
  19:     #13 0x108afedf5 in exec exec.c:37
  20:     #14 0x108affe03 in exec_complete_commands exec_complete_commands.c:11
  21:     #15 0x108afedf5 in exec exec.c:37
  22:     #16 0x108affe03 in exec_complete_commands exec_complete_commands.c:11
  23:     #17 0x108afedf5 in exec exec.c:37
  24:     #18 0x108b01759 in exec_program exec_program.c:10
  25:     #19 0x108afedf5 in exec exec.c:37
  26:     #20 0x108afca85 in exec_main_loop lex_and_parse.c:18
  27:     #21 0x108afd01e in lex_and_parse lex_and_parse.c:70
  28:     #22 0x108afd841 in main_loop main_loop.c:70
  29:     #23 0x108b066eb in main main.c:78
  30:     #24 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  31: 
  32: ==24360==Register values:
  33: rax = 0x0000000000000000  rbx = 0x00007fff5713eee0  rcx = 0x0000000108b177e0  rdx = 0x0000000000000063  
  34: rdi = 0x0000100000000000  rsi = 0x0000000000000000  rbp = 0x00007fff5713edd0  rsp = 0x00007fff5713ed50  
  35:  r8 = 0x00007fff5713ee00   r9 = 0x0000200000000000  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  36: r12 = 0x00007fff5713f610  r13 = 0x00007fff5713f650  r14 = 0x00007fff5713f5a0  r15 = 0x00007fff5713f5f0  
  37: AddressSanitizer can not provide additional info.
  38: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  39: ==24360==ABORTING
  40: ./lib/main.sh: line 102: 24360 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/009-export-with-equal-but-no-value-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the builtin export works fine with equal sign but no value. This test is based on the environment variables return.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711040226_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_NAME=`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-ocean
  18: ITERM_PROFILE=vcombey
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=15;0
  24: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: COLORTERM=truecolor
  30: OLDPWD=/Users/vcombey/42ShellTester
  31: _=/Users/vcombey/42/42sh/42sh
  32: HISTFILE=.42sh_history
  33: PS1=$> 
  34: PS2=dquote> 
  35: PS3=quote> 
  36: ------------------------------
  37: TOTAL ENVIRONMENT VARIABLES: 34[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/010-export-with-equal-but-no-value-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the builtin export works fine with equal sign but no value. This test is based on the local variables return.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711040226_NAME=
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_NAME=`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/001-invalid-identifier-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export 42=TOKEN201711040226[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: export: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/002-invalid-identifier-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export .=TOKEN201711040226[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: export: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/003-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with an illegal option results in an error and a failure exit status.[0m

  STDIN:
[38;5;239m  01: export -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: export: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/001-export-and-tmp-env-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added variable into the exported list.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_VALUE export TOKEN201711040226_NAME
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_NAME=["]?TOKEN201711040226_VALUE["]?`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/002-export-and-tmp-env-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_VALUE export TOKEN201711040226_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_NAME=TOKEN201711040226_VALUE`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-ocean
  18: ITERM_PROFILE=vcombey
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=15;0
  24: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: COLORTERM=truecolor
  30: OLDPWD=/Users/vcombey/42ShellTester
  31: _=/Users/vcombey/42/42sh/42sh
  32: HISTFILE=.42sh_history
  33: PS1=$> 
  34: PS2=dquote> 
  35: PS3=quote> 
  36: ------------------------------
  37: TOTAL ENVIRONMENT VARIABLES: 34[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/001-export-with-only-p-parameter[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with the option `-p` results at least in a display of the environment variables.[0m

  Before test:
[38;5;239m  01: rm -rf "./stored_env"
  02: env | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/002-export-p-param-and-token-should-add-local-var-only-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if export with -p option + token , add the variable into export list but not in env list. And don't display the export variable on stdout.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711040226_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711040226_NAME
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/003-export-p-param-and-token-should-add-local-var-only-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` with option `-p` results in an added variable into the export list but not from the environment.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711040226_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711040226_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226_NAME`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-ocean
  18: ITERM_PROFILE=vcombey
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=15;0
  24: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: COLORTERM=truecolor
  30: OLDPWD=/Users/vcombey/42ShellTester
  31: _=/Users/vcombey/42/42sh/42sh
  32: HISTFILE=.42sh_history
  33: PS1=$> 
  34: PS2=dquote> 
  35: PS3=quote> 
  36: ------------------------------
  37: TOTAL ENVIRONMENT VARIABLES: 34[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/004-export-n-param[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that using the builtin `export` with option `-n` results in a removed environment variable.[0m

  Before test:
[38;5;239m  01: export TOKEN201711040226_NAME=TOKEN201711040226_VALUE[0m

  STDIN:
[38;5;239m  01: export -n TOKEN201711040226_NAME
  02: export
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711040226_NAME`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: OLDPWD=/Users/vcombey/42ShellTester
  09: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: USER=vcombey
  12: TOKEN201711040226_NAME=TOKEN201711040226_VALUE
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  14: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  15: PAGER=less
  16: LSCOLORS=Gxfxcxdxbxegedabagacad
  17: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  18: PWD=/Users/vcombey/42ShellTester/tmp
  19: BASE16_THEME=base16-ocean
  20: ITERM_PROFILE=vcombey
  21: XPC_FLAGS=0x0
  22: XPC_SERVICE_NAME=0
  23: SHLVL=3
  24: HOME=/Users/vcombey
  25: COLORFGBG=15;0
  26: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  27: LESS=-R
  28: LOGNAME=vcombey
  29: LC_CTYPE=UTF-8
  30: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  31: COLORTERM=truecolor
  32: _=/Users/vcombey/42/42sh/42sh
  33: HISTFILE=.42sh_history
  34: PS1=$> 
  35: PS2=dquote> 
  36: PS3=quote> 
  37: ------------------------------
  38: TOTAL ENVIRONMENT VARIABLES: 35[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/001-escape-single-character-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711040226\TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226TOKEN201711040226$`[0m
[38;5;239m  01: TOKEN201711040226\TOKEN201711040226[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/002-escape-single-character-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711040226\\TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226\TOKEN201711040226$`[0m
[38;5;239m  01: TOKEN201711040226\\TOKEN201711040226[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/003-escape-single-character-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711040226\\\TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226\TOKEN201711040226$`[0m
[38;5;239m  01: TOKEN201711040226\\\TOKEN201711040226[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/004-escape-single-character-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711040226\\\\TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226\\TOKEN201711040226$`[0m
[38;5;239m  01: TOKEN201711040226\\\\TOKEN201711040226[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/005-escape-single-character-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TEST4\041TEST[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TEST4041TEST$`[0m
[38;5;239m  01: TEST4\041TEST[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping braces does not result in an expansion process.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \{1..2} {1\..2} {1.\.2} {1..2\}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[{]1..2}@[{]1..2}@[{]1..2}@[{]1..2}@$`[0m
[38;5;239m  01: \2@\1@1\..2@1.\.2@1..2\@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/002-it-expands-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\1@\2@$`[0m
[38;5;239m  01: \\2@\\1@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/003-it-expands-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\\{1..2} \\\\{1..2} \\\\\{1..2} \\\\\\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\[{]1..2}@\\1@\\2@\\[{]1..2}@\\\1@\\\2@$`[0m
[38;5;239m  01: \\\2@\\\1@\\\\2@\\\\1@\\\\\2@\\\\\1@\\\\\\2@\\\\\\1@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/001-it-does-not-expand-brackets[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping brackets does not result in an expansion process.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout \[abc] [abc\] \[abc\][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[[]abc]@[[]abc]@[[]abc]@$`[0m
[38;5;239m  01: \[abc]@[abc\]@\[abc\]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/002-escaped-inversion-mark[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an inversion mark `!` or `^` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '!' '^'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\!abc]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\^abc][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `!@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `[\^]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[1;33m  WARNING    might match_regex `^!@a@b@c@$`[0m
[31m[1;33m  WARNING    might match_regex `^[\^]@a@b@c@$`[0m
[38;5;239m  01: c@b@a@!@
  02: c@b@a@^@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/003-it-takes-escaped-bracket-as-pattern-character[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a closing bracket ']' may be escaped in a backet expansion pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' ']'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\]def]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\]def]
  03: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\]def]
  04: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\\\]def][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@` 4 times[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@b@c@d@e@f@$`[0m
[38;5;239m  01: [abc\]def]@
  02: [abc\\\]def]@
  03: [abc\\\\\]def]@
  04: [abc\\\\\\\]def]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/001-escape-variable-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` before the symbol of variable expansion `$` does not result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \$TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_NAME`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==27828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6030000270e7 at pc 0x0001032ebc10 bp 0x7fff5c92b1a0 sp 0x7fff5c92b198
  03: WRITE of size 1 at 0x6030000270e7 thread T0
  04:     #0 0x1032ebc0f in value_of_local local_get.c:60
  05:     #1 0x1032eb993 in local_get_var local_get.c:17
  06:     #2 0x1032f8772 in expand_from_env expand_param.c:58
  07:     #3 0x1032f82d3 in parameter_expansion expand_param.c:84
  08:     #4 0x1032f9df9 in exec_expand expand_word.c:84
  09:     #5 0x1032ff8b2 in lex_all lex_all.c:14
  10:     #6 0x103310da1 in lex_and_parse lex_and_parse.c:47
  11:     #7 0x103311841 in main_loop main_loop.c:70
  12:     #8 0x10331a6eb in main main.c:78
  13:     #9 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  14: 
  15: 0x6030000270e7 is located 0 bytes to the right of 23-byte region [0x6030000270d0,0x6030000270e7)
  16: allocated by thread T0 here:
  17:     #0 0x103495f3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  18:     #1 0x103321f8f in ft_memalloc ft_memalloc.c:17
  19:     #2 0x1032ebb78 in value_of_local local_get.c:57
  20:     #3 0x1032eb993 in local_get_var local_get.c:17
  21:     #4 0x1032f8772 in expand_from_env expand_param.c:58
  22:     #5 0x1032f82d3 in parameter_expansion expand_param.c:84
  23:     #6 0x1032f9df9 in exec_expand expand_word.c:84
  24:     #7 0x1032ff8b2 in lex_all lex_all.c:14
  25:     #8 0x103310da1 in lex_and_parse lex_and_parse.c:47
  26:     #9 0x103311841 in main_loop main_loop.c:70
  27:     #10 0x10331a6eb in main main.c:78
  28:     #11 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:60 in value_of_local
  31: Shadow bytes around the buggy address:
  32:   0x1c0600004dc0: fd fd fd fd fa fa fd fd fd fd fa fa fd fd fd fd
  33:   0x1c0600004dd0: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd
  34:   0x1c0600004de0: fd fd fa fa fd fd fd fd fa fa 00 00 02 fa fa fa
  35:   0x1c0600004df0: 00 00 00 00 fa fa 00 00 00 01 fa fa 00 00 00 00
  36:   0x1c0600004e00: fa fa 00 00 00 01 fa fa fd fd fd fd fa fa fd fd
  37: =>0x1c0600004e10: fd fa fa fa fd fd fd fa fa fa 00 00[07]fa fa fa
  38:   0x1c0600004e20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  39:   0x1c0600004e30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  40:   0x1c0600004e40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  41:   0x1c0600004e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  42:   0x1c0600004e60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  43: Shadow byte legend (one shadow byte represents 8 application bytes):
  44:   Addressable:           00
  45:   Partially addressable: 01 02 03 04 05 06 07 
  46:   Heap left redzone:       fa
  47:   Freed heap region:       fd
  48:   Stack left redzone:      f1
  49:   Stack mid redzone:       f2
  50:   Stack right redzone:     f3
  51:   Stack after return:      f5
  52:   Stack use after scope:   f8
  53:   Global redzone:          f9
  54:   Global init order:       f6
  55:   Poisoned by user:        f7
  56:   Container overflow:      fc
  57:   Array cookie:            ac
  58:   Intra object redzone:    bb
  59:   ASan internal:           fe
  60:   Left alloca redzone:     ca
  61:   Right alloca redzone:    cb
  62: ==27828==ABORTING
  63: ./lib/main.sh: line 102: 27828 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/002-it-does-not-escape-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol of variable expansion `$` does result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\$TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226_NAME`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==27966==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000027117 at pc 0x00010d0acc10 bp 0x7fff52b6a1a0 sp 0x7fff52b6a198
  03: WRITE of size 1 at 0x603000027117 thread T0
  04:     #0 0x10d0acc0f in value_of_local local_get.c:60
  05:     #1 0x10d0ac993 in local_get_var local_get.c:17
  06:     #2 0x10d0b9772 in expand_from_env expand_param.c:58
  07:     #3 0x10d0b92d3 in parameter_expansion expand_param.c:84
  08:     #4 0x10d0badf9 in exec_expand expand_word.c:84
  09:     #5 0x10d0c08b2 in lex_all lex_all.c:14
  10:     #6 0x10d0d1da1 in lex_and_parse lex_and_parse.c:47
  11:     #7 0x10d0d2841 in main_loop main_loop.c:70
  12:     #8 0x10d0db6eb in main main.c:78
  13:     #9 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  14: 
  15: 0x603000027117 is located 0 bytes to the right of 23-byte region [0x603000027100,0x603000027117)
  16: allocated by thread T0 here:
  17:     #0 0x10d252f3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  18:     #1 0x10d0e2f8f in ft_memalloc ft_memalloc.c:17
  19:     #2 0x10d0acb78 in value_of_local local_get.c:57
  20:     #3 0x10d0ac993 in local_get_var local_get.c:17
  21:     #4 0x10d0b9772 in expand_from_env expand_param.c:58
  22:     #5 0x10d0b92d3 in parameter_expansion expand_param.c:84
  23:     #6 0x10d0badf9 in exec_expand expand_word.c:84
  24:     #7 0x10d0c08b2 in lex_all lex_all.c:14
  25:     #8 0x10d0d1da1 in lex_and_parse lex_and_parse.c:47
  26:     #9 0x10d0d2841 in main_loop main_loop.c:70
  27:     #10 0x10d0db6eb in main main.c:78
  28:     #11 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:60 in value_of_local
  31: Shadow bytes around the buggy address:
  32:   0x1c0600004dd0: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd
  33:   0x1c0600004de0: fd fd fa fa fd fd fd fd fa fa 00 00 02 fa fa fa
  34:   0x1c0600004df0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 fa
  35:   0x1c0600004e00: fa fa 00 00 00 00 fa fa 00 00 00 fa fa fa fd fd
  36:   0x1c0600004e10: fd fd fa fa fd fd fd fa fa fa fd fd fd fa fa fa
  37: =>0x1c0600004e20: 00 00[07]fa fa fa fa fa fa fa fa fa fa fa fa fa
  38:   0x1c0600004e30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  39:   0x1c0600004e40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  40:   0x1c0600004e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  41:   0x1c0600004e60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  42:   0x1c0600004e70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  43: Shadow byte legend (one shadow byte represents 8 application bytes):
  44:   Addressable:           00
  45:   Partially addressable: 01 02 03 04 05 06 07 
  46:   Heap left redzone:       fa
  47:   Freed heap region:       fd
  48:   Stack left redzone:      f1
  49:   Stack mid redzone:       f2
  50:   Stack right redzone:     f3
  51:   Stack after return:      f5
  52:   Stack use after scope:   f8
  53:   Global redzone:          f9
  54:   Global init order:       f6
  55:   Poisoned by user:        f7
  56:   Container overflow:      fc
  57:   Array cookie:            ac
  58:   Intra object redzone:    bb
  59:   ASan internal:           fe
  60:   Left alloca redzone:     ca
  61:   Right alloca redzone:    cb
  62: ==27966==ABORTING
  63: ./lib/main.sh: line 102: 27966 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/003-escape-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using three backslashes `\\` before the symbol of variable expansion `$` does not result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\\$TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_NAME`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==28104==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000027117 at pc 0x000106d92c10 bp 0x7fff58e841a0 sp 0x7fff58e84198
  03: WRITE of size 1 at 0x603000027117 thread T0
  04:     #0 0x106d92c0f in value_of_local local_get.c:60
  05:     #1 0x106d92993 in local_get_var local_get.c:17
  06:     #2 0x106d9f772 in expand_from_env expand_param.c:58
  07:     #3 0x106d9f2d3 in parameter_expansion expand_param.c:84
  08:     #4 0x106da0df9 in exec_expand expand_word.c:84
  09:     #5 0x106da68b2 in lex_all lex_all.c:14
  10:     #6 0x106db7da1 in lex_and_parse lex_and_parse.c:47
  11:     #7 0x106db8841 in main_loop main_loop.c:70
  12:     #8 0x106dc16eb in main main.c:78
  13:     #9 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  14: 
  15: 0x603000027117 is located 0 bytes to the right of 23-byte region [0x603000027100,0x603000027117)
  16: allocated by thread T0 here:
  17:     #0 0x106f3ff3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  18:     #1 0x106dc8f8f in ft_memalloc ft_memalloc.c:17
  19:     #2 0x106d92b78 in value_of_local local_get.c:57
  20:     #3 0x106d92993 in local_get_var local_get.c:17
  21:     #4 0x106d9f772 in expand_from_env expand_param.c:58
  22:     #5 0x106d9f2d3 in parameter_expansion expand_param.c:84
  23:     #6 0x106da0df9 in exec_expand expand_word.c:84
  24:     #7 0x106da68b2 in lex_all lex_all.c:14
  25:     #8 0x106db7da1 in lex_and_parse lex_and_parse.c:47
  26:     #9 0x106db8841 in main_loop main_loop.c:70
  27:     #10 0x106dc16eb in main main.c:78
  28:     #11 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:60 in value_of_local
  31: Shadow bytes around the buggy address:
  32:   0x1c0600004dd0: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd
  33:   0x1c0600004de0: fd fd fa fa fd fd fd fd fa fa 00 00 02 fa fa fa
  34:   0x1c0600004df0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 fa
  35:   0x1c0600004e00: fa fa 00 00 00 00 fa fa 00 00 00 fa fa fa fd fd
  36:   0x1c0600004e10: fd fd fa fa fd fd fd fa fa fa fd fd fd fa fa fa
  37: =>0x1c0600004e20: 00 00[07]fa fa fa fa fa fa fa fa fa fa fa fa fa
  38:   0x1c0600004e30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  39:   0x1c0600004e40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  40:   0x1c0600004e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  41:   0x1c0600004e60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  42:   0x1c0600004e70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  43: Shadow byte legend (one shadow byte represents 8 application bytes):
  44:   Addressable:           00
  45:   Partially addressable: 01 02 03 04 05 06 07 
  46:   Heap left redzone:       fa
  47:   Freed heap region:       fd
  48:   Stack left redzone:      f1
  49:   Stack mid redzone:       f2
  50:   Stack right redzone:     f3
  51:   Stack after return:      f5
  52:   Stack use after scope:   f8
  53:   Global redzone:          f9
  54:   Global init order:       f6
  55:   Poisoned by user:        f7
  56:   Container overflow:      fc
  57:   Array cookie:            ac
  58:   Intra object redzone:    bb
  59:   ASan internal:           fe
  60:   Left alloca redzone:     ca
  61:   Right alloca redzone:    cb
  62: ==28104==ABORTING
  63: ./lib/main.sh: line 102: 28104 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..e}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@b@c@d@e@$`[0m
[38;5;239m  01: e@d@c@b@a@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711040226{a..e}TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226aTOKEN201711040226@TOKEN201711040226bTOKEN201711040226@TOKEN201711040226cTOKEN201711040226@TOKEN201711040226dTOKEN201711040226@TOKEN201711040226eTOKEN201711040226@$`[0m
[38;5;239m  01: TOKEN201711040226eTOKEN201711040226@TOKEN201711040226dTOKEN201711040226@TOKEN201711040226cTOKEN201711040226@TOKEN201711040226bTOKEN201711040226@TOKEN201711040226aTOKEN201711040226@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..E}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@$`[0m
[38;5;239m  01: E@D@C@B@A@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/004-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {E..A}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^E@D@C@B@A@$`[0m
[38;5;239m  01: {E..A}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/005-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711040226{E..A}TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226ETOKEN201711040226@TOKEN201711040226DTOKEN201711040226@TOKEN201711040226CTOKEN201711040226@TOKEN201711040226BTOKEN201711040226@TOKEN201711040226ATOKEN201711040226@$`[0m
[38;5;239m  01: TOKEN201711040226{E..A}TOKEN201711040226@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/006-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711040226{e..a}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226e@TOKEN201711040226d@TOKEN201711040226c@TOKEN201711040226b@TOKEN201711040226a@$`[0m
[38;5;239m  01: TOKEN201711040226{e..a}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/007-identical-start-and-end[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single ASCII value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {f..f}[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^f@$`[0m
[38;5;239m  01: f@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/008-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..b}{c..d}{e..f}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^ace@acf@ade@adf@bce@bcf@bde@bdf@$`[0m
[38;5;239m  01: bdf@bde@bcf@bce@adf@ade@acf@ace@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/009-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711040226{a..b}abc{Z..X}def{s..s}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226aabcZdefs@TOKEN201711040226aabcYdefs@TOKEN201711040226aabcXdefs@TOKEN201711040226babcZdefs@TOKEN201711040226babcYdefs@TOKEN201711040226babcXdefs@$`[0m
[38;5;239m  01: TOKEN201711040226{a..b}abc{Z..X}def{s..s}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/010-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..z}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@.+@.?@.+@.+@_@.+@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@$`[0m
[38;5;239m  01: z@y@x@w@v@u@t@s@r@q@p@o@n@m@l@k@j@i@h@g@f@e@d@c@b@a@`@_@^@]@\@[@Z@Y@X@W@V@U@T@S@R@Q@P@O@N@M@L@K@J@I@H@G@F@E@D@C@B@A@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/001-invalid-pattern-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {A}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^{A}$`[0m
[38;5;239m  01: A[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/002-invalid-pattern-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {B..}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^{B..}$`[0m
[38;5;239m  01: B..[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/003-invalid-pattern-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {..C}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^{..C}$`[0m
[38;5;239m  01: ..C[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/004-invalid-pattern-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {Q..C..1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^{Q..C..1}$`[0m
[38;5;239m  01: Q..C..1[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/001-nothing-to-be-done[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is not processed when neither range `..` nor comma `,` tokens is specified.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {TOKEN201711040226}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `{TOKEN201711040226}`[0m
[38;5;239m  01: TOKEN201711040226[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/002-simple-test-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed when at least one comma `,` is encountered.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711040226_A,TOKEN201711040226_B}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_A@TOKEN201711040226_B@$`[0m
[38;5;239m  01: TOKEN201711040226_B@TOKEN201711040226_A@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/003-simple-test-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed with a list of three patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711040226_A,TOKEN201711040226_B,TOKEN201711040226_C}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_A@TOKEN201711040226_B@TOKEN201711040226_C@$`[0m
[38;5;239m  01: TOKEN201711040226_C@TOKEN201711040226_B@TOKEN201711040226_A@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^1@2@3@4@5@$`[0m
[38;5;239m  01: 5@4@3@2@1@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711040226{1..5}TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110402261TOKEN201711040226@TOKEN2017110402262TOKEN201711040226@TOKEN2017110402263TOKEN201711040226@TOKEN2017110402264TOKEN201711040226@TOKEN2017110402265TOKEN201711040226@$`[0m
[38;5;239m  01: TOKEN2017110402265TOKEN201711040226@TOKEN2017110402264TOKEN201711040226@TOKEN2017110402263TOKEN201711040226@TOKEN2017110402262TOKEN201711040226@TOKEN2017110402261TOKEN201711040226@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711040226{1..+5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110402261@TOKEN2017110402262@TOKEN2017110402263@TOKEN2017110402264@TOKEN2017110402265@$`[0m
[38;5;239m  01: TOKEN2017110402265@TOKEN2017110402264@TOKEN2017110402263@TOKEN2017110402262@TOKEN2017110402261@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/004-simple-ascending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-5..0}TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-5TOKEN201711040226@-4TOKEN201711040226@-3TOKEN201711040226@-2TOKEN201711040226@-1TOKEN201711040226@0TOKEN201711040226@$`[0m
[38;5;239m  01: 0TOKEN201711040226@-1TOKEN201711040226@-2TOKEN201711040226@-3TOKEN201711040226@-4TOKEN201711040226@-5TOKEN201711040226@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/005-simple-ascending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..-98}TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100TOKEN201711040226@-99TOKEN201711040226@-98TOKEN201711040226@$`[0m
[38;5;239m  01: -98TOKEN201711040226@-99TOKEN201711040226@-100TOKEN201711040226@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/006-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {5..1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^5@4@3@2@1@$`[0m
[38;5;239m  01: 1@2@3@4@5@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/007-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711040226{5..1}TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110402265TOKEN201711040226@TOKEN2017110402264TOKEN201711040226@TOKEN2017110402263TOKEN201711040226@TOKEN2017110402262TOKEN201711040226@TOKEN2017110402261TOKEN201711040226@$`[0m
[38;5;239m  01: TOKEN2017110402261TOKEN201711040226@TOKEN2017110402262TOKEN201711040226@TOKEN2017110402263TOKEN201711040226@TOKEN2017110402264TOKEN201711040226@TOKEN2017110402265TOKEN201711040226@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/008-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711040226{5..+1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110402265@TOKEN2017110402264@TOKEN2017110402263@TOKEN2017110402262@TOKEN2017110402261@$`[0m
[38;5;239m  01: TOKEN2017110402261@TOKEN2017110402262@TOKEN2017110402263@TOKEN2017110402264@TOKEN2017110402265@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/009-simple-descending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {0..-5}TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^0TOKEN201711040226@-1TOKEN201711040226@-2TOKEN201711040226@-3TOKEN201711040226@-4TOKEN201711040226@-5TOKEN201711040226@$`[0m
[38;5;239m  01: -5TOKEN201711040226@-4TOKEN201711040226@-3TOKEN201711040226@-2TOKEN201711040226@-1TOKEN201711040226@0TOKEN201711040226@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/010-simple-descending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-98..-100}TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-98TOKEN201711040226@-99TOKEN201711040226@-100TOKEN201711040226@$`[0m
[38;5;239m  01: -100TOKEN201711040226@-99TOKEN201711040226@-98TOKEN201711040226@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/011-identical-positive-start-and-end[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {42..42}[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^42@$`[0m
[38;5;239m  01: 42@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/012-identical-negative-start-and-end[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-42..-42}[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^-42@$`[0m
[38;5;239m  01: -42@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/013-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}{3..4}{5..6}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^135@136@145@146@235@236@245@246@$`[0m
[38;5;239m  01: 246@245@236@235@146@145@136@135@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/014-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711040226{1..2}abc{-50..-53}def{0..0}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110402261abc-50def0@TOKEN2017110402261abc-51def0@TOKEN2017110402261abc-52def0@TOKEN2017110402261abc-53def0@TOKEN2017110402262abc-50def0@TOKEN2017110402262abc-51def0@TOKEN2017110402262abc-52def0@TOKEN2017110402262abc-53def0@$`[0m
[38;5;239m  01: TOKEN2017110402262abc-53def0@TOKEN2017110402262abc-52def0@TOKEN2017110402262abc-51def0@TOKEN2017110402262abc-50def0@TOKEN2017110402261abc-53def0@TOKEN2017110402261abc-52def0@TOKEN2017110402261abc-51def0@TOKEN2017110402261abc-50def0@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/015-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..100}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100@-99@-98@-97@-96@-95@-94@-93@-92@-91@-90@-89@-88@-87@-86@-85@-84@-83@-82@-81@-80@-79@-78@-77@-76@-75@-74@-73@-72@-71@-70@-69@-68@-67@-66@-65@-64@-63@-62@-61@-60@-59@-58@-57@-56@-55@-54@-53@-52@-51@-50@-49@-48@-47@-46@-45@-44@-43@-42@-41@-40@-39@-38@-37@-36@-35@-34@-33@-32@-31@-30@-29@-28@-27@-26@-25@-24@-23@-22@-21@-20@-19@-18@-17@-16@-15@-14@-13@-12@-11@-10@-9@-8@-7@-6@-5@-4@-3@-2@-1@0@1@2@3@4@5@6@7@8@9@10@11@12@13@14@15@16@17@18@19@20@21@22@23@24@25@26@27@28@29@30@31@32@33@34@35@36@37@38@39@40@41@42@43@44@45@46@47@48@49@50@51@52@53@54@55@56@57@58@59@60@61@62@63@64@65@66@67@68@69@70@71@72@73@74@75@76@77@78@79@80@81@82@83@84@85@86@87@88@89@90@91@92@93@94@95@96@97@98@99@100@$`[0m
[38;5;239m  01: 100@99@98@97@96@95@94@93@92@91@90@89@88@87@86@85@84@83@82@81@80@79@78@77@76@75@74@73@72@71@70@69@68@67@66@65@64@63@62@61@60@59@58@57@56@55@54@53@52@51@50@49@48@47@46@45@44@43@42@41@40@39@38@37@36@35@34@33@32@31@30@29@28@27@26@25@24@23@22@21@20@19@18@17@16@15@14@13@12@11@10@9@8@7@6@5@4@3@2@1@0@-1@-2@-3@-4@-5@-6@-7@-8@-9@-10@-11@-12@-13@-14@-15@-16@-17@-18@-19@-20@-21@-22@-23@-24@-25@-26@-27@-28@-29@-30@-31@-32@-33@-34@-35@-36@-37@-38@-39@-40@-41@-42@-43@-44@-45@-46@-47@-48@-49@-50@-51@-52@-53@-54@-55@-56@-57@-58@-59@-60@-61@-62@-63@-64@-65@-66@-67@-68@-69@-70@-71@-72@-73@-74@-75@-76@-77@-78@-79@-80@-81@-82@-83@-84@-85@-86@-87@-88@-89@-90@-91@-92@-93@-94@-95@-96@-97@-98@-99@-100@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/001-range-and-char[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with a range and 2 characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '1' '2' '3' 'a' 'b' 'z' 'C' '-' '[a-z-2]' 'a-z-2'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z-2][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a-z-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-z-2@`[0m
[31m[1;33m  WARNING    might match_regex `^-@2@a@b@z@$`[0m
[38;5;239m  01: z@b@a@2@-@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/002-reverse-range-and-chars[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with 2 patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a4' 'a3' 'a2' 'a42' 'a[42]' 'z4' 'z3' 'z2' 'z42' 'z[42]' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-y][42]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-y][42][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `42@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `z4@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `z2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z[[]42]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]42]@`[0m
[31m[1;33m  WARNING    might match_regex `^42@z2@z4@$`[0m
[38;5;239m  01: z4@z2@42@
  02: a4@a2@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/003-reverse-multi-hard[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check how the value inside multiple brackets are parsed with bracket as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '][' 'a[' '1['[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!]az][[]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^]az][[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `][[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]@`[0m
[31m[1;33m  WARNING    might match_regex `^1[[]@$`[0m
[38;5;239m  01: [!]az][[]@
  02: [^]az][[]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/004-simple-bracket+char+range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to control if 2 patterns splited by a minus characters can be match.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a-0' 'a-1' 'a-2' 'b-0' 'b-1' 'b-2' 'Z-0' 'Z-1' 'Z-2' 'a1' 'Z9' 'D4'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [aZ]-[1-9][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `Z-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `Z-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `D4@`[0m
[31m[1;33m  WARNING    might match_regex `^Z-1@Z-2@a-1@a-2@$`[0m
[38;5;239m  01: Z-2@Z-1@a-2@a-1@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/001-simple-opposit-match[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' '1' 'Z' 'd' 'e' 'f' 'def'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a1Z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a1Z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def@`[0m
[31m[1;33m  WARNING    might match_regex `^d@e@f@$`[0m
[38;5;239m  01: f@e@d@
  02: Z@a@1@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/002-simple-opposite-range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'z' '1' '2' '3' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `42@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@3@$`[0m
[38;5;239m  01: 3@2@1@
  02: z@c@b@a@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/001-alpha-range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[a-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'f' 'z' 'A' '1' '[a-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `A@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@f@z@$`[0m
[38;5;239m  01: z@f@a@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/002-numeric-range[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[0-9]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '4' '2' '1' '9' 'a' 'C' '[0-9]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [0-9][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `4@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]0-9]@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@4@9@$`[0m
[38;5;239m  01: 9@4@2@1@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/003-ascii-range-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the bracket expansion works with the following pattern []-z].
  One test use the following range which is the default range for bash:
  < > , ; : ! ' " ( ) [ ] { } @ $ \ # % 1 2 3 4 5 6 7 8 9 a A b B c C d D e E f F g G h H i I j J k K l L m M n N o O p P q Q r R s S t T u U v V w W x X y Y z
  The other use the ascii value, which does make more sense.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' '[' ']' '[]-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@c@$`[0m
[38;5;239m  01: []-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/004-ascii-range-2[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[1-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' ']' '[' '[1-z]' '1-z' '-'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [1-z][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1-z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]1-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^2@B@Z@[[]@]@a@c@$`[0m
[38;5;239m  01: Z@c@B@a@]@[@2@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/001-simple-list[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a simple list of characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '[bca]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [bca][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]bca]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@b@c@$`[0m
[38;5;239m  01: c@b@a@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/002-multi-bracket[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with multiple brackets patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch "TOKEN201711040226abcd" "TOKEN201711040226abc" "TOKEN201711040226abdc" "TOKEN201711040226b" "TOKEN201711040226" "TOKEN201711040226\[a]b\[c]\[d]"[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout TOKEN201711040226[a]b[c][d][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201711040226abcd@$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226abc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226abdc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226b@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226[[]a]b[[]c][[]d]@`[0m
[38;5;239m  01: TOKEN201711040226abcd@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/003-brackets-as-pattern[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` and a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' ']' 'a' 'Z' '[][]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [][][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@]@$`[0m
[38;5;239m  01: [][]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/004-multi-bracket-multi-char[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to match a file name which contain a bracket as first character.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 21 23 24 25 26 27 28 29 ']' '[' '[12][34]' '1234'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [12][34][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `13@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `14@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `23@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `24@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `0[0-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]12][[]34]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1234@`[0m
[31m[1;33m  WARNING    might match_regex `^13@14@23@24@$`[0m
[38;5;239m  01: 24@23@14@13@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/001-single-char[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a single character as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' '[a]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;34m  SUCCESS    might match_regex `^a@$`[0m
[38;5;239m  01: a@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/002-closing-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch ']' '[]]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@$`[0m
[38;5;239m  01: []]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/003-opening-bracket-char[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' '[[]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [[][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[][[]]@`[0m
[31m[38;5;34m  SUCCESS    might match_regex `^[[]@$`[0m
[38;5;239m  01: [@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/001-declare-and-expand-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring and expanding a local variable does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_VALUE
  02: ./write_on_stdout_and_stderr $TOKEN201711040226_NAME $TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_VALUE$`[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_VALUE$`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/002-declare-and-expand-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an empty variable is not expanded as an empty string and results in any new argument in the command line.[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=
  02: ./write_on_stdout_and_stderr $TOKEN201711040226_NAME $TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stdout`[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/003-unknown-variable-does-not-result-in-new-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an unknown variable is not expanded as an empty string and results in any new argument in the command line.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226_UNKNOWN"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201711040226_UNKNOWN TOKEN201711040226_DISPLAYED[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_DISPLAYED`[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/004-existing-variable-in-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE_OLD"[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_VALUE_NEW
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_NAME=TOKEN201711040226_VALUE_NEW$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711040226_NAME=TOKEN201711040226_VALUE_OLD$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==35646==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0001052cd870 bp 0x7fff5a982e70 sp 0x7fff5a982df0 T0)
  04: ==35646==The signal is caused by a READ memory access.
  05: ==35646==Hint: address points to the zero page.
  06:     #0 0x1052cd86f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x1052cde1c in ft_strequ ft_strequ.c:6
  08:     #2 0x1052805cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x1052bcc80 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x1052bd442 in exec_pipeline exec_pipeline.c:82
  11:     #5 0x1052badf5 in exec exec.c:37
  12:     #6 0x1052baf31 in exec_and_or exec_and_or.c:13
  13:     #7 0x1052badf5 in exec exec.c:37
  14:     #8 0x1052bca81 in exec_list exec_list.c:10
  15:     #9 0x1052badf5 in exec exec.c:37
  16:     #10 0x1052bbce5 in exec_complete_command exec_complete_command.c:9
  17:     #11 0x1052badf5 in exec exec.c:37
  18:     #12 0x1052bbdc1 in exec_complete_commands exec_complete_commands.c:10
  19:     #13 0x1052badf5 in exec exec.c:37
  20:     #14 0x1052bbe03 in exec_complete_commands exec_complete_commands.c:11
  21:     #15 0x1052badf5 in exec exec.c:37
  22:     #16 0x1052bd759 in exec_program exec_program.c:10
  23:     #17 0x1052badf5 in exec exec.c:37
  24:     #18 0x1052b8a85 in exec_main_loop lex_and_parse.c:18
  25:     #19 0x1052b901e in lex_and_parse lex_and_parse.c:70
  26:     #20 0x1052b9841 in main_loop main_loop.c:70
  27:     #21 0x1052c26eb in main main.c:78
  28:     #22 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: ==35646==Register values:
  31: rax = 0x0000000000000000  rbx = 0x00007fff5a982f80  rcx = 0x00000001052d37e0  rdx = 0x0000000000000063  
  32: rdi = 0x0000100000000000  rsi = 0x0000000000000000  rbp = 0x00007fff5a982e70  rsp = 0x00007fff5a982df0  
  33:  r8 = 0x00007fff5a982f00   r9 = 0x0000200000000000  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  34: r12 = 0x00007fff5a9835f0  r13 = 0x00007fff5a983630  r14 = 0x00007fff5a983580  r15 = 0x00007fff5a9835d0  
  35: AddressSanitizer can not provide additional info.
  36: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  37: ==35646==ABORTING
  38: ./lib/main.sh: line 102: 35646 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/005-existing-variable-in-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_NAME=$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711040226_NAME=TOKEN201711040226_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==35786==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010e300870 bp 0x7fff5194fe70 sp 0x7fff5194fdf0 T0)
  04: ==35786==The signal is caused by a READ memory access.
  05: ==35786==Hint: address points to the zero page.
  06:     #0 0x10e30086f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10e300e1c in ft_strequ ft_strequ.c:6
  08:     #2 0x10e2b35cf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10e2efc80 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10e2f0442 in exec_pipeline exec_pipeline.c:82
  11:     #5 0x10e2eddf5 in exec exec.c:37
  12:     #6 0x10e2edf31 in exec_and_or exec_and_or.c:13
  13:     #7 0x10e2eddf5 in exec exec.c:37
  14:     #8 0x10e2efa81 in exec_list exec_list.c:10
  15:     #9 0x10e2eddf5 in exec exec.c:37
  16:     #10 0x10e2eece5 in exec_complete_command exec_complete_command.c:9
  17:     #11 0x10e2eddf5 in exec exec.c:37
  18:     #12 0x10e2eedc1 in exec_complete_commands exec_complete_commands.c:10
  19:     #13 0x10e2eddf5 in exec exec.c:37
  20:     #14 0x10e2eee03 in exec_complete_commands exec_complete_commands.c:11
  21:     #15 0x10e2eddf5 in exec exec.c:37
  22:     #16 0x10e2f0759 in exec_program exec_program.c:10
  23:     #17 0x10e2eddf5 in exec exec.c:37
  24:     #18 0x10e2eba85 in exec_main_loop lex_and_parse.c:18
  25:     #19 0x10e2ec01e in lex_and_parse lex_and_parse.c:70
  26:     #20 0x10e2ec841 in main_loop main_loop.c:70
  27:     #21 0x10e2f56eb in main main.c:78
  28:     #22 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: ==35786==Register values:
  31: rax = 0x0000000000000000  rbx = 0x00007fff5194ff80  rcx = 0x000000010e3067e0  rdx = 0x0000000000000063  
  32: rdi = 0x0000100000000000  rsi = 0x0000000000000000  rbp = 0x00007fff5194fe70  rsp = 0x00007fff5194fdf0  
  33:  r8 = 0x00007fff5194ff00   r9 = 0x0000200000000000  r10 = 0x0000000000000000  r11 = 0xffffffffffffffff  
  34: r12 = 0x00007fff519505f0  r13 = 0x00007fff51950630  r14 = 0x00007fff51950580  r15 = 0x00007fff519505d0  
  35: AddressSanitizer can not provide additional info.
  36: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  37: ==35786==ABORTING
  38: ./lib/main.sh: line 102: 35786 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/006-existing-variable-in-environment-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion takes the environment variables into account.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==35924==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6030000270e7 at pc 0x00010f90ec10 bp 0x7fff503081a0 sp 0x7fff50308198
  03: WRITE of size 1 at 0x6030000270e7 thread T0
  04:     #0 0x10f90ec0f in value_of_local local_get.c:60
  05:     #1 0x10f90e993 in local_get_var local_get.c:17
  06:     #2 0x10f91b772 in expand_from_env expand_param.c:58
  07:     #3 0x10f91b2d3 in parameter_expansion expand_param.c:84
  08:     #4 0x10f91cdf9 in exec_expand expand_word.c:84
  09:     #5 0x10f9228b2 in lex_all lex_all.c:14
  10:     #6 0x10f933da1 in lex_and_parse lex_and_parse.c:47
  11:     #7 0x10f934841 in main_loop main_loop.c:70
  12:     #8 0x10f93d6eb in main main.c:78
  13:     #9 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  14: 
  15: 0x6030000270e7 is located 0 bytes to the right of 23-byte region [0x6030000270d0,0x6030000270e7)
  16: allocated by thread T0 here:
  17:     #0 0x10fab7f3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  18:     #1 0x10f944f8f in ft_memalloc ft_memalloc.c:17
  19:     #2 0x10f90eb78 in value_of_local local_get.c:57
  20:     #3 0x10f90e993 in local_get_var local_get.c:17
  21:     #4 0x10f91b772 in expand_from_env expand_param.c:58
  22:     #5 0x10f91b2d3 in parameter_expansion expand_param.c:84
  23:     #6 0x10f91cdf9 in exec_expand expand_word.c:84
  24:     #7 0x10f9228b2 in lex_all lex_all.c:14
  25:     #8 0x10f933da1 in lex_and_parse lex_and_parse.c:47
  26:     #9 0x10f934841 in main_loop main_loop.c:70
  27:     #10 0x10f93d6eb in main main.c:78
  28:     #11 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:60 in value_of_local
  31: Shadow bytes around the buggy address:
  32:   0x1c0600004dc0: fd fd fd fd fa fa fd fd fd fd fa fa fd fd fd fd
  33:   0x1c0600004dd0: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd
  34:   0x1c0600004de0: fd fd fa fa fd fd fd fd fa fa 00 00 02 fa fa fa
  35:   0x1c0600004df0: 00 00 00 00 fa fa 00 00 00 fa fa fa 00 00 00 00
  36:   0x1c0600004e00: fa fa 00 00 00 fa fa fa fd fd fd fd fa fa fd fd
  37: =>0x1c0600004e10: fd fa fa fa fd fd fd fa fa fa 00 00[07]fa fa fa
  38:   0x1c0600004e20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  39:   0x1c0600004e30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  40:   0x1c0600004e40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  41:   0x1c0600004e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  42:   0x1c0600004e60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  43: Shadow byte legend (one shadow byte represents 8 application bytes):
  44:   Addressable:           00
  45:   Partially addressable: 01 02 03 04 05 06 07 
  46:   Heap left redzone:       fa
  47:   Freed heap region:       fd
  48:   Stack left redzone:      f1
  49:   Stack mid redzone:       f2
  50:   Stack right redzone:     f3
  51:   Stack after return:      f5
  52:   Stack use after scope:   f8
  53:   Global redzone:          f9
  54:   Global init order:       f6
  55:   Poisoned by user:        f7
  56:   Container overflow:      fc
  57:   Array cookie:            ac
  58:   Intra object redzone:    bb
  59:   ASan internal:           fe
  60:   Left alloca redzone:     ca
  61:   Right alloca redzone:    cb
  62: ==35924==ABORTING
  63: ./lib/main.sh: line 102: 35924 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/007-multiple-declaration-at-a-time[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring multiple variables in the same command line does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME1=TOKEN201711040226_VALUE1 TOKEN201711040226_NAME2=TOKEN201711040226_VALUE2 TOKEN201711040226_NAME3=TOKEN201711040226_VALUE3
  02: ./write_on_stdout_and_stderr $TOKEN201711040226_NAME1 $TOKEN201711040226_NAME1
  03: ./write_on_stdout $TOKEN201711040226_NAME2
  04: ./write_on_stderr $TOKEN201711040226_NAME3[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711040226_VALUE3$`[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711040226_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_VALUE3$`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/008-multiple-declaration-with-same-name[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring the same variable several times in the same command line does work and does not result in error.[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_VALUE1 TOKEN201711040226_NAME=TOKEN201711040226_VALUE2 TOKEN201711040226_NAME=TOKEN201711040226_VALUE3
  02: ./write_on_stdout $TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711040226_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711040226_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_VALUE3$`[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/009-last-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the special variable `$?` may be expanded with the last exit status.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: ./write_on_stderr $?[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42$`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/inline-environment-variable/001-local-variable-shouldnt-be-set[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary does not result in local variable declaration but a modified environment for the command.[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_VALUE ./display_env
  02: ./write_on_stderr $TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_NAME=TOKEN201711040226_VALUE$`[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226_VALUE`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/001-truncating[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711040226_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_FILENAME
  02: ./write_on_stdout TOKEN201711040226_VALUE > $TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711040226_FILENAME` matching_regex `^TOKEN201711040226_VALUE$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/002-appending[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711040226_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_FILENAME
  02: ./write_on_stdout TOKEN201711040226_VALUE1 >> $TOKEN201711040226_NAME
  03: ./write_on_stdout TOKEN201711040226_VALUE2 >> $TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711040226_FILENAME` matching_regex `^TOKEN201711040226_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711040226_FILENAME` matching_regex `^TOKEN201711040226_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/003-reading[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711040226_FILENAME"
  02: echo "TOKEN201711040226_VALUE" > "TOKEN201711040226_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226_NAME=TOKEN201711040226_FILENAME
  02: ./read_on_stdin < $TOKEN201711040226_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_VALUE@$`[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/tilde-expansion/001-process-tilde-expansion[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tilde expansion `~` in variable declaration.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711040226"[0m

  STDIN:
[38;5;239m  01: TOKEN201711040226=~
  02: ./write_on_stdout TILDE:$TOKEN201711040226[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TILDE:~`[0m
[31m[1;33m  WARNING    might match_regex `TILDE:/TOKEN201711040226`[0m
[38;5;239m  01: 42sh: parse error near `'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/001-it-works[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the symbol double quote `"` does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "SIMPLE TEXT WITH SPACES"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `SIMPLE TEXT WITH SPACES`[0m
[38;5;239m  01: SIMPLE TEXT WITH SPACES[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A"B"CDEF"GHIJ""KLMNO" "P"QRS"T""U""V"WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/003-first-argument-inhibited[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the shell implementation has no special case for the first argument.[0m

  STDIN:
[38;5;239m  01: "./write_on_stdout_and_stderr" TOKEN201711040226_STDOUT TOKEN201711040226_STDERR[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_STDOUT`[0m
[38;5;239m  01: TOKEN201711040226_STDOUT[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_STDERR`[0m
[38;5;239m  01: TOKEN201711040226_STDERR[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/004-multiline-1[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "
  02: TOKEN201711040226_FIRST
  03: TOKEN201711040226_SECOND
  04: TOKEN201711040226_THIRD
  05: "[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201711040226_FIRST$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201711040226_SECOND$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201711040226_THIRD$`[0m
[38;5;239m  01: 
  02: TOKEN201711040226_FIRST
  03: TOKEN201711040226_SECOND
  04: TOKEN201711040226_THIRD
  05: [0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "
  02: "TOKEN201711040226"_FIRST
  03: TOKEN201711040226_SECOND" "TOKEN201711040226_THIRD
  04: TOKEN201711040226_FOU"RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_SECOND$`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_FOURTH$`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/001-escape-double-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711040226\"TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226"TOKEN201711040226`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: dquote> 
  02: [0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/002-escape-double-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711040226 \" TOKEN201711040226"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226 ` TOKEN201711040226$`[0m
[38;5;239m  01: TOKEN201711040226 \" TOKEN201711040226[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/003-escape-double-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "\""[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^"$`[0m
[38;5;239m  01: \"[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/004-it-results-in-error[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using backslash `\\` before the closing double-quote `"` does result in syntax error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711040226\"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711040226$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: dquote> 
  02: [0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/005-it-does-not-escape-double-quote[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol double-quote `"` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\"TOKEN201711040226\\"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\TOKEN201711040226\$`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "{1..2}"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `[{]1..2}`[0m
[38;5;239m  01: {1..2}[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}"{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  01: 2@1@{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  01: {1..2}@2@1@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}"{1..2}"{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: {1..2}@2@1@{1..2}@2@1@{1..2}@2@1@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}" {1..2} "{1..2}" "{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  01: {1..2}@2@1@{1..2}@{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: [@a@]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc"def"gh][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: [@a@bc@def@gh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/variable-expansion/001-expansion-enabled[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion is processed within double quotes.[0m

  Before test:
[38;5;239m  01: export "TOKEN=TOKEN201711040226"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==39647==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000026c31 at pc 0x000108887c10 bp 0x7fff5738f1a0 sp 0x7fff5738f198
  03: WRITE of size 1 at 0x603000026c31 thread T0
  04:     #0 0x108887c0f in value_of_local local_get.c:60
  05:     #1 0x108887993 in local_get_var local_get.c:17
  06:     #2 0x108894772 in expand_from_env expand_param.c:58
  07:     #3 0x1088942d3 in parameter_expansion expand_param.c:84
  08:     #4 0x108895df9 in exec_expand expand_word.c:84
  09:     #5 0x10889b8b2 in lex_all lex_all.c:14
  10:     #6 0x1088acda1 in lex_and_parse lex_and_parse.c:47
  11:     #7 0x1088ad841 in main_loop main_loop.c:70
  12:     #8 0x1088b66eb in main main.c:78
  13:     #9 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  14: 
  15: 0x603000026c31 is located 0 bytes to the right of 17-byte region [0x603000026c20,0x603000026c31)
  16: allocated by thread T0 here:
  17:     #0 0x108a2ef3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  18:     #1 0x1088bdf8f in ft_memalloc ft_memalloc.c:17
  19:     #2 0x108887b78 in value_of_local local_get.c:57
  20:     #3 0x108887993 in local_get_var local_get.c:17
  21:     #4 0x108894772 in expand_from_env expand_param.c:58
  22:     #5 0x1088942d3 in parameter_expansion expand_param.c:84
  23:     #6 0x108895df9 in exec_expand expand_word.c:84
  24:     #7 0x10889b8b2 in lex_all lex_all.c:14
  25:     #8 0x1088acda1 in lex_and_parse lex_and_parse.c:47
  26:     #9 0x1088ad841 in main_loop main_loop.c:70
  27:     #10 0x1088b66eb in main main.c:78
  28:     #11 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:60 in value_of_local
  31: Shadow bytes around the buggy address:
  32:   0x1c0600004d30: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fd
  33:   0x1c0600004d40: fa fa fd fd fd fd fa fa fd fd fd fd fa fa 00 00
  34:   0x1c0600004d50: 00 04 fa fa fd fd fd fd fa fa 00 00 00 04 fa fa
  35:   0x1c0600004d60: 00 00 00 04 fa fa 00 00 02 fa fa fa 00 00 00 00
  36:   0x1c0600004d70: fa fa 00 00 00 00 fa fa fd fd fd fd fa fa fd fd
  37: =>0x1c0600004d80: fd fa fa fa 00 00[01]fa fa fa fa fa fa fa fa fa
  38:   0x1c0600004d90: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  39:   0x1c0600004da0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  40:   0x1c0600004db0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  41:   0x1c0600004dc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  42:   0x1c0600004dd0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  43: Shadow byte legend (one shadow byte represents 8 application bytes):
  44:   Addressable:           00
  45:   Partially addressable: 01 02 03 04 05 06 07 
  46:   Heap left redzone:       fa
  47:   Freed heap region:       fd
  48:   Stack left redzone:      f1
  49:   Stack mid redzone:       f2
  50:   Stack right redzone:     f3
  51:   Stack after return:      f5
  52:   Stack use after scope:   f8
  53:   Global redzone:          f9
  54:   Global init order:       f6
  55:   Poisoned by user:        f7
  56:   Container overflow:      fc
  57:   Array cookie:            ac
  58:   Intra object redzone:    bb
  59:   ASan internal:           fe
  60:   Left alloca redzone:     ca
  61:   Right alloca redzone:    cb
  62: ==39647==ABORTING
  63: ./lib/main.sh: line 102: 39647 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/001-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "ABCD'EFG"HI'J"KL"'MNO'P"' Q"RS'T'U''"VW'X"Y'Z[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCD'EFGHIJ"KL"MNOP`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `QRS'T'U''VWX"YZ`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/002-multiline[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony in multiline mode.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711040226"_FIR'ST
  03: TOKEN201711040226_SECOND" 'TOKEN201711040226_TH"IRD
  04: TOKEN201711040226_FOU'RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_FIR'ST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_SECOND$`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_TH"IRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_FOURTH$`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}'{1..2}'{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: {1..2}@2@1@{1..2}@2@1@{1..2}@2@1@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [""'a'""][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: [@@a@@]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc'def'gh][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: [@a@bc@def@gh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/variable-expansion/001-it-does-not-expand-in-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check if a local variable is display correctly inside simple and double quote.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN201711040226_NAME"$TOKEN201711040226_NAME'$TOKEN201711040226_NAME'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_VALUETOKEN201711040226_VALUE[$]TOKEN201711040226_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: =================================================================
  02: ==40534==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000027117 at pc 0x00010ad4fc10 bp 0x7fff54ec71a0 sp 0x7fff54ec7198
  03: WRITE of size 1 at 0x603000027117 thread T0
  04:     #0 0x10ad4fc0f in value_of_local local_get.c:60
  05:     #1 0x10ad4f993 in local_get_var local_get.c:17
  06:     #2 0x10ad5c772 in expand_from_env expand_param.c:58
  07:     #3 0x10ad5c2d3 in parameter_expansion expand_param.c:84
  08:     #4 0x10ad5ddf9 in exec_expand expand_word.c:84
  09:     #5 0x10ad638b2 in lex_all lex_all.c:14
  10:     #6 0x10ad74da1 in lex_and_parse lex_and_parse.c:47
  11:     #7 0x10ad75841 in main_loop main_loop.c:70
  12:     #8 0x10ad7e6eb in main main.c:78
  13:     #9 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  14: 
  15: 0x603000027117 is located 0 bytes to the right of 23-byte region [0x603000027100,0x603000027117)
  16: allocated by thread T0 here:
  17:     #0 0x10aefcf3c in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x58f3c)
  18:     #1 0x10ad85f8f in ft_memalloc ft_memalloc.c:17
  19:     #2 0x10ad4fb78 in value_of_local local_get.c:57
  20:     #3 0x10ad4f993 in local_get_var local_get.c:17
  21:     #4 0x10ad5c772 in expand_from_env expand_param.c:58
  22:     #5 0x10ad5c2d3 in parameter_expansion expand_param.c:84
  23:     #6 0x10ad5ddf9 in exec_expand expand_word.c:84
  24:     #7 0x10ad638b2 in lex_all lex_all.c:14
  25:     #8 0x10ad74da1 in lex_and_parse lex_and_parse.c:47
  26:     #9 0x10ad75841 in main_loop main_loop.c:70
  27:     #10 0x10ad7e6eb in main main.c:78
  28:     #11 0x7fff9f965234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: SUMMARY: AddressSanitizer: heap-buffer-overflow local_get.c:60 in value_of_local
  31: Shadow bytes around the buggy address:
  32:   0x1c0600004dd0: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd
  33:   0x1c0600004de0: fd fd fa fa fd fd fd fd fa fa 00 00 02 fa fa fa
  34:   0x1c0600004df0: 00 00 00 00 fa fa fd fd fd fd fa fa 00 00 00 00
  35:   0x1c0600004e00: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa fd fd
  36:   0x1c0600004e10: fd fd fa fa fd fd fd fa fa fa fd fd fd fa fa fa
  37: =>0x1c0600004e20: 00 00[07]fa fa fa fa fa fa fa fa fa fa fa fa fa
  38:   0x1c0600004e30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  39:   0x1c0600004e40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  40:   0x1c0600004e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  41:   0x1c0600004e60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  42:   0x1c0600004e70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  43: Shadow byte legend (one shadow byte represents 8 application bytes):
  44:   Addressable:           00
  45:   Partially addressable: 01 02 03 04 05 06 07 
  46:   Heap left redzone:       fa
  47:   Freed heap region:       fd
  48:   Stack left redzone:      f1
  49:   Stack mid redzone:       f2
  50:   Stack right redzone:     f3
  51:   Stack after return:      f5
  52:   Stack use after scope:   f8
  53:   Global redzone:          f9
  54:   Global init order:       f6
  55:   Poisoned by user:        f7
  56:   Container overflow:      fc
  57:   Array cookie:            ac
  58:   Intra object redzone:    bb
  59:   ASan internal:           fe
  60:   Left alloca redzone:     ca
  61:   Right alloca redzone:    cb
  62: ==40534==ABORTING
  63: ./lib/main.sh: line 102: 40534 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/001-it-works[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the symbol simple quote `'` does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout 'SIMPLE TEXT WITH SPACES'[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `SIMPLE TEXT WITH SPACES`[0m
[38;5;239m  01: SIMPLE TEXT WITH SPACES[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A'B'CDEF'GHIJ''KLMNO' 'P'QRS'T''U''V'WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/003-first-argument-inhibited[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the shell implementation has no special case for the first argument.[0m

  STDIN:
[38;5;239m  01: './write_on_stdout_and_stderr' TOKEN201711040226_STDOUT TOKEN201711040226_STDERR[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_STDOUT`[0m
[38;5;239m  01: TOKEN201711040226_STDOUT[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_STDERR`[0m
[38;5;239m  01: TOKEN201711040226_STDERR[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/004-multiline-1[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '
  02: TOKEN201711040226_FIRST
  03: TOKEN201711040226_SECOND
  04: TOKEN201711040226_THIRD
  05: '[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201711040226_FIRST$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201711040226_SECOND$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201711040226_THIRD$`[0m
[38;5;239m  01: 
  02: TOKEN201711040226_FIRST
  03: TOKEN201711040226_SECOND
  04: TOKEN201711040226_THIRD
  05: [0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711040226'_FIRST
  03: TOKEN201711040226_SECOND' 'TOKEN201711040226_THIRD
  04: TOKEN201711040226_FOU'RT'H
  05: '[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_SECOND$`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_FOURTH$`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/001-escape-simple-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711040226\'TOKEN201711040226[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226'TOKEN201711040226`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: quote> [0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/002-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr \'TOKEN201711040226_STDOUT TOKEN201711040226_STDERR\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^'TOKEN201711040226_STDOUT$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_STDERR'$`[0m
[38;5;239m  01: quote> [0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/003-escape-simple-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: quote> [0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/004-it-does-not-escape-simple-quote-1[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using backslash `\\` before the closing simple-quote `'` does result in syntax error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr 'TOKEN201711040226_STDOUT\' 'TOKEN201711040226_STDERR\'[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711040226_STDOUT\$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711040226_STDERR\$`[0m
[38;5;239m  01: quote> [0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/005-it-does-not-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol simple-quote `'` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\'TOKEN201711040226\\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\TOKEN201711040226\\$`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '{1..2}'[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `[{]1..2}`[0m
[38;5;239m  01: {1..2}[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}'{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  01: 2@1@{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  01: {1..2}@2@1@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}'{1..2}'{1..2}'{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: {1..2}@2@1@{1..2}@2@1@{1..2}@2@1@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}' {1..2} '{1..2}' '{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  01: {1..2}@2@1@{1..2}@{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: [@a@]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'bc'def'gh][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: [@a@bc@def@gh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/variable-expansion/001-expansion-disabled[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion is not processed within simple quotes.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '[$]TOKEN201711040226_NAME'[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_NAME`[0m
[38;5;239m  01: [$]TOKEN201711040226_NAME[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/001-tokens-are-recognized[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that adding twice symbols `(` and `)` in a command line does not make the Shell resulting in error.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout TOKEN201711040226)[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: (./write_on_stdout: no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/subshell/002-multiple-levels-of-subshells[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that imbricating multiple subshells does not result in error.[0m

  STDIN:
[38;5;239m  01: ( ( ( ( ./write_on_stdout TOKEN201711040226 ) ) ) )[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226`[0m
[38;5;239m  01: TOKEN201711040226[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/003-multiline[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell implementation may parse a subshell command on multiple lines.[0m

  STDIN:
[38;5;239m  01: (
  02: ./write_on_stdout TOKEN201711040226_SUBSHELL1 ;
  03: ./write_on_stdout TOKEN201711040226_SUBSHELL2
  04: )[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_SUBSHELL1`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_SUBSHELL2`[0m
[38;5;239m  01: TOKEN201711040226_SUBSHELL1
  02: TOKEN201711040226_SUBSHELL2[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/004-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a subshell command that is executed at the end of a script is correctly returned at termination by the parent shell.[0m

  STDIN:
[38;5;239m  01: (./exit_with_status 42)[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: (./exit_with_status: no such file or directory[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status 42[0m

----------------------------------------------------------------

[37;1m42sh/subshell/005-copy-of-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a subshell get a copy of the parent environment.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_VAR1=VALUE1"
  02: export "TOKEN201711040226_VAR2=VALUE2"
  03: export "TOKEN201711040226_VAR3=VALUE3"[0m

  STDIN:
[38;5;239m  01: (./display_env)[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_VAR1=VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_VAR2=VALUE2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_VAR3=VALUE3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: (./display_env): no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/001-parse-error-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: (./write_on_stdout)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/002-parse-error-2[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout) (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: (./write_on_stdout): no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/003-parse-error-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ) (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: 42sh: parse error near `)'[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/004-parse-error-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ( (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: 42sh: parse error near `('[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/cd/001-it-does-not-change-current-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the part of a command line that is embraced within the subshell tokens `(` and `)` effectively results in a subshell execution.[0m

  STDIN:
[38;5;239m  01: (cd /)
  02: ./display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[38;5;239m  01: PWD:/Users/vcombey/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: (cd: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/cd/002-multiline[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell implementation may parse a subshell command on multiple lines.[0m

  STDIN:
[38;5;239m  01: (
  02: cd / ;
  03: /Users/vcombey/42ShellTester/tmp/write_on_stdout TOKEN201711040226_SUBSHELL ;
  04: /Users/vcombey/42ShellTester/tmp/display_pwd
  05: )
  06: ./write_on_stdout TOKEN201711040226_PARENT[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^PWD:/:PWD$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_SUBSHELL`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_PARENT`[0m
[38;5;239m  01: TOKEN201711040226_SUBSHELL
  02: PWD:/:PWD
  03: TOKEN201711040226_PARENT[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/exit/001-exiting-subshell[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that prematurely exiting a subshell does work and does not result in parent shell termination.[0m

  STDIN:
[38;5;239m  01: (exit ; ./write_on_stdout TOKEN201711040226_NOT_DISPLAYED)
  02: ./write_on_stdout TOKEN201711040226_DISPLAYED[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711040226_NOT_DISPLAYED`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_DISPLAYED`[0m
[38;5;239m  01: TOKEN201711040226_NOT_DISPLAYED)
  02: TOKEN201711040226_DISPLAYED[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: (exit: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/setenv/001-it-does-not-modify-parent-environment[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that changing environment in subshell commands does not result in a changed of the parent shell's environment.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711040226_NAME"[0m

  STDIN:
[38;5;239m  01: (setenv TOKEN201711040226_NAME=TOKEN201711040226_VALUE ; setenv TOKEN201711040226_NAME TOKEN201711040226_VALUE ; export TOKEN201711040226_NAME=TOKEN201711040226_VALUE)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226_NAME=TOKEN201711040226_VALUE`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-ocean
  18: ITERM_PROFILE=vcombey
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=15;0
  24: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: COLORTERM=truecolor
  30: OLDPWD=/Users/vcombey/42ShellTester
  31: _=/Users/vcombey/42/42sh/42sh
  32: HISTFILE=.42sh_history
  33: PS1=$> 
  34: PS2=dquote> 
  35: PS3=quote> 
  36: ------------------------------
  37: TOTAL ENVIRONMENT VARIABLES: 34[0m

  STDERR:
[38;5;239m  01: (setenv: command not found
  02: usage: setenv key1=value1 key2=value2 ..
  03: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/unsetenv/001-it-does-not-modify-parent-environment[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that changing environment in subshell commands does not result in a changed of the parent shell's environment.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711040226_NAME=TOKEN201711040226_VALUE"[0m

  STDIN:
[38;5;239m  01: (unsetenv TOKEN201711040226_NAME ; unset TOKEN201711040226_NAME)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226_NAME=TOKEN201711040226_VALUE`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: OLDPWD=/Users/vcombey/42ShellTester
  09: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  10: ZSH=/Users/vcombey/.oh-my-zsh
  11: USER=vcombey
  12: TOKEN201711040226_NAME=TOKEN201711040226_VALUE
  13: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  14: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  15: PAGER=less
  16: LSCOLORS=Gxfxcxdxbxegedabagacad
  17: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  18: PWD=/Users/vcombey/42ShellTester/tmp
  19: BASE16_THEME=base16-ocean
  20: ITERM_PROFILE=vcombey
  21: XPC_FLAGS=0x0
  22: XPC_SERVICE_NAME=0
  23: SHLVL=3
  24: HOME=/Users/vcombey
  25: COLORFGBG=15;0
  26: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  27: LESS=-R
  28: LOGNAME=vcombey
  29: LC_CTYPE=UTF-8
  30: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  31: COLORTERM=truecolor
  32: _=/Users/vcombey/42/42sh/42sh
  33: HISTFILE=.42sh_history
  34: PS1=$> 
  35: PS2=dquote> 
  36: PS3=quote> 
  37: ------------------------------
  38: TOTAL ENVIRONMENT VARIABLES: 35[0m

  STDERR:
[38;5;239m  01: (unsetenv: command not found
  02: unset: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/escaping/001-escaped-subshell-1[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a subshell with parentheses `(` and `)` may be escaped with backslash `\\`.[0m

  STDIN:
[38;5;239m  01: \(./write_on_stdout TOKEN201711040226_STDOUT\)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711040226_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Cc]ommand not found|[Nn]o such file or directory)`[0m
[38;5;239m  01: \(./write_on_stdout: no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/escaping/002-escaped-subshell-2[0m [31m[38;5;34m(SUCCESS)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tokens parentheses `(` and `)` for subshell generation may be escaped with backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\\(TOKEN201711040226_STDOUT\\\)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `\(TOKEN201711040226_STDOUT\)`[0m
[38;5;239m  01: \\\(TOKEN201711040226_STDOUT\\\)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/001-modifies-the-child-environment-only-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: (TOKEN201711040226_NAME=TOKEN201711040226_VALUE ./display_env)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_NAME=TOKEN201711040226_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: TERM=xterm-256color
  04: SHELL=42sh
  05: TMPDIR=/var/folders/x1/h5xkx7bn4_xdp90cr3vsc1700000gp/T/
  06: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.VZrzDYAu5i/Render
  07: TERM_PROGRAM_VERSION=3.1.4
  08: TERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  09: ZSH=/Users/vcombey/.oh-my-zsh
  10: USER=vcombey
  11: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.C7Y1zKBWvq/Listeners
  12: __CF_USER_TEXT_ENCODING=0x1F6:0x0:0x1
  13: PAGER=less
  14: LSCOLORS=Gxfxcxdxbxegedabagacad
  15: PATH=/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/vcombey/Users/vcombey/mongo/bin:/Users/vcombey/.gem/ruby/2.4.0/bin
  16: PWD=/Users/vcombey/42ShellTester/tmp
  17: BASE16_THEME=base16-ocean
  18: ITERM_PROFILE=vcombey
  19: XPC_FLAGS=0x0
  20: XPC_SERVICE_NAME=0
  21: SHLVL=3
  22: HOME=/Users/vcombey
  23: COLORFGBG=15;0
  24: ITERM_SESSION_ID=w0t0p2:CB7A0F75-ED55-4464-A30D-BFE1E636C368
  25: LESS=-R
  26: LOGNAME=vcombey
  27: LC_CTYPE=UTF-8
  28: BASE16_SHELL=/Users/vcombey/.config/base16-shell/
  29: COLORTERM=truecolor
  30: OLDPWD=/Users/vcombey/42ShellTester
  31: _=/Users/vcombey/42/42sh/42sh
  32: HISTFILE=.42sh_history
  33: PS1=$> 
  34: PS2=dquote> 
  35: PS3=quote> 
  36: ------------------------------
  37: TOTAL ENVIRONMENT VARIABLES: 34[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./display_env): no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/002-modifies-the-child-environment-only-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: ( (TOKEN201711040226_NAME=TOKEN201711040226_VALUE ./display_env) ; ./display_env) ; ./display_env
  02: [0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711040226_NAME=TOKEN201711040226_VALUE$` once[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: subsh> [0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/piping/001-subshells-inside-piped-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that subshells may be executed inside a piped command.[0m

  STDIN:
[38;5;239m  01: (cd / ; /Users/vcombey/42ShellTester/tmp/display_pwd) | (./read_on_stdin) | (./read_on_stdin)
  02: ./write_on_stdout TOKEN201711040226[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD@@$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226`[0m
[38;5;239m  01: TOKEN201711040226[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: (cd: command not found
  02: /Users/vcombey/42ShellTester/tmp/display_pwd): no such file or directory
  03: (./read_on_stdin): no such file or directory
  04: (./read_on_stdin): no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/piping/002-pipes-inside-subshells[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that piped command may be executed inside a subshell command.[0m

  STDIN:
[38;5;239m  01: (cd / ; /Users/vcombey/42ShellTester/tmp/display_pwd | /Users/vcombey/42ShellTester/tmp/read_on_stdin | /Users/vcombey/42ShellTester/tmp/read_on_stdin)
  02: ./write_on_stdout TOKEN201711040226[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD@@$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201711040226`[0m
[38;5;239m  01: TOKEN201711040226[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: (cd: command not found
  02: /Users/vcombey/42ShellTester/tmp/read_on_stdin): no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/piping/003-imbricated-subshells-and-pipes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that pipes and subshells run twice together in harmony.[0m

  STDIN:
[38;5;239m  01: ( ( (cd / ; /Users/vcombey/42ShellTester/tmp/display_pwd) | ./read_on_stdin) ) | ( ( (./read_on_stdin) ) | ./read_on_stdin )
  02: ./write_on_stdout TOKEN201711040226[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/vcombey/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD@@@$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: subsh> [0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/001-with-simple-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `'`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout 'TOKEN201711040226_FIRST)' ; (./write_on_stdout '(TOKEN201711040226_SECOND') )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_SECOND`[0m
[38;5;239m  01: 42sh: parse error near `)'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/002-with-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201711040226_FIRST)" ; (./write_on_stdout "(TOKEN201711040226_SECOND") )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_SECOND`[0m
[38;5;239m  01: 42sh: parse error near `)'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/003-with-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbols `'` and `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201711040226_FIRST)" ; (./write_on_stdout '(TOKEN201711040226_SECOND') )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711040226_SECOND`[0m
[38;5;239m  01: 42sh: parse error near `)'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

Total tests: 162
Total failed tests: 125
Total pending tests: 0
