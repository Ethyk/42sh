[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m                                                                                                                                                                                                                                                                    

----------------------------------------------------------------

[37;1m42sh/builtins/export/001-display-env[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` without parameters results at least in a display of the environment variables.[0m

  Before test:
[38;5;239m  01: rm -rf "./stored_env"
  02: env | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/002-export-basic-key-value-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` may declare a new environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711081720_NAME=TOKEN201711081720_VALUE
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_NAME=TOKEN201711081720_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/003-export-basic-key-value-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` may declare a new environment variable and is able to display it later.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711081720_NAME=TOKEN201711081720_VALUE
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_NAME=["]?TOKEN201711081720_VALUE["]?$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/004-export-empty-variable-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711081720
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/005-export-empty-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment, but can be displayed with the builtin `export`.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711081720
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/006-export-update-env-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting the same variable twice in a row does result in an updated variable, but not in a duplicated variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711081720_NAME=TOKEN201711081720_VALUE1
  02: export TOKEN201711081720_NAME=TOKEN201711081720_VALUE2
  03: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720_NAME=TOKEN201711081720_VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_NAME=TOKEN201711081720_VALUE2`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/007-existing-environment-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an existing variable results in an updated variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711081720_NAME=TOKEN201711081720_VALUE1"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711081720_NAME=TOKEN201711081720_VALUE2
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711081720_NAME=TOKEN201711081720_VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_NAME=TOKEN201711081720_VALUE2`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: TOKEN201711081720_NAME=TOKEN201711081720_VALUE1
  09: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  10: TERM_PROGRAM_VERSION=3.1.2
  11: OLDPWD=/Users/vcombey/42ShellTester
  12: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  13: ZSH=/Users/vcombey/.oh-my-zsh
  14: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  15: USER=vcombey
  16: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  17: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  18: PAGER=less
  19: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  20: DOTFILES=/Users/vcombey/.dotfiles
  21: LSCOLORS=HxBxcxdxbxegedabagacad
  22: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  23: ZSHRC=/Users/vcombey/.zshrc
  24: PWD=/Users/vcombey/42ShellTester/tmp
  25: EDITOR=vim
  26: BASE16_THEME=base16-nord
  27: LANG=en_US.UTF-8
  28: ITERM_PROFILE=Default
  29: XPC_FLAGS=0x0
  30: XPC_SERVICE_NAME=0
  31: INSTALL_ROOT=/Users/vcombey/.sbcl
  32: SHLVL=3
  33: HOME=/Users/vcombey
  34: COLORFGBG=7;0
  35: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  36: LESS=-R
  37: LOGNAME=vcombey
  38: VISUAL=vim
  39: LC_CTYPE=en_US.UTF-8
  40: COLORTERM=truecolor
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/008-local-to-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a declared local variable may be exported to the environment with the builtin `export`.[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_VALUE
  02: export TOKEN201711081720_NAME
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_NAME=TOKEN201711081720_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==41160==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010bb12970 bp 0x7fff5413dda0 sp 0x7fff5413dd20 T0)
  04: ==41160==The signal is caused by a READ memory access.
  05: ==41160==Hint: address points to the zero page.
  06:     #0 0x10bb1296f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10bb12edc in ft_strequ ft_strequ.c:6
  08:     #2 0x10bac47bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10bb010b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10bb0162b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10bafece5 in exec exec.c:39
  12:     #6 0x10bafee21 in exec_and_or exec_and_or.c:13
  13:     #7 0x10bafece5 in exec exec.c:39
  14:     #8 0x10bb00120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10bafece5 in exec exec.c:39
  16:     #10 0x10bb003c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10bafece5 in exec exec.c:39
  18:     #12 0x10bb00403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10bafece5 in exec exec.c:39
  20:     #14 0x10bb00403 in exec_complete_commands exec_complete_commands.c:11
  21:     #15 0x10bafece5 in exec exec.c:39
  22:     #16 0x10bb01919 in exec_program exec_program.c:10
  23:     #17 0x10bafece5 in exec exec.c:39
  24:     #18 0x10bafc3b5 in exec_main_loop lex_and_parse.c:18
  25:     #19 0x10bafcb12 in lex_and_parse lex_and_parse.c:79
  26:     #20 0x10bafd309 in main_loop main_loop.c:71
  27:     #21 0x10bb077e1 in main main.c:78
  28:     #22 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: ==41160==Register values:
  31: rax = 0x0000000000000000  rbx = 0x00007fff5413dea0  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  32: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5413dda0  rsp = 0x00007fff5413dd20  
  33:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x0000000000016ad0  r11 = 0x000000010eee7cf0  
  34: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5413e530  r15 = 0x00007fff5413e550  
  35: AddressSanitizer can not provide additional info.
  36: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  37: ==41160==ABORTING
  38: ./lib/main.sh: line 102: 41160 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/009-export-with-equal-but-no-value-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the builtin export works fine with equal sign but no value. This test is based on the environment variables return.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711081720_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_NAME=`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/010-export-with-equal-but-no-value-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the builtin export works fine with equal sign but no value. This test is based on the local variables return.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720"[0m

  STDIN:
[38;5;239m  01: export TOKEN201711081720_NAME=
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_NAME=`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/001-invalid-identifier-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export 42=TOKEN201711081720[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: export: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/002-invalid-identifier-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export .=TOKEN201711081720[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: export: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/003-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with an illegal option results in an error and a failure exit status.[0m

  STDIN:
[38;5;239m  01: export -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: export: command not found[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/001-export-and-tmp-env-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added variable into the exported list.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_VALUE export TOKEN201711081720_NAME
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_NAME=["]?TOKEN201711081720_VALUE["]?`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/002-export-and-tmp-env-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_VALUE export TOKEN201711081720_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_NAME=TOKEN201711081720_VALUE`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/001-export-with-only-p-parameter[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with the option `-p` results at least in a display of the environment variables.[0m

  Before test:
[38;5;239m  01: rm -rf "./stored_env"
  02: env | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/002-export-p-param-and-token-should-add-local-var-only-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if export with -p option + token , add the variable into export list but not in env list. And don't display the export variable on stdout.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711081720_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711081720_NAME
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/003-export-p-param-and-token-should-add-local-var-only-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` with option `-p` results in an added variable into the export list but not from the environment.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201711081720_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201711081720_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720_NAME`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/004-export-n-param[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that using the builtin `export` with option `-n` results in a removed environment variable.[0m

  Before test:
[38;5;239m  01: export TOKEN201711081720_NAME=TOKEN201711081720_VALUE[0m

  STDIN:
[38;5;239m  01: export -n TOKEN201711081720_NAME
  02: export
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711081720_NAME`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: TOKEN201711081720_NAME=TOKEN201711081720_VALUE
  09: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  10: TERM_PROGRAM_VERSION=3.1.2
  11: OLDPWD=/Users/vcombey/42ShellTester
  12: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  13: ZSH=/Users/vcombey/.oh-my-zsh
  14: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  15: USER=vcombey
  16: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  17: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  18: PAGER=less
  19: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  20: DOTFILES=/Users/vcombey/.dotfiles
  21: LSCOLORS=HxBxcxdxbxegedabagacad
  22: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  23: ZSHRC=/Users/vcombey/.zshrc
  24: PWD=/Users/vcombey/42ShellTester/tmp
  25: EDITOR=vim
  26: BASE16_THEME=base16-nord
  27: LANG=en_US.UTF-8
  28: ITERM_PROFILE=Default
  29: XPC_FLAGS=0x0
  30: XPC_SERVICE_NAME=0
  31: INSTALL_ROOT=/Users/vcombey/.sbcl
  32: SHLVL=3
  33: HOME=/Users/vcombey
  34: COLORFGBG=7;0
  35: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  36: LESS=-R
  37: LOGNAME=vcombey
  38: VISUAL=vim
  39: LC_CTYPE=en_US.UTF-8
  40: COLORTERM=truecolor
  41: _=/Users/vcombey/42/42sh/42sh
  42: HISTFILE=.42sh_history
  43: PS1=$> 
  44: PS2=dquote> 
  45: PS3=quote> 
  46: ------------------------------
  47: TOTAL ENVIRONMENT VARIABLES: 44[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: export: command not found
  02: export: command not found[0m

----------------------------------------------------------------

[37;1m42sh/escaping/001-escape-single-character-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711081720\TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720TOKEN201711081720$`[0m
[38;5;239m  01: TOKEN201711081720\TOKEN201711081720[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/002-escape-single-character-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711081720\\TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720\TOKEN201711081720$`[0m
[38;5;239m  01: TOKEN201711081720\\TOKEN201711081720[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/003-escape-single-character-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711081720\\\TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720\TOKEN201711081720$`[0m
[38;5;239m  01: TOKEN201711081720\\\TOKEN201711081720[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/004-escape-single-character-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711081720\\\\TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720\\TOKEN201711081720$`[0m
[38;5;239m  01: TOKEN201711081720\\\\TOKEN201711081720[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/005-escape-single-character-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TEST4\041TEST[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TEST4041TEST$`[0m
[38;5;239m  01: TEST4\041TEST[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping braces does not result in an expansion process.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \{1..2} {1\..2} {1.\.2} {1..2\}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[{]1..2}@[{]1..2}@[{]1..2}@[{]1..2}@$`[0m
[38;5;239m  01: \{1..2}@{1\..2}@{1.\.2}@{1..2\}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/002-it-expands-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\1@\2@$`[0m
[38;5;239m  01: \\{1..2}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/003-it-expands-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\\{1..2} \\\\{1..2} \\\\\{1..2} \\\\\\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\[{]1..2}@\\1@\\2@\\[{]1..2}@\\\1@\\\2@$`[0m
[38;5;239m  01: \\\{1..2}@\\\\{1..2}@\\\\\{1..2}@\\\\\\{1..2}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/001-it-does-not-expand-brackets[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping brackets does not result in an expansion process.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout \[abc] [abc\] \[abc\][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[[]abc]@[[]abc]@[[]abc]@$`[0m
[38;5;239m  01: \[abc]@[abc\]@\[abc\]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/002-escaped-inversion-mark[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an inversion mark `!` or `^` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '!' '^'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\!abc]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [\^abc][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `!@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[\^]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[1;33m  WARNING    might match_regex `^!@a@b@c@$`[0m
[31m[1;33m  WARNING    might match_regex `^[\^]@a@b@c@$`[0m
[38;5;239m  01: [\!abc]@
  02: [\^abc]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/003-it-takes-escaped-bracket-as-pattern-character[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a closing bracket ']' may be escaped in a backet expansion pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' ']'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\]def]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\]def]
  03: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\]def]
  04: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\\\]def][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@` 4 times[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@b@c@d@e@f@$`[0m
[38;5;239m  01: [abc\]def]@
  02: [abc\\\]def]@
  03: [abc\\\\\]def]@
  04: [abc\\\\\\\]def]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/002-it-does-not-escape-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol of variable expansion `$` does result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711081720_NAME=TOKEN201711081720_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\$TOKEN201711081720_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711081720_NAME`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_VALUE`[0m
[38;5;239m  01: \\$TOKEN201711081720_NAME[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..e}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@b@c@d@e@$`[0m
[38;5;239m  01: {a..e}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711081720{a..e}TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720aTOKEN201711081720@TOKEN201711081720bTOKEN201711081720@TOKEN201711081720cTOKEN201711081720@TOKEN201711081720dTOKEN201711081720@TOKEN201711081720eTOKEN201711081720@$`[0m
[38;5;239m  01: TOKEN201711081720{a..e}TOKEN201711081720@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..E}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@$`[0m
[38;5;239m  01: {A..E}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/004-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {E..A}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^E@D@C@B@A@$`[0m
[38;5;239m  01: {E..A}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/005-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711081720{E..A}TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720ETOKEN201711081720@TOKEN201711081720DTOKEN201711081720@TOKEN201711081720CTOKEN201711081720@TOKEN201711081720BTOKEN201711081720@TOKEN201711081720ATOKEN201711081720@$`[0m
[38;5;239m  01: TOKEN201711081720{E..A}TOKEN201711081720@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/006-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711081720{e..a}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720e@TOKEN201711081720d@TOKEN201711081720c@TOKEN201711081720b@TOKEN201711081720a@$`[0m
[38;5;239m  01: TOKEN201711081720{e..a}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/007-identical-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single ASCII value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {f..f}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^f@$`[0m
[38;5;239m  01: {f..f}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/008-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..b}{c..d}{e..f}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^ace@acf@ade@adf@bce@bcf@bde@bdf@$`[0m
[38;5;239m  01: {a..b}{c..d}{e..f}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/009-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711081720{a..b}abc{Z..X}def{s..s}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720aabcZdefs@TOKEN201711081720aabcYdefs@TOKEN201711081720aabcXdefs@TOKEN201711081720babcZdefs@TOKEN201711081720babcYdefs@TOKEN201711081720babcXdefs@$`[0m
[38;5;239m  01: TOKEN201711081720{a..b}abc{Z..X}def{s..s}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/010-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..z}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@.+@.?@.+@.+@_@.+@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@$`[0m
[38;5;239m  01: {A..z}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/002-simple-test-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed when at least one comma `,` is encountered.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711081720_A,TOKEN201711081720_B}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_A@TOKEN201711081720_B@$`[0m
[38;5;239m  01: {TOKEN201711081720_A,TOKEN201711081720_B}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/003-simple-test-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed with a list of three patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201711081720_A,TOKEN201711081720_B,TOKEN201711081720_C}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_A@TOKEN201711081720_B@TOKEN201711081720_C@$`[0m
[38;5;239m  01: {TOKEN201711081720_A,TOKEN201711081720_B,TOKEN201711081720_C}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^1@2@3@4@5@$`[0m
[38;5;239m  01: {1..5}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711081720{1..5}TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110817201TOKEN201711081720@TOKEN2017110817202TOKEN201711081720@TOKEN2017110817203TOKEN201711081720@TOKEN2017110817204TOKEN201711081720@TOKEN2017110817205TOKEN201711081720@$`[0m
[38;5;239m  01: TOKEN201711081720{1..5}TOKEN201711081720@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711081720{1..+5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110817201@TOKEN2017110817202@TOKEN2017110817203@TOKEN2017110817204@TOKEN2017110817205@$`[0m
[38;5;239m  01: TOKEN201711081720{1..+5}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/004-simple-ascending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-5..0}TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-5TOKEN201711081720@-4TOKEN201711081720@-3TOKEN201711081720@-2TOKEN201711081720@-1TOKEN201711081720@0TOKEN201711081720@$`[0m
[38;5;239m  01: {-5..0}TOKEN201711081720@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/005-simple-ascending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..-98}TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100TOKEN201711081720@-99TOKEN201711081720@-98TOKEN201711081720@$`[0m
[38;5;239m  01: {-100..-98}TOKEN201711081720@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/006-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {5..1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^5@4@3@2@1@$`[0m
[38;5;239m  01: {5..1}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/007-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711081720{5..1}TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110817205TOKEN201711081720@TOKEN2017110817204TOKEN201711081720@TOKEN2017110817203TOKEN201711081720@TOKEN2017110817202TOKEN201711081720@TOKEN2017110817201TOKEN201711081720@$`[0m
[38;5;239m  01: TOKEN201711081720{5..1}TOKEN201711081720@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/008-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711081720{5..+1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110817205@TOKEN2017110817204@TOKEN2017110817203@TOKEN2017110817202@TOKEN2017110817201@$`[0m
[38;5;239m  01: TOKEN201711081720{5..+1}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/009-simple-descending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {0..-5}TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^0TOKEN201711081720@-1TOKEN201711081720@-2TOKEN201711081720@-3TOKEN201711081720@-4TOKEN201711081720@-5TOKEN201711081720@$`[0m
[38;5;239m  01: {0..-5}TOKEN201711081720@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/010-simple-descending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-98..-100}TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-98TOKEN201711081720@-99TOKEN201711081720@-100TOKEN201711081720@$`[0m
[38;5;239m  01: {-98..-100}TOKEN201711081720@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/011-identical-positive-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {42..42}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42@$`[0m
[38;5;239m  01: {42..42}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/012-identical-negative-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-42..-42}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-42@$`[0m
[38;5;239m  01: {-42..-42}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/013-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}{3..4}{5..6}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^135@136@145@146@235@236@245@246@$`[0m
[38;5;239m  01: {1..2}{3..4}{5..6}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/014-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201711081720{1..2}abc{-50..-53}def{0..0}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2017110817201abc-50def0@TOKEN2017110817201abc-51def0@TOKEN2017110817201abc-52def0@TOKEN2017110817201abc-53def0@TOKEN2017110817202abc-50def0@TOKEN2017110817202abc-51def0@TOKEN2017110817202abc-52def0@TOKEN2017110817202abc-53def0@$`[0m
[38;5;239m  01: TOKEN201711081720{1..2}abc{-50..-53}def{0..0}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/015-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..100}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100@-99@-98@-97@-96@-95@-94@-93@-92@-91@-90@-89@-88@-87@-86@-85@-84@-83@-82@-81@-80@-79@-78@-77@-76@-75@-74@-73@-72@-71@-70@-69@-68@-67@-66@-65@-64@-63@-62@-61@-60@-59@-58@-57@-56@-55@-54@-53@-52@-51@-50@-49@-48@-47@-46@-45@-44@-43@-42@-41@-40@-39@-38@-37@-36@-35@-34@-33@-32@-31@-30@-29@-28@-27@-26@-25@-24@-23@-22@-21@-20@-19@-18@-17@-16@-15@-14@-13@-12@-11@-10@-9@-8@-7@-6@-5@-4@-3@-2@-1@0@1@2@3@4@5@6@7@8@9@10@11@12@13@14@15@16@17@18@19@20@21@22@23@24@25@26@27@28@29@30@31@32@33@34@35@36@37@38@39@40@41@42@43@44@45@46@47@48@49@50@51@52@53@54@55@56@57@58@59@60@61@62@63@64@65@66@67@68@69@70@71@72@73@74@75@76@77@78@79@80@81@82@83@84@85@86@87@88@89@90@91@92@93@94@95@96@97@98@99@100@$`[0m
[38;5;239m  01: {-100..100}@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/001-range-and-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with a range and 2 characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '1' '2' '3' 'a' 'b' 'z' 'C' '-' '[a-z-2]' 'a-z-2'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z-2][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `-@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a-z-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-z-2@`[0m
[31m[1;33m  WARNING    might match_regex `^-@2@a@b@z@$`[0m
[38;5;239m  01: [a-z-2]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/002-reverse-range-and-chars[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with 2 patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a4' 'a3' 'a2' 'a42' 'a[42]' 'z4' 'z3' 'z2' 'z42' 'z[42]' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-y][42]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-y][42][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `42@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z[[]42]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]42]@`[0m
[31m[1;33m  WARNING    might match_regex `^42@z2@z4@$`[0m
[38;5;239m  01: [!a-y][42]@
  02: [^a-y][42]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/003-reverse-multi-hard[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check how the value inside multiple brackets are parsed with bracket as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '][' 'a[' '1['[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!]az][[]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^]az][[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `][[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]@`[0m
[31m[1;33m  WARNING    might match_regex `^1[[]@$`[0m
[38;5;239m  01: [!]az][[]@
  02: [^]az][[]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/004-simple-bracket+char+range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to control if 2 patterns splited by a minus characters can be match.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a-0' 'a-1' 'a-2' 'b-0' 'b-1' 'b-2' 'Z-0' 'Z-1' 'Z-2' 'a1' 'Z9' 'D4'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [aZ]-[1-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a-2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `D4@`[0m
[31m[1;33m  WARNING    might match_regex `^Z-1@Z-2@a-1@a-2@$`[0m
[38;5;239m  01: [aZ]-[1-9]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/001-simple-opposit-match[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' '1' 'Z' 'd' 'e' 'f' 'def'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a1Z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a1Z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def@`[0m
[31m[1;33m  WARNING    might match_regex `^d@e@f@$`[0m
[38;5;239m  01: [!a1Z]@
  02: [^a1Z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/002-simple-opposite-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'z' '1' '2' '3' '42'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [!a-z]
  02: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [^a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `42@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@3@$`[0m
[38;5;239m  01: [!a-z]@
  02: [^a-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/001-alpha-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[a-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'f' 'z' 'A' '1' '[a-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `A@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@f@z@$`[0m
[38;5;239m  01: [a-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/002-numeric-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[0-9]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '4' '2' '1' '9' 'a' 'C' '[0-9]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [0-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]0-9]@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@4@9@$`[0m
[38;5;239m  01: [0-9]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/003-ascii-range-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the bracket expansion works with the following pattern []-z].
  One test use the following range which is the default range for bash:
  < > , ; : ! ' " ( ) [ ] { } @ $ \ # % 1 2 3 4 5 6 7 8 9 a A b B c C d D e E f F g G h H i I j J k K l L m M n N o O p P q Q r R s S t T u U v V w W x X y Y z
  The other use the ascii value, which does make more sense.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' '[' ']' '[]-z]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@c@$`[0m
[38;5;239m  01: []-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/004-ascii-range-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[1-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' ']' '[' '[1-z]' '1-z' '-'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [1-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `B@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1-z@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]1-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^2@B@Z@[[]@]@a@c@$`[0m
[38;5;239m  01: [1-z]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/001-simple-list[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a simple list of characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '[bca]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [bca][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]bca]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@b@c@$`[0m
[38;5;239m  01: [bca]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/002-multi-bracket[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with multiple brackets patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch "TOKEN201711081720abcd" "TOKEN201711081720abc" "TOKEN201711081720abdc" "TOKEN201711081720b" "TOKEN201711081720" "TOKEN201711081720\[a]b\[c]\[d]"[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout TOKEN201711081720[a]b[c][d][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720abcd@$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720abc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720abdc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720b@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201711081720[[]a]b[[]c][[]d]@`[0m
[38;5;239m  01: TOKEN201711081720[a]b[c][d]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/003-brackets-as-pattern[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` and a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' ']' 'a' 'Z' '[][]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [][][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@]@$`[0m
[38;5;239m  01: [][]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/004-multi-bracket-multi-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to match a file name which contain a bracket as first character.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 21 23 24 25 26 27 28 29 ']' '[' '[12][34]' '1234'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [12][34][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `13@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `14@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `23@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `24@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `0[0-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]12][[]34]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1234@`[0m
[31m[1;33m  WARNING    might match_regex `^13@14@23@24@$`[0m
[38;5;239m  01: [12][34]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/001-single-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a single character as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' '[a]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [a][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]a]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@$`[0m
[38;5;239m  01: [a]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/002-closing-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch ']' '[]]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout []][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[]]]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@$`[0m
[38;5;239m  01: []]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/003-opening-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' '[[]'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `[[][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@$`[0m
[38;5;239m  01: [[]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/001-declare-and-expand-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring and expanding a local variable does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_VALUE
  02: ./write_on_stdout_and_stderr $TOKEN201711081720_NAME $TOKEN201711081720_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_VALUE$`[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==54290==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010be30970 bp 0x7fff53e1fe40 sp 0x7fff53e1fdc0 T0)
  04: ==54290==The signal is caused by a READ memory access.
  05: ==54290==Hint: address points to the zero page.
  06:     #0 0x10be3096f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10be30edc in ft_strequ ft_strequ.c:6
  08:     #2 0x10bde27bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10be1f0b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10be1f62b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10be1cce5 in exec exec.c:39
  12:     #6 0x10be1ce21 in exec_and_or exec_and_or.c:13
  13:     #7 0x10be1cce5 in exec exec.c:39
  14:     #8 0x10be1e120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10be1cce5 in exec exec.c:39
  16:     #10 0x10be1e3c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10be1cce5 in exec exec.c:39
  18:     #12 0x10be1e403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10be1cce5 in exec exec.c:39
  20:     #14 0x10be1f919 in exec_program exec_program.c:10
  21:     #15 0x10be1cce5 in exec exec.c:39
  22:     #16 0x10be1a3b5 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x10be1ab12 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x10be1b309 in main_loop main_loop.c:71
  25:     #19 0x10be257e1 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==54290==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff53e1ff40  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff53e1fe40  rsp = 0x00007fff53e1fdc0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000770a2  r11 = 0x000000010f530060  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff53e20530  r15 = 0x00007fff53e20550  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==54290==ABORTING
  36: ./lib/main.sh: line 102: 54290 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/002-declare-and-expand-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an empty variable is not expanded as an empty string and results in any new argument in the command line.[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=
  02: ./write_on_stdout_and_stderr $TOKEN201711081720_NAME $TOKEN201711081720_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==54404==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000106c02970 bp 0x7fff5904de40 sp 0x7fff5904ddc0 T0)
  04: ==54404==The signal is caused by a READ memory access.
  05: ==54404==Hint: address points to the zero page.
  06:     #0 0x106c0296f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x106c02edc in ft_strequ ft_strequ.c:6
  08:     #2 0x106bb47bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x106bf10b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x106bf162b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x106beece5 in exec exec.c:39
  12:     #6 0x106beee21 in exec_and_or exec_and_or.c:13
  13:     #7 0x106beece5 in exec exec.c:39
  14:     #8 0x106bf0120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x106beece5 in exec exec.c:39
  16:     #10 0x106bf03c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x106beece5 in exec exec.c:39
  18:     #12 0x106bf0403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x106beece5 in exec exec.c:39
  20:     #14 0x106bf1919 in exec_program exec_program.c:10
  21:     #15 0x106beece5 in exec exec.c:39
  22:     #16 0x106bec3b5 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x106becb12 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x106bed309 in main_loop main_loop.c:71
  25:     #19 0x106bf77e1 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==54404==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff5904df40  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5904de40  rsp = 0x00007fff5904ddc0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x0000000000036b26  r11 = 0x000000010a2f8060  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5904e530  r15 = 0x00007fff5904e550  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==54404==ABORTING
  36: ./lib/main.sh: line 102: 54404 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/003-unknown-variable-does-not-result-in-new-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an unknown variable is not expanded as an empty string and results in any new argument in the command line.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201711081720_UNKNOWN"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201711081720_UNKNOWN TOKEN201711081720_DISPLAYED[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_DISPLAYED`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/004-existing-variable-in-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711081720_NAME=TOKEN201711081720_VALUE_OLD"[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_VALUE_NEW
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_NAME=TOKEN201711081720_VALUE_NEW$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711081720_NAME=TOKEN201711081720_VALUE_OLD$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==55178==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000103e57970 bp 0x7fff5bdf8e00 sp 0x7fff5bdf8d80 T0)
  04: ==55178==The signal is caused by a READ memory access.
  05: ==55178==Hint: address points to the zero page.
  06:     #0 0x103e5796f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x103e57edc in ft_strequ ft_strequ.c:6
  08:     #2 0x103e097bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x103e460b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x103e4662b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x103e43ce5 in exec exec.c:39
  12:     #6 0x103e43e21 in exec_and_or exec_and_or.c:13
  13:     #7 0x103e43ce5 in exec exec.c:39
  14:     #8 0x103e45120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x103e43ce5 in exec exec.c:39
  16:     #10 0x103e453c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x103e43ce5 in exec exec.c:39
  18:     #12 0x103e45403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x103e43ce5 in exec exec.c:39
  20:     #14 0x103e46919 in exec_program exec_program.c:10
  21:     #15 0x103e43ce5 in exec exec.c:39
  22:     #16 0x103e413b5 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x103e41b12 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x103e42309 in main_loop main_loop.c:71
  25:     #19 0x103e4c7e1 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==55178==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff5bdf8f00  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5bdf8e00  rsp = 0x00007fff5bdf8d80  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x000000000008a3c5  r11 = 0x000000010754f970  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5bdf94f0  r15 = 0x00007fff5bdf9510  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==55178==ABORTING
  36: ./lib/main.sh: line 102: 55178 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/005-existing-variable-in-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711081720_NAME=TOKEN201711081720_VALUE"[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_NAME=$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711081720_NAME=TOKEN201711081720_VALUE$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==55510==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0001059b9970 bp 0x7fff5a296e20 sp 0x7fff5a296da0 T0)
  04: ==55510==The signal is caused by a READ memory access.
  05: ==55510==Hint: address points to the zero page.
  06:     #0 0x1059b996f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x1059b9edc in ft_strequ ft_strequ.c:6
  08:     #2 0x10596b7bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x1059a80b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x1059a862b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x1059a5ce5 in exec exec.c:39
  12:     #6 0x1059a5e21 in exec_and_or exec_and_or.c:13
  13:     #7 0x1059a5ce5 in exec exec.c:39
  14:     #8 0x1059a7120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x1059a5ce5 in exec exec.c:39
  16:     #10 0x1059a73c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x1059a5ce5 in exec exec.c:39
  18:     #12 0x1059a7403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x1059a5ce5 in exec exec.c:39
  20:     #14 0x1059a8919 in exec_program exec_program.c:10
  21:     #15 0x1059a5ce5 in exec exec.c:39
  22:     #16 0x1059a33b5 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x1059a3b12 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x1059a4309 in main_loop main_loop.c:71
  25:     #19 0x1059ae7e1 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==55510==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff5a296f20  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5a296e20  rsp = 0x00007fff5a296da0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000c2e9c  r11 = 0x00000001090af970  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5a297510  r15 = 0x00007fff5a297530  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==55510==ABORTING
  36: ./lib/main.sh: line 102: 55510 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/006-existing-variable-in-environment-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion takes the environment variables into account.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711081720_NAME=TOKEN201711081720_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201711081720_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_VALUE$`[0m
[38;5;239m  01: $TOKEN201711081720_NAME[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/007-multiple-declaration-at-a-time[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring multiple variables in the same command line does work.[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME1=TOKEN201711081720_VALUE1 TOKEN201711081720_NAME2=TOKEN201711081720_VALUE2 TOKEN201711081720_NAME3=TOKEN201711081720_VALUE3
  02: ./write_on_stdout_and_stderr $TOKEN201711081720_NAME1 $TOKEN201711081720_NAME1
  03: ./write_on_stdout $TOKEN201711081720_NAME2
  04: ./write_on_stderr $TOKEN201711081720_NAME3[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711081720_VALUE3$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711081720_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_VALUE3$`[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==55758==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000103347970 bp 0x7fff5c908ce0 sp 0x7fff5c908c60 T0)
  04: ==55758==The signal is caused by a READ memory access.
  05: ==55758==Hint: address points to the zero page.
  06:     #0 0x10334796f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x103347edc in ft_strequ ft_strequ.c:6
  08:     #2 0x1032f97bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x1033360b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10333662b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x103333ce5 in exec exec.c:39
  12:     #6 0x103333e21 in exec_and_or exec_and_or.c:13
  13:     #7 0x103333ce5 in exec exec.c:39
  14:     #8 0x103335120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x103333ce5 in exec exec.c:39
  16:     #10 0x1033353c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x103333ce5 in exec exec.c:39
  18:     #12 0x103335403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x103333ce5 in exec exec.c:39
  20:     #14 0x103335403 in exec_complete_commands exec_complete_commands.c:11
  21:     #15 0x103333ce5 in exec exec.c:39
  22:     #16 0x103335403 in exec_complete_commands exec_complete_commands.c:11
  23:     #17 0x103333ce5 in exec exec.c:39
  24:     #18 0x103336919 in exec_program exec_program.c:10
  25:     #19 0x103333ce5 in exec exec.c:39
  26:     #20 0x1033313b5 in exec_main_loop lex_and_parse.c:18
  27:     #21 0x103331b12 in lex_and_parse lex_and_parse.c:79
  28:     #22 0x103332309 in main_loop main_loop.c:71
  29:     #23 0x10333c7e1 in main main.c:78
  30:     #24 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  31: 
  32: ==55758==Register values:
  33: rax = 0x0000000000000000  rbx = 0x00007fff5c908de0  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  34: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5c908ce0  rsp = 0x00007fff5c908c60  
  35:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000fe8d5  r11 = 0x0000000106820060  
  36: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5c909530  r15 = 0x00007fff5c909550  
  37: AddressSanitizer can not provide additional info.
  38: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  39: ==55758==ABORTING
  40: ./lib/main.sh: line 102: 55758 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/008-multiple-declaration-with-same-name[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring the same variable several times in the same command line does work and does not result in error.[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_VALUE1 TOKEN201711081720_NAME=TOKEN201711081720_VALUE2 TOKEN201711081720_NAME=TOKEN201711081720_VALUE3
  02: ./write_on_stdout $TOKEN201711081720_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711081720_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711081720_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_VALUE3$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==55910==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010ff29970 bp 0x7fff4fd26e40 sp 0x7fff4fd26dc0 T0)
  04: ==55910==The signal is caused by a READ memory access.
  05: ==55910==Hint: address points to the zero page.
  06:     #0 0x10ff2996f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10ff29edc in ft_strequ ft_strequ.c:6
  08:     #2 0x10fedb7bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10ff180b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10ff1862b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10ff15ce5 in exec exec.c:39
  12:     #6 0x10ff15e21 in exec_and_or exec_and_or.c:13
  13:     #7 0x10ff15ce5 in exec exec.c:39
  14:     #8 0x10ff17120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10ff15ce5 in exec exec.c:39
  16:     #10 0x10ff173c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10ff15ce5 in exec exec.c:39
  18:     #12 0x10ff17403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10ff15ce5 in exec exec.c:39
  20:     #14 0x10ff18919 in exec_program exec_program.c:10
  21:     #15 0x10ff15ce5 in exec exec.c:39
  22:     #16 0x10ff133b5 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x10ff13b12 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x10ff14309 in main_loop main_loop.c:71
  25:     #19 0x10ff1e7e1 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==55910==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff4fd26f40  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff4fd26e40  rsp = 0x00007fff4fd26dc0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x0000000000009b95  r11 = 0x00000001136bff08  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff4fd27530  r15 = 0x00007fff4fd27550  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==55910==ABORTING
  36: ./lib/main.sh: line 102: 55910 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/009-last-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the special variable `$?` may be expanded with the last exit status.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: ./write_on_stderr $?[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42$`[0m
[38;5;239m  01: $?[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/inline-environment-variable/001-local-variable-shouldnt-be-set[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary does not result in local variable declaration but a modified environment for the command.[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_VALUE ./display_env
  02: ./write_on_stderr $TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_NAME=TOKEN201711081720_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201711081720_VALUE`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: $TOKEN201711081720[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/001-truncating[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711081720_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_FILENAME
  02: ./write_on_stdout TOKEN201711081720_VALUE > $TOKEN201711081720_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==56275==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0001046cc970 bp 0x7fff5b583e40 sp 0x7fff5b583dc0 T0)
  04: ==56275==The signal is caused by a READ memory access.
  05: ==56275==Hint: address points to the zero page.
  06:     #0 0x1046cc96f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x1046ccedc in ft_strequ ft_strequ.c:6
  08:     #2 0x10467e7bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x1046bb0b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x1046bb62b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x1046b8ce5 in exec exec.c:39
  12:     #6 0x1046b8e21 in exec_and_or exec_and_or.c:13
  13:     #7 0x1046b8ce5 in exec exec.c:39
  14:     #8 0x1046ba120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x1046b8ce5 in exec exec.c:39
  16:     #10 0x1046ba3c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x1046b8ce5 in exec exec.c:39
  18:     #12 0x1046ba403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x1046b8ce5 in exec exec.c:39
  20:     #14 0x1046bb919 in exec_program exec_program.c:10
  21:     #15 0x1046b8ce5 in exec exec.c:39
  22:     #16 0x1046b63b5 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x1046b6b12 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x1046b7309 in main_loop main_loop.c:71
  25:     #19 0x1046c17e1 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==56275==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff5b583f40  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5b583e40  rsp = 0x00007fff5b583dc0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000f27ed  r11 = 0x0000000107dd0170  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5b584530  r15 = 0x00007fff5b584550  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==56275==ABORTING
  36: ./lib/main.sh: line 102: 56275 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711081720_FILENAME` matching_regex `^TOKEN201711081720_VALUE$`[0m
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/002-appending[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711081720_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_FILENAME
  02: ./write_on_stdout TOKEN201711081720_VALUE1 >> $TOKEN201711081720_NAME
  03: ./write_on_stdout TOKEN201711081720_VALUE2 >> $TOKEN201711081720_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==56531==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010a6d4970 bp 0x7fff5557bda0 sp 0x7fff5557bd20 T0)
  04: ==56531==The signal is caused by a READ memory access.
  05: ==56531==Hint: address points to the zero page.
  06:     #0 0x10a6d496f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10a6d4edc in ft_strequ ft_strequ.c:6
  08:     #2 0x10a6867bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10a6c30b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10a6c362b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10a6c0ce5 in exec exec.c:39
  12:     #6 0x10a6c0e21 in exec_and_or exec_and_or.c:13
  13:     #7 0x10a6c0ce5 in exec exec.c:39
  14:     #8 0x10a6c2120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10a6c0ce5 in exec exec.c:39
  16:     #10 0x10a6c23c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10a6c0ce5 in exec exec.c:39
  18:     #12 0x10a6c2403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10a6c0ce5 in exec exec.c:39
  20:     #14 0x10a6c2403 in exec_complete_commands exec_complete_commands.c:11
  21:     #15 0x10a6c0ce5 in exec exec.c:39
  22:     #16 0x10a6c3919 in exec_program exec_program.c:10
  23:     #17 0x10a6c0ce5 in exec exec.c:39
  24:     #18 0x10a6be3b5 in exec_main_loop lex_and_parse.c:18
  25:     #19 0x10a6beb12 in lex_and_parse lex_and_parse.c:79
  26:     #20 0x10a6bf309 in main_loop main_loop.c:71
  27:     #21 0x10a6c97e1 in main main.c:78
  28:     #22 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  29: 
  30: ==56531==Register values:
  31: rax = 0x0000000000000000  rbx = 0x00007fff5557bea0  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  32: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff5557bda0  rsp = 0x00007fff5557bd20  
  33:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000058f7  r11 = 0x000000010bdd0170  
  34: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff5557c530  r15 = 0x00007fff5557c550  
  35: AddressSanitizer can not provide additional info.
  36: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  37: ==56531==ABORTING
  38: ./lib/main.sh: line 102: 56531 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711081720_FILENAME` matching_regex `^TOKEN201711081720_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201711081720_FILENAME` matching_regex `^TOKEN201711081720_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/003-reading[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201711081720_FILENAME"
  02: echo "TOKEN201711081720_VALUE" > "TOKEN201711081720_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_FILENAME
  02: ./read_on_stdin < $TOKEN201711081720_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_VALUE@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==56689==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010b67d970 bp 0x7fff545d2e40 sp 0x7fff545d2dc0 T0)
  04: ==56689==The signal is caused by a READ memory access.
  05: ==56689==Hint: address points to the zero page.
  06:     #0 0x10b67d96f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10b67dedc in ft_strequ ft_strequ.c:6
  08:     #2 0x10b62f7bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10b66c0b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10b66c62b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10b669ce5 in exec exec.c:39
  12:     #6 0x10b669e21 in exec_and_or exec_and_or.c:13
  13:     #7 0x10b669ce5 in exec exec.c:39
  14:     #8 0x10b66b120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10b669ce5 in exec exec.c:39
  16:     #10 0x10b66b3c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10b669ce5 in exec exec.c:39
  18:     #12 0x10b66b403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10b669ce5 in exec exec.c:39
  20:     #14 0x10b66c919 in exec_program exec_program.c:10
  21:     #15 0x10b669ce5 in exec exec.c:39
  22:     #16 0x10b6673b5 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x10b667b12 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x10b668309 in main_loop main_loop.c:71
  25:     #19 0x10b6727e1 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==56689==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff545d2f40  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff545d2e40  rsp = 0x00007fff545d2dc0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x00000000000ef79c  r11 = 0x000000010cd80170  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff545d3530  r15 = 0x00007fff545d3550  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==56689==ABORTING
  36: ./lib/main.sh: line 102: 56689 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/tilde-expansion/001-process-tilde-expansion[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tilde expansion `~` in variable declaration.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201711081720"[0m

  STDIN:
[38;5;239m  01: TOKEN201711081720=~
  02: ./write_on_stdout TILDE:$TOKEN201711081720[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TILDE:~`[0m
[31m[1;33m  WARNING    might match_regex `TILDE:/TOKEN201711081720`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ASAN:DEADLYSIGNAL
  02: =================================================================
  03: ==56816==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010b69c970 bp 0x7fff545b3e40 sp 0x7fff545b3dc0 T0)
  04: ==56816==The signal is caused by a READ memory access.
  05: ==56816==Hint: address points to the zero page.
  06:     #0 0x10b69c96f in ft_strcmp ft_strcmp.c:11
  07:     #1 0x10b69cedc in ft_strequ ft_strequ.c:6
  08:     #2 0x10b64e7bf in get_exec_builtin exec_builtin.c:29
  09:     #3 0x10b68b0b9 in pipe_sequence_has_to_fork exec_pipeline.c:23
  10:     #4 0x10b68b62b in exec_pipeline exec_pipeline.c:64
  11:     #5 0x10b688ce5 in exec exec.c:39
  12:     #6 0x10b688e21 in exec_and_or exec_and_or.c:13
  13:     #7 0x10b688ce5 in exec exec.c:39
  14:     #8 0x10b68a120 in exec_complete_command exec_complete_command.c:45
  15:     #9 0x10b688ce5 in exec exec.c:39
  16:     #10 0x10b68a3c1 in exec_complete_commands exec_complete_commands.c:10
  17:     #11 0x10b688ce5 in exec exec.c:39
  18:     #12 0x10b68a403 in exec_complete_commands exec_complete_commands.c:11
  19:     #13 0x10b688ce5 in exec exec.c:39
  20:     #14 0x10b68b919 in exec_program exec_program.c:10
  21:     #15 0x10b688ce5 in exec exec.c:39
  22:     #16 0x10b6863b5 in exec_main_loop lex_and_parse.c:18
  23:     #17 0x10b686b12 in lex_and_parse lex_and_parse.c:79
  24:     #18 0x10b687309 in main_loop main_loop.c:71
  25:     #19 0x10b6917e1 in main main.c:78
  26:     #20 0x7fff9e932234 in start (libdyld.dylib:x86_64+0x5234)
  27: 
  28: ==56816==Register values:
  29: rax = 0x0000000000000000  rbx = 0x00007fff545b3f40  rcx = 0x0000000000000063  rdx = 0x0000000000000000  
  30: rdi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007fff545b3e40  rsp = 0x00007fff545b3dc0  
  31:  r8 = 0x0000100000000000   r9 = 0x0000000000000008  r10 = 0x000000000001663a  r11 = 0x000000010ed9ff08  
  32: r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00007fff545b4530  r15 = 0x00007fff545b4550  
  33: AddressSanitizer can not provide additional info.
  34: SUMMARY: AddressSanitizer: SEGV ft_strcmp.c:11 in ft_strcmp
  35: ==56816==ABORTING
  36: ./lib/main.sh: line 102: 56816 Abort trap: 6           /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A"B"CDEF"GHIJ""KLMNO" "P"QRS"T""U""V"WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/003-first-argument-inhibited[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the shell implementation has no special case for the first argument.[0m

  STDIN:
[38;5;239m  01: "./write_on_stdout_and_stderr" TOKEN201711081720_STDOUT TOKEN201711081720_STDERR[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_STDERR`[0m
[38;5;239m  01: "./write_on_stdout_and_stderr": no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "
  02: "TOKEN201711081720"_FIRST
  03: TOKEN201711081720_SECOND" "TOKEN201711081720_THIRD
  04: TOKEN201711081720_FOU"RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_SECOND$`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_FOURTH$`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/001-escape-double-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711081720\"TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720"TOKEN201711081720`[0m
[38;5;239m  01: TOKEN201711081720\"TOKEN201711081720[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/002-escape-double-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711081720 \" TOKEN201711081720"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720 ` TOKEN201711081720$`[0m
[38;5;239m  01: "TOKEN201711081720 \" TOKEN201711081720"[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/003-escape-double-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "\""[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^"$`[0m
[38;5;239m  01: "\""[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/004-it-results-in-error[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using backslash `\\` before the closing double-quote `"` does result in syntax error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201711081720\"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201711081720$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: >> ./lib/main.sh: line 102: 58244 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/005-it-does-not-escape-double-quote[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol double-quote `"` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\"TOKEN201711081720\\"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\TOKEN201711081720\$`[0m
[38;5;239m  01: \\"TOKEN201711081720\\"[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}"{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  01: {1..2}"{1..2}"@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  01: "{1..2}"@{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}"{1..2}"{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: "{1..2}"@{1..2}"{1..2}"{1..2}"{1..2}"{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}" {1..2} "{1..2}" "{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  01: "{1..2}"@{1..2}@"{1..2}"@"{1..2}"@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: ["a"]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc"def"gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: ["a"bc"def"gh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/variable-expansion/001-expansion-enabled[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion is processed within double quotes.[0m

  Before test:
[38;5;239m  01: export "TOKEN=TOKEN201711081720"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: >> ./lib/main.sh: line 102: 59931 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/001-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr "ABCD'EFG"HI'J"KL"'MNO'P"' Q"RS'T'U''"VW'X"Y'Z[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCD'EFGHIJ"KL"MNOP`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `QRS'T'U''VWX"YZ`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/002-multiline[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbols simple quote `'` and double quote `"` may work together in harmony in multiline mode.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711081720"_FIR'ST
  03: TOKEN201711081720_SECOND" 'TOKEN201711081720_TH"IRD
  04: TOKEN201711081720_FOU'RT"H
  05: "[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_FIR'ST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_SECOND$`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_TH"IRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_FOURTH$`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}'{1..2}'{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: "{1..2}"@{1..2}'{1..2}'{1..2}"{1..2}"{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout [""'a'""][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: [""'a'""]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: ["a"bc'def'gh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/variable-expansion/001-it-does-not-expand-in-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check if a local variable is display correctly inside simple and double quote.[0m

  Before test:
[38;5;239m  01: export "TOKEN201711081720_NAME=TOKEN201711081720_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN201711081720_NAME"$TOKEN201711081720_NAME'$TOKEN201711081720_NAME'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_VALUETOKEN201711081720_VALUE[$]TOKEN201711081720_NAME`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: >> ./lib/main.sh: line 102: 60717 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A'B'CDEF'GHIJ''KLMNO' 'P'QRS'T''U''V'WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/003-first-argument-inhibited[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the shell implementation has no special case for the first argument.[0m

  STDIN:
[38;5;239m  01: './write_on_stdout_and_stderr' TOKEN201711081720_STDOUT TOKEN201711081720_STDERR[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_STDOUT`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201711081720_STDERR`[0m
[38;5;239m  01: './write_on_stdout_and_stderr': no such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/005-multiline-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr '
  02: 'TOKEN201711081720'_FIRST
  03: TOKEN201711081720_SECOND' 'TOKEN201711081720_THIRD
  04: TOKEN201711081720_FOU'RT'H
  05: '[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_FIRST$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_SECOND$`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_THIRD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_FOURTH$`[0m
[38;5;239m  01: write on stderr[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/001-escape-simple-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201711081720\'TOKEN201711081720[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720'TOKEN201711081720`[0m
[38;5;239m  01: TOKEN201711081720\'TOKEN201711081720[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/002-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr \'TOKEN201711081720_STDOUT TOKEN201711081720_STDERR\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^'TOKEN201711081720_STDOUT$`[0m
[38;5;239m  01: \'TOKEN201711081720_STDOUT[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_STDERR'$`[0m
[38;5;239m  01: TOKEN201711081720_STDERR\'[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/003-escape-simple-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: >> ./lib/main.sh: line 102: 62268 Floating point exception: 8   /Users/vcombey/42/42sh/42sh[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/005-it-does-not-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol simple-quote `'` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\'TOKEN201711081720\\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\TOKEN201711081720\\$`[0m
[38;5;239m  01: \\'TOKEN201711081720\\'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}'{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  01: {1..2}'{1..2}'@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  01: '{1..2}'@{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}'{1..2}'{1..2}'{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: '{1..2}'@{1..2}'{1..2}'{1..2}'{1..2}'{1..2}@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}' {1..2} '{1..2}' '{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  01: '{1..2}'@{1..2}@'{1..2}'@'{1..2}'@[0m

  STDERR:
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  01: ['a']@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/vcombey/42ShellTester/tmp/write_all_arguments_on_stdout ['a'bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `bc`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `def`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `gh`[0m
[38;5;239m  01: ['a'bc'def'gh]@[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/004-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a subshell command that is executed at the end of a script is correctly returned at termination by the parent shell.[0m

  STDIN:
[38;5;239m  01: (./exit_with_status 42)[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  (no output)[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status 42[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/001-parse-error-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: 42sh: parse error near `('[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/002-parse-error-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout) (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: 42sh: parse error near `('[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/003-parse-error-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ) (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: 42sh: parse error near `)'[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/004-parse-error-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ( (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: 42sh: parse error near `('[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/001-modifies-the-child-environment-only-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: (TOKEN201711081720_NAME=TOKEN201711081720_VALUE ./display_env)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_NAME=TOKEN201711081720_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_VALUE: command not found[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/002-modifies-the-child-environment-only-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: ( (TOKEN201711081720_NAME=TOKEN201711081720_VALUE ./display_env) ; ./display_env) ; ./display_env
  02: [0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201711081720_NAME=TOKEN201711081720_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: TERM_PROGRAM=iTerm.app
  03: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  04: TERM=xterm-256color
  05: SHELL=42sh
  06: MYVIMRC=/Users/vcombey/.vimrc
  07: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  08: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  09: TERM_PROGRAM_VERSION=3.1.2
  10: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  11: ZSH=/Users/vcombey/.oh-my-zsh
  12: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  13: USER=vcombey
  14: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  15: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  16: PAGER=less
  17: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  18: DOTFILES=/Users/vcombey/.dotfiles
  19: LSCOLORS=HxBxcxdxbxegedabagacad
  20: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  21: ZSHRC=/Users/vcombey/.zshrc
  22: PWD=/Users/vcombey/42ShellTester/tmp
  23: EDITOR=vim
  24: BASE16_THEME=base16-nord
  25: LANG=en_US.UTF-8
  26: ITERM_PROFILE=Default
  27: XPC_FLAGS=0x0
  28: XPC_SERVICE_NAME=0
  29: INSTALL_ROOT=/Users/vcombey/.sbcl
  30: SHLVL=3
  31: HOME=/Users/vcombey
  32: COLORFGBG=7;0
  33: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  34: LESS=-R
  35: LOGNAME=vcombey
  36: VISUAL=vim
  37: LC_CTYPE=en_US.UTF-8
  38: COLORTERM=truecolor
  39: OLDPWD=/Users/vcombey/42ShellTester
  40: _=/Users/vcombey/42/42sh/42sh
  41: HISTFILE=.42sh_history
  42: PS1=$> 
  43: PS2=dquote> 
  44: PS3=quote> 
  45: ------------------------------
  46: TOTAL ENVIRONMENT VARIABLES: 43
  47: ------------------------------
  48: TERM_PROGRAM=iTerm.app
  49: HOMEBREW_TEMP=/tmp/vcombey/Homebrew/Temp
  50: TERM=xterm-256color
  51: SHELL=42sh
  52: MYVIMRC=/Users/vcombey/.vimrc
  53: TMPDIR=/var/folders/zz/zyxvpxvq6csfxvn_n0002hk0000m4h/T/
  54: Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.yF4S1j4HeN/Render
  55: TERM_PROGRAM_VERSION=3.1.2
  56: TERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  57: ZSH=/Users/vcombey/.oh-my-zsh
  58: SBCL_HOME=/Users/vcombey/.sbcl/lib/sbcl
  59: USER=vcombey
  60: SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.GHhTK1dmOY/Listeners
  61: __CF_USER_TEXT_ENCODING=0x5090:0x0:0x0
  62: PAGER=less
  63: HOMEBREW_CACHE=/tmp/vcombey/Homebrew/Caches
  64: DOTFILES=/Users/vcombey/.dotfiles
  65: LSCOLORS=HxBxcxdxbxegedabagacad
  66: PATH=/Users/vcombey/.brew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/munki:/Users/vcombey/.sbcl/bin:/Users/vcombey/.sbcl/bin
  67: ZSHRC=/Users/vcombey/.zshrc
  68: PWD=/Users/vcombey/42ShellTester/tmp
  69: EDITOR=vim
  70: BASE16_THEME=base16-nord
  71: LANG=en_US.UTF-8
  72: ITERM_PROFILE=Default
  73: XPC_FLAGS=0x0
  74: XPC_SERVICE_NAME=0
  75: INSTALL_ROOT=/Users/vcombey/.sbcl
  76: SHLVL=3
  77: HOME=/Users/vcombey
  78: COLORFGBG=7;0
  79: ITERM_SESSION_ID=w0t0p0:E9A8B461-5AC3-44E0-97A1-C191A4545B65
  80: LESS=-R
  81: LOGNAME=vcombey
  82: VISUAL=vim
  83: LC_CTYPE=en_US.UTF-8
  84: COLORTERM=truecolor
  85: OLDPWD=/Users/vcombey/42ShellTester
  86: _=/Users/vcombey/42/42sh/42sh
  87: HISTFILE=.42sh_history
  88: PS1=$> 
  89: PS2=dquote> 
  90: PS3=quote> 
  91: ------------------------------
  92: TOTAL ENVIRONMENT VARIABLES: 43[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201711081720_NAME=TOKEN201711081720_VALUE: command not found[0m

Total tests: 162
Total failed tests: 129
Total pending tests: 0
