ls
exit
ls
exit
base64 /dev/urandom | head -c 1000 |
grep 42 | wc -l | sed -e 's/1/Yes/g' -e 's/0/No/g'
base64 /dev/urandom | head -c 1000 |grep 42 | wc -l | sed -e 's/1/Yes/g' -e 's/0/No/g'
ls |\
cat -e
exit
cd $'\n'a$'\n'b/
exit
exit
lexit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
ls
ls
ls
dsl
sl
ds
ds
exoit
exit
ls
exit
ls {a,b}}
ls {a,b}}*
ls {{a,b}}
ls
ls
ls {a,b}}
exit
ls {a,b}}
ls {a,b}}*
ls {a,b}*
exit
env -i ls
env -i env
exit
make ASAN=yes APPEND="-DLEXER_DEBUG
ls
ls
ls
exit
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
base64 /dev/urandom | ls
ls
ls
l
dsl
sdsds
dll
l
l
l
l
ll
l
l
l
l
l
ll
l
l
ll
l
l
l
ls
exit
ls
clear
exit
ls
ls
ls
ls
ls -l
exit
ls
exit
exit
ls
exit
exit
ls
ls
exit
cat | cat -e
exit
ls
exit
{ ls ;  pwd }\
cat -e file\
\
sleep 2\
echo\
echo "My sample :"\
sleep 2\
echo\
cat sample/brace.sh
while [ 1 ];\
do\
echo "SO MUCH LOOOOP";\
done
hello (\
	hello (\
	echo hello ; hello )\
	hello\
)\
\
hello
ls\
ls\
ls | cat -e &&\
ls
case toto in ( tutu ) echo ;; ( titi ) echo  ;; ( toto ) case in ( lolo ) echo ;; ( lala ) echo ;; esac ;; esac
while [ 1 ]\
do\
	ls\
done done
if false\
then\
	echo PERDU\
elif false\
then\
	echo PERDU\
elif true\
then\
	if false\
	then\
		echo PERDU\
	elif\
		echo GAGNE\
	fi > file\
else\
	echo PERDU\
fi\
cat -e file\
\
sleep 2\
echo\
echo "My sample :"\
sleep 2\
echo\
cat sample/if.sh
while [ 1 ]\
do\
	while [ 1 ]\
	do\
		while [ 1 ]\
		do\
			while [ 1 ]\
			do\
				while [ 1 ]\
				do\
					while [ 1 ]\
					do\
						while [ 1 ]\
						do\
							while [ 1 ]\
							do\
								while [ 1 ]\
								do\
									while [ 1 ]\
									do\
										echo "SO MUCH LOOOOP"\
									done\
								done\
							done\
						done\
					done\
				done\
			done\
		done\
	done\
done
ls
exit
echo
echo dfsdf
echo seffesse
exit
dsffsddf
echo sdffsd
echo sasassa
exit
echo ldssdfsfd
echo sefssf fse sfesef sfe sfe
echo sefssf fse sfesef sfe sfe
echo a b c d
exit
echo sffse sfse sf sfe sf sef
echo -n dsdsffds
echo -e dsdsffds
echo -e dsdsffdssd dfsfd ssdfdsfsdf
echo > lala
echo bonjour > lala
cat lala
exit
exit
<lala ls
./42sh 
ls
echo lala
echo lala fs fs fsddfs fds
exit
ls -a
ls -al
ls -al libft
ls
exit
ls
exit
ls
ls
exit
echo lsls
echo lsls sdf fds sdf fd
exit
echo dfsfsdsfd
exit
exit
dsffdssdf
ls | cat -e
dsdasads | cat -e
echo sffdsdfs]
exit
ls
ls
ls
ls
ls
ls
ls
ls
ls
ls
ls
ls
exit
ls
]
v srcs/exec/exec_symb/exec_pipeline.c 
vim srcs/exec/exec_symb/exec_pipeline.c 
ls
vim srcs/exec/exec_symb/exec_simple_command.c 
vim srcs/parser_slr/get_action.c 
ls
ls
sl
sl
sl
sl
ssds
dsds
ds
dssd
ls
exit
ls
ls -R /
ls -R 
exit
ls
exit
ls
ls
ls -l
ls -l
exit
ls
ls
exit
ls dsf fds fdsdfs dfs fsd f
ls dsf fds fdsdfs dfs fsd f | cat -e
lsdf dfsfds dfs dfs | cat -e
exit
ls
dfsfdg;joig
exit
ls -R /
ls -R / | cat -e
ls -R / | cat -e ; ls -R
ls -R / | cat -e ; ls -R
ls -R / | cat -e ; ls -R
ls -R / | cat -e ; ls -R /
ls
vim srcs/job_control/job_stop.c 
exit
ls ;
exit
ls -R / | cat -e
ls -R / | cat -e | wc -l
exit
ls | cat -e
exit
ls | cat -e
exit
ls -R / | cat -e | wc -l
ls -R / | cat -e | wc -l &
ls &
ls 
ls -R / | cat -e | wc -l &
gs
exit
ls -R /
exit
case lala in ( lala ) ls;; esac
exit
while ls ; do ls | cat -e ; done
while ls ; do ls | cat -e ; done
exit
while ls ; do ls | cat -e ; done
jobs
exit
ls
exit
while test 1 ; do ls | cat -e ; done
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e]
while test 1 ; do ls | cat -e ; done | cat -e]
while test 1 ; do ls | cat -e ; done | cat -e]
while test 1 ; do ls | cat -e ; done | cat -e]
jobs
fg
fg
fg
fg
jobs
fg
bg
bg
bg
bg
bg
bg
bg
bg
bg
bgg
bg
bg
bg
bg
bg
bg
exit
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e
while test 1 ; do ls | cat -e ; done | cat -e
exit
while test 1 ; do ls | cat -e ; done | cat -e
exit
while test 1 ; do ls | cat -e ; done | cat -e
while ls ; do ls | cat -e ; done | cat -e
exit
exit
exit
while ls ; do ls | cat -e ; done | cat -e
while ls ; do ls | cat -e ; done | cat -e
exit
while ./do_nothing.sh ; do ./do_nothing.sh | cat -e ; done | cat -e
exit
echo
exit
ls
exit
ls
while ls ; do ls | cat -e ; done | cat -e
while ls ; do ls | cat -e ; done | cat -e
while ls ; do ls | cat -e ; done | cat -e
while ls ; do ls | cat -e ; done | cat -e
ls
ls
exit
